<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/30/2023 2:44:59 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="S8-WHSE-SQL-T01"
  DTS:CreatorName="PSU\jjs7199"
  DTS:DTSID="{B7297BDA-FDCB-47C4-AD52-8BC43AEBF09C}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5685.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="IDR_SF_Tracking"
  DTS:PackageType="5"
  DTS:VersionBuild="554"
  DTS:VersionGUID="{317BD38F-781F-43DA-8768-0ADA6AE8BBB4}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DW-SQL.Stage]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{49EB527A-907A-4E9A-BBDC-B5B8551264F3}"
      DTS:ObjectName="DW-SQL.Stage">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=whse_stage;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Auto Translate=False;Application Name=SSIS-Appointments_Update-{49EB527A-907A-4E9A-BBDC-B5B8551264F3}IDW-SQL-local;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.etl]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{FC1B2D11-9567-41B5-ACAC-2CCE20A7D40A}"
      DTS:ObjectName="LocalHost.etl">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=etl;Provider=MSOLEDBSQL;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.IDR]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{98116CB9-BE4F-4414-83AD-0FA7A81DA3CD}"
      DTS:ObjectName="LocalHost.IDR">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=IDR;Provider=SQLNCLI11.1;Integrated Security=SSPI;Application Name=SSIS-IDR_SF_Appointments-{98116CB9-BE4F-4414-83AD-0FA7A81DA3CD}LocalHost.IDR;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SMTP Connection Manager]"
      DTS:CreationName="SMTP"
      DTS:DTSID="{D389747A-D7EA-4696-8DFC-1A86AD07F963}"
      DTS:ObjectName="SMTP Connection Manager">
      <DTS:ObjectData>
        <SmtpConnectionManager
          ConnectionString="SmtpServer=smtp.psu.edu;UseWindowsAuthentication=False;EnableSsl=False;"
          ConnectByProxy="False" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BDD79EE5-B4E1-44AD-98A3-CF22F621CBC7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ArchiveFolder">
      <DTS:VariableValue
        DTS:DataType="8">E:\dat\Starfish\Starfish_Archive\tracking</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FEE69B61-88B1-4E25-B441-293832E6F8C2}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="(DT_WSTR,4)YEAR(GETDATE()) + &quot;-&quot; + (DT_WSTR,4)MONTH(GETDATE()) + &quot;-&quot; + (DT_WSTR,4)DAY(GETDATE())"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DatePart">
      <DTS:VariableValue
        DTS:DataType="8">2025-3-17</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7A9E87D4-3540-4D16-BC1D-9AEABE2BD359}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DestinationFolder">
      <DTS:VariableValue
        DTS:DataType="8">E:\dat\starfish\Starfish_Archive</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FC6355BD-5202-4846-9F60-C2AF98AB6D18}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Email_id_receiver">
      <DTS:VariableValue
        DTS:DataType="8">L-DWEMAIL@LISTS.PSU.EDU</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3167214E-673F-4A4E-9D8B-EA701603D65F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Email_id_sender">
      <DTS:VariableValue
        DTS:DataType="8">umg-up.biteam.datawarehouse@pennstateoffice365.onmicrosoft.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3B800CCF-4247-43D5-B3D2-EB3B2DF728DD}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="GETDATE()"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Error_Dttm">
      <DTS:VariableValue
        DTS:DataType="7">3/17/2025 2:55:47 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1E18EE8A-4242-46F4-A08D-157680512404}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileExists">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C0897314-978E-4FEB-8591-2FEA771BCAA8}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FileExistsFlag">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E8A1A3E5-6228-4DC5-B4EF-E4C714E53055}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[System::MachineName]+&quot; Starfish no Tracking File was received today - &quot;+ @[User::DatePart]+ &quot; !&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileMissingMessage">
      <DTS:VariableValue
        DTS:DataType="8">S8-WHSE-SQL-T01 Starfish no Tracking File was received today - 2025-3-17 !</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5D3DE217-F93D-417D-8EB1-157772E9B785}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[System::MachineName]+&quot; - Tracking files missing - Aborting Import!&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileMissingMsg">
      <DTS:VariableValue
        DTS:DataType="8">S8-WHSE-SQL-T01 - Tracking files missing - Aborting Import!</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6FE977FA-07DD-40A6-B90F-424CF12146A1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C346C404-29A2-41BE-B374-927AE76C662F}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::SourceFolder]+  &quot;\\&quot;+@[User::FileName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FilePath">
      <DTS:VariableValue
        DTS:DataType="8">E:\Dat\starfish\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EF3D5C39-2142-4778-9968-2EDF82DF18B2}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FileSize">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EEE5B30D-E4DC-4025-A4A9-E2CF47DD6E44}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FilesMovedCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FD3053FC-F94F-4398-A893-2460BB1E9740}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[System::MachineName]+  &quot; Number of files moved to Archive : &quot; + (DT_WSTR, 3) @[User::FilesMovedCount]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FilesMovedMsg">
      <DTS:VariableValue
        DTS:DataType="8">S8-WHSE-SQL-T01 Number of files moved to Archive : 0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B86EBF01-430D-4567-BDF1-8F0AB00F367D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileToArchive">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F18E7A79-D5F4-4135-8CD4-83FE36228337}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileToSearch">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1610D193-633B-4408-8085-8A802B09DF99}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="IsFound">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{94E6285F-E3C0-49DE-90B2-8F92A722901B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="NoFilesMoved">
      <DTS:VariableValue
        DTS:DataType="8">No Files were moved tp Archive</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{88628558-31D5-45B0-9CA6-A2D0CECD4769}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="NoMatchRowCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4FCB02B6-2AFC-484D-826C-0555558ECEF5}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RowCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BA3B951B-18EC-47F1-B59D-8171BF59F702}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RowCount_Match">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{869DC425-C7D2-4864-8AA5-C232E8F2FC1F}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RowCount_Not_Match">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{001B2294-0794-4778-AC71-1FEE10384E38}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RowsDeleted">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E684EC96-246E-4E1B-90DF-38C3882D9624}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RowsInserted">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4759A38D-5B8A-45B2-911A-4083575CD1F3}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RowsUpdated">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{65AD7851-0D0F-4475-BC29-5E9C7C15F681}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SourceFolder">
      <DTS:VariableValue
        DTS:DataType="8">E:\Dat\starfish</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5A38F1D8-3E6B-47EF-86EB-92F30606ED91}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strCaseSensitive">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F5F13606-08EF-4445-A902-E773AA0A9A3A}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[System::MachineName]==&quot;S8-WHSE-SQL-T01&quot;?&quot;S8-WHSE-SQL-T01&quot;:&#xA;@[System::MachineName]==&quot;S8-WHSE-SQL-A01&quot;?&quot;s8-whse-lst-A01&quot;:&#xA;@[System::MachineName]==&quot;S8-WHSE-SQL-A02&quot;?&quot;s8-whse-lst-A01&quot;:&#xA;@[System::MachineName]==&quot;S8-WHSE-SQL-P01&quot;?&quot;S8-WHSE-LST-P01&quot;:&#xA;@[System::MachineName]==&quot;S8-WHSE-SQL-F01&quot;?&quot;S8-WHSE-LST-P01&quot;: &quot;COUND NOT DETERMINE SERVER&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strServer">
      <DTS:VariableValue
        DTS:DataType="8">S8-WHSE-SQL-T01</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{00D42D2E-7DD8-481D-AF9A-04434CD3360B}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::ArchiveFolder] +&quot;\\&quot;+ Replace(Replace(Replace(Replace( @[User::FileName],&quot;.&quot;,&quot;_&quot;+Substring((DT_WSTR,50) GETDATE(),1,19)+&quot;.&quot;),&quot;-&quot;,&quot;&quot;),&quot;:&quot;,&quot;&quot;),&quot; &quot;,&quot;_&quot;)"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VarArchiveFullPath">
      <DTS:VariableValue
        DTS:DataType="8">E:\dat\Starfish\Starfish_Archive\tracking\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EF4804C2-7943-462D-B7BA-809278EAFB07}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::SourceFolder]+&quot;\\&quot;+ @[User::FileName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VarSourceFullPath">
      <DTS:VariableValue
        DTS:DataType="8">E:\Dat\starfish\</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="2">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">1,7,OnError</DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Check for File"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{2655218C-A249-42CC-A4CD-80B27333973E}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Check for File">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{070E046D-6608-4A3E-B6A8-D1A944BBCFEC}"
        DTS:ObjectName="{070E046D-6608-4A3E-B6A8-D1A944BBCFEC}">
        <DTS:PropertyExpression
          DTS:Name="Directory">@[User::SourceFolder]</DTS:PropertyExpression>
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="E:\Dat\starfish" />
            <FEFEProperty
              FileSpec="tracking*.csv" />
            <FEFEProperty
              FileNameRetrievalType="1" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Check for File\Get FileSize"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{549AD7BB-5D95-46C8-B582-1A17AA4A50F9}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get FileSize"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_0476611ba53149c9b83344c7451a8782"
              VSTAMajorVersion="16"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::FilePath"
              ReadWriteVariables="User::FileSize">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ST_0476611ba53149c9b83344c7451a8782.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{3FDA8DF7-53D7-4F83-89BF-8A84BA651B5A}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_0476611ba53149c9b83344c7451a8782</RootNamespace>
    <AssemblyName>ST_0476611ba53149c9b83344c7451a8782</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.IO;

#endregion

namespace ST_0476611ba53149c9b83344c7451a8782
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here

            // Retrieve the file path from SSIS variable (assumed to be User::FilePath)
            string filePath = Dts.Variables["User::FilePath"].Value.ToString();

            // Get the size of the file
            FileInfo fileInfo = new FileInfo(filePath);
            long fileSize = fileInfo.Length;

            // Store the file size in the SSIS variable User::FileSize
            Dts.Variables["User::FileSize"].Value = fileSize;

            // Mark the script task as successful
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_0476611ba53149c9b83344c7451a8782</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_0476611ba53149c9b83344c7451a8782</msb:DisplayName>
    <msb:ProjectId>{E84A1268-0E6E-49B0-9AF2-D319A6798479}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_0476611ba53149c9b83344c7451a8782.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0476611ba53149c9b83344c7451a8782.Properties.Settings.get_Default():ST_0476611ba53149c9b83344c7451a8782.Properties.Sett" +
    "ings")]

namespace ST_0476611ba53149c9b83344c7451a8782.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_0476611ba53149c9b83344c7451a8782")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_0476611ba53149c9b83344c7451a8782")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0476611ba53149c9b83344c7451a8782.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0476611ba53149c9b83344c7451a8782.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0476611ba53149c9b83344c7451a8782.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_0476611ba53149c9b83344c7451a8782.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_0476611ba53149c9b83344c7451a8782.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_0476611ba53149c9b83344c7451a8782.dll">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
XAAqAwAAAAAEAAAAAAAAAAAAAABTAMsDAAAAABAAAAAAAAAAAAAAAFwAPgAAAAAAAAAAAAEAAACk
BAAABQACAAAAAAAAU1RfMDQ3NjYxMWJhNTMxNDljOWI4MzM0NGM3NDUxYTg3ODIASW50NjQAPE1v
ZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1z
Y29ybGliAGRlZmF1bHRJbnN0YW5jZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBl
RnJvbUhhbmRsZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFR5cGUARmFpbHVyZQBn
ZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0
TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENv
bXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVi
dWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0
dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1
dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRy
aWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRy
aWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50
QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0
dHJpYnV0ZQBnZXRfVmFsdWUAc2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25p
bmcAVG9TdHJpbmcAZ2V0X0xlbmd0aABNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWlj
cm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABT
eXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfMDQ3NjYxMWJhNTMxNDljOWI4MzM0NGM3NDUxYTg3ODIu
ZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNv
bmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ARmlsZUlu
Zm8AQ3VsdHVyZUluZm8AZ2V0X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRp
YWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNl
cwBTVF8wNDc2NjExYmE1MzE0OWM5YjgzMzQ0Yzc0NTFhODc4Mi5Qcm9wZXJ0aWVzLlJlc291cmNl
cy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfMDQ3NjYxMWJhNTMxNDljOWI4MzM0NGM3NDUx
YTg3ODIuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAFN1Y2Nlc3MAZ2V0X0R0cwBT
Y3JpcHRSZXN1bHRzAE9iamVjdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABnZXRfQXNzZW1i
bHkAAAAAAB1VAHMAZQByADoAOgBGAGkAbABlAFAAYQB0AGgAAB1VAHMAZQByADoAOgBGAGkAbABl
AFMAaQB6AGUAAHFTAFQAXwAwADQANwA2ADYAMQAxAGIAYQA1ADMAMQA0ADkAYwA5AGIAOAAzADMA
NAA0AGMANwA0ADUAMQBhADgANwA4ADIALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1
AHIAYwBlAHMAAADy5v118JfaQr9X624Op9v8AAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFRAwcB
CgQgABJhBCAAEmUFIAESaRwDIAAcAyAADgMgAAoEIAEBHAYAARJ1EXkEIAASfQYgAgEOEn0It3pc
Vhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSSQMGEk0DBhIQAgYIAwYRFAQAABJJBAAAEk0FAAEB
Ek0EAAASEAMAAAEECAASSQQIABJNBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRp
b25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzA0NzY2MTFiYTUzMTQ5YzliODMzNDRjNzQ1MWE4Nzgy
AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjQAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249
djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43ALQAAADOyu++
AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNp
b249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRl
MDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFE
ULQAAAD8LQAAAAAAAAAAAAAWLgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACC4AAAAAAAAAAAAA
AABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQB7bl4jAAABAHtuXiM/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfADAANAA3ADYANgAxADEAYgBhADUAMwAxADQAOQBjADkAYgA4ADMAMwA0ADQAYwA3
ADQANQAxAGEAOAA3ADgAMgAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA5ADAANQA0AC4AMgA4ADIAOAAzAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfADAANAA3ADYANgAxADEAYgBhADUAMwAxADQAOQBjADkAYgA4ADMAMwA0ADQAYwA3ADQA
NQAxAGEAOAA3ADgAMgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgA0AAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8AMAA0ADcANgA2ADEAMQBiAGEANQAzADEANAA5AGMAOQBiADgAMwAzADQA
NABjADcANAA1ADEAYQA4ADcAOAAyAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfADAANAA3ADYANgAxADEAYgBhADUAMwAxADQAOQBjADkAYgA4ADMAMwA0ADQA
YwA3ADQANQAxAGEAOAA3ADgAMgAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4AOQAwADUANAAuADIAOAAyADgAMwAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOQAwADUANAAuADIAOAAyADgAMwAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAAoPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Check for File\Is tracking*-csv Present"
          DTS:CreationName="Microsoft.ExpressionTask"
          DTS:Description="Expression Task"
          DTS:DTSID="{909CD8D4-C16D-4D07-9488-087BCE8C3AA1}"
          DTS:ExecutableType="Microsoft.ExpressionTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Is tracking*-csv Present"
          DTS:TaskContact="Expression Task;Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <ExpressionTask
              Expression="@[User::IsFound] =  @[User::FileName]  == @[User::FileToSearch] ? TRUE : FALSE" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Check for File.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{41A6B536-8BF6-4673-9A53-EE57A603B94E}"
          DTS:From="Package\Check for File\Is tracking*-csv Present"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Check for File\Get FileSize" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{8FB89841-8FF8-45DD-AE22-2CEFED0E0C66}"
          DTS:ObjectName="{8FB89841-8FF8-45DD-AE22-2CEFED0E0C66}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::FileName" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Error Mail"
      DTS:CreationName="Microsoft.SendMailTask"
      DTS:Description="Send Mail Task"
      DTS:DTSID="{29488310-6449-4FA5-A1EB-FB4792D0182E}"
      DTS:ExecutableType="Microsoft.SendMailTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Error Mail"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:PropertyExpression
        DTS:Name="FromLine">@[User::Email_id_sender]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="MessageSource">"Failure -  Starfish ETL Importer Failed " +  @[System::MachineName] + " !"</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ToLine">@[User::Email_id_receiver]</DTS:PropertyExpression>
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Error Mail.EventHandlers[OnPreValidate]"
          DTS:CreationName="OnPreValidate"
          DTS:DTSID="{19A574DC-407A-4A95-AF3A-31ADCB68C046}"
          DTS:EventID="0"
          DTS:EventName="OnPreValidate"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{A1FA5FE8-967F-4D6D-AFEE-81EAE35CB8FB}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables />
        </DTS:EventHandler>
      </DTS:EventHandlers>
      <DTS:ObjectData>
        <SendMailTask:SendMailTaskData
          SendMailTask:SMTPServer="{D389747A-D7EA-4696-8DFC-1A86AD07F963}"
          SendMailTask:From="umg-up.biteam.datawarehouse@pennstateoffice365.onmicrosoft.com"
          SendMailTask:To="L-DWEMAIL@LISTS.PSU.EDU"
          SendMailTask:Subject="Failure Starfish ETL Failed ON"
          SendMailTask:Priority="High"
          SendMailTask:MessageSource="Failure -  Starfish ETL Importer Failed S8-WHSE-SQL-T01 !" xmlns:SendMailTask="www.microsoft.com/sqlserver/dts/tasks/sendmailtask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Files is missing Mail"
      DTS:CreationName="Microsoft.SendMailTask"
      DTS:Description="Send Mail Task"
      DTS:DTSID="{4CA89441-2358-458B-B910-69031BB936AB}"
      DTS:ExecutableType="Microsoft.SendMailTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Files is missing Mail"
      DTS:TaskContact="Send Mail Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:PropertyExpression
        DTS:Name="FromLine">@[User::Email_id_sender]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="MessageSource">@[User::FileMissingMessage]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="Subject">@[User::FileMissingMsg]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ToLine">@[User::Email_id_receiver]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <SendMailTask:SendMailTaskData
          SendMailTask:SMTPServer="{D389747A-D7EA-4696-8DFC-1A86AD07F963}"
          SendMailTask:From="umg-up.biteam.datawarehouse@pennstateoffice365.onmicrosoft.com"
          SendMailTask:To="L-DWEMAIL@LISTS.PSU.EDU"
          SendMailTask:CC="sarakaj@psu.edu"
          SendMailTask:Subject="S8-WHSE-SQL-T01 - Tracking files missing - Aborting Import!"
          SendMailTask:MessageSource="S8-WHSE-SQL-T01 Starfish no Tracking File was received today - 2025-3-17 !" xmlns:SendMailTask="www.microsoft.com/sqlserver/dts/tasks/sendmailtask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Loop Trought All Track Files"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{7499AC02-BBBD-460D-B6B2-BDBCE52A9FAC}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Loop Trought All Track Files">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{4A67A143-000F-4A0C-B839-7DB151B32C7C}"
        DTS:ObjectName="{D1AD99D4-524B-49F5-9E7F-301E545F0144}">
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="E:\dat\Starfish" />
            <FEFEProperty
              FileSpec="tracking_*.csv" />
            <FEFEProperty
              FileNameRetrievalType="1" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Loop Trought All Track Files\Importing Tracking to Stage"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{346D0EFE-63DA-49F0-9758-F7C9977B7BDC}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Importing Tracking to Stage"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <pipeline
              autoAdjustBufferSize="true"
              BLOBTempStoragePath="F:\Dat\starfish\Logs"
              bufferTempStoragePath="E:\dat\Starfish\Logs"
              defaultBufferMaxRows="100000"
              defaultBufferSize="104857600"
              version="1">
              <components>
                <component
                  refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Adding New Columns"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Adding New Columns"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Adding New Columns.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Adding New Columns.Inputs[Derived Column Input].Columns[item_ext_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="item_ext_id"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[item_ext_id]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Adding New Columns.Inputs[Derived Column Input].Columns[student_integration_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="student_integration_id"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[student_integration_id]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Adding New Columns.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Adding New Columns.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[INSERT_DT]"
                          dataType="date"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[INSERT_DT]"
                          name="INSERT_DT"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_DATE)[GETDATE]()</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_DATE)GETDATE()</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[FileName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[FileName]"
                          name="FileName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,50,1252)@[User::FileName]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,50,1252)@[User::FileName]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[File_Created_On]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="15"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[File_Created_On]"
                          name="File_Created_On"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,15,1252)[RIGHT](@[User::FileName],[FINDSTRING]([REVERSE](@[User::FileName]),"_",1) - 1)</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,15,1252)RIGHT(@[User::FileName],FINDSTRING(REVERSE(@[User::FileName]),"_",1) - 1)</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[FileSize]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[FileSize]"
                          name="FileSize"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_I4)@[User::FileSize]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_I4)@[User::FileSize]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[ETL_Source]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="10"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[ETL_Source]"
                          name="ETL_Source"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,10,1252)"STARFISH"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,10,1252)"STARFISH"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[Update_Dtm]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[Update_Dtm]"
                          name="Update_Dtm"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_DBTIMESTAMP)@[System::StartTime]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_DBTIMESTAMP)@[System::StartTime]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[tracking_integration_id]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="62"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[tracking_integration_id]"
                          name="tracking_integration_id"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,62,1252)(#{Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[item_ext_id]} + #{Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[student_integration_id]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,62,1252)(item_ext_id + student_integration_id)</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Adding New Columns.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Adding New Columns.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Adding New Columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Adding New Columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Adding New Columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Adding New Columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="DB Insert into idr-sf_tracking"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[idr].[sf_tracking]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">CHECK_CONSTRAINTS,ROWS_PER_BATCH = 1000</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[DW-SQL.Stage]"
                      connectionManagerRefId="Package.ConnectionManagers[DW-SQL.Stage]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].Columns[INSERT_DT]"
                          cachedDataType="date"
                          cachedName="INSERT_DT"
                          externalMetadataColumnId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[INSERT_DT]"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[INSERT_DT]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].Columns[ETL_Source]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="10"
                          cachedName="ETL_Source"
                          externalMetadataColumnId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[ETL_SOURCE]"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[ETL_Source]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].Columns[New_Hash]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="New_Hash"
                          externalMetadataColumnId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[Hash_DW]"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SCR _HashValue.Outputs[Output 0].Columns[New_Hash]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].Columns[File_Created_On]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="15"
                          cachedName="File_Created_On"
                          externalMetadataColumnId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[FileCreated_On]"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[File_Created_On]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].Columns[FileName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="FileName"
                          externalMetadataColumnId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[FileImported]"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[FileName]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].Columns[FileSize]"
                          cachedDataType="i4"
                          cachedName="FileSize"
                          externalMetadataColumnId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[FileSize]"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[FileSize]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].Columns[rule_name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1000"
                          cachedName="rule_name"
                          externalMetadataColumnId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[rule_name]"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[rule_name]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].Columns[creator_integration_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="creator_integration_id"
                          externalMetadataColumnId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[creator_integration_id]"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[creator_integration_id]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].Columns[tracking_type]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="tracking_type"
                          externalMetadataColumnId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[tracking_type]"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[tracking_type]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].Columns[item_origin]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="item_origin"
                          externalMetadataColumnId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[item_origin]"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[item_origin]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].Columns[course_section_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="course_section_id"
                          externalMetadataColumnId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[course_section_id]"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[course_section_id]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].Columns[item_status]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="item_status"
                          externalMetadataColumnId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[item_status]"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[item_status]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].Columns[student_integration_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="student_integration_id"
                          externalMetadataColumnId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[student_integration_id]"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[student_integration_id]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].Columns[resolved_date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="resolved_date"
                          externalMetadataColumnId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[resolved_date]"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[resolved_date]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].Columns[intervention_resolution_close_category]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="intervention_resolution_close_category"
                          externalMetadataColumnId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[intervention_resolution_close_category]"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[intervention_resolution_close_category]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].Columns[create_date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="create_date"
                          externalMetadataColumnId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[create_date]"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[create_date]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].Columns[student_institutional_email]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="student_institutional_email"
                          externalMetadataColumnId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[student_institutional_email]"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[student_institutional_email]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].Columns[success_plan_name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="success_plan_name"
                          externalMetadataColumnId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[success_plan_name]"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[success_plan_name]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].Columns[closed_by_student]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="closed_by_student"
                          externalMetadataColumnId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[closed_by_student]"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[closed_by_student]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].Columns[assigned_to_integration_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="assigned_to_integration_id"
                          externalMetadataColumnId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[assigned_to_integration_id]"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[assigned_to_integration_id]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].Columns[assigned_to_institutional_email]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="assigned_to_institutional_email"
                          externalMetadataColumnId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[assigned_to_institutional_email]"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[assigned_to_institutional_email]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].Columns[intervention_resolution_reason]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="intervention_resolution_reason"
                          externalMetadataColumnId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[intervention_resolution_reason]"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[intervention_resolution_reason]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].Columns[item_ext_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="item_ext_id"
                          externalMetadataColumnId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[item_ext_id]"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[item_ext_id]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].Columns[tracking_integration_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="62"
                          cachedName="tracking_integration_id"
                          externalMetadataColumnId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[tracking_integration_id]"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[tracking_integration_id]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[student_integration_id]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="student_integration_id" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[DELETE_FLG]"
                          dataType="wstr"
                          length="1"
                          name="DELETE_FLG" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[INSERT_DT]"
                          dataType="dbTimeStamp"
                          name="INSERT_DT" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[ETL_SOURCE]"
                          codePage="1252"
                          dataType="str"
                          length="15"
                          name="ETL_SOURCE" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[Hash_DW]"
                          dataType="wstr"
                          length="62"
                          name="Hash_DW" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[FileImported]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="FileImported" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[FileCreated_On]"
                          codePage="1252"
                          dataType="str"
                          length="25"
                          name="FileCreated_On" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[FileSize]"
                          dataType="i4"
                          name="FileSize" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[tracking_integration_id]"
                          codePage="1252"
                          dataType="str"
                          length="62"
                          name="tracking_integration_id" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[rule_name]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="rule_name" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[creator_integration_id]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="creator_integration_id" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[tracking_type]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="tracking_type" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[item_origin]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="item_origin" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[course_section_id]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="course_section_id" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[item_status]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="item_status" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[resolved_date]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="resolved_date" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[intervention_resolution_reason]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="intervention_resolution_reason" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[intervention_resolution_close_category]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="intervention_resolution_close_category" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[create_date]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="create_date" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[student_institutional_email]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="student_institutional_email" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[success_plan_name]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="success_plan_name" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[closed_by_student]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="closed_by_student" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[assigned_to_integration_id]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="assigned_to_integration_id" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[assigned_to_institutional_email]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="assigned_to_institutional_email" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[UPDATE_dtm]"
                          dataType="dbTimeStamp"
                          name="UPDATE_dtm" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[item_ext_id]"
                          codePage="1252"
                          dataType="str"
                          length="62"
                          name="item_ext_id" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input].ExternalColumns[rowid]"
                          dataType="i4"
                          name="rowid" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Get Single Row"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="Get Single Row"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT 1 AS DUMMY</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Get Single Row.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.etl]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.etl]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Get Single Row.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Get Single Row.Outputs[OLE DB Source Output].Columns[DUMMY]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Get Single Row.Outputs[OLE DB Source Output].ExternalColumns[DUMMY]"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Get Single Row.Outputs[OLE DB Source Output].Columns[DUMMY]"
                          name="DUMMY"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Get Single Row.Outputs[OLE DB Source Output].ExternalColumns[DUMMY]"
                          dataType="i4"
                          name="DUMMY" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Get Single Row.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Get Single Row.Outputs[OLE DB Source Error Output].Columns[DUMMY]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Get Single Row.Outputs[OLE DB Source Error Output].Columns[DUMMY]"
                          name="DUMMY" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Get Single Row.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Get Single Row.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Get Single Row.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Get Single Row.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Lookup"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT [tracking_integration_id],[Hash_DW]
  FROM [idr].[sf_tracking]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (SELECT [tracking_integration_id],[Hash_DW]
  FROM [idr].[sf_tracking]) [refTable]
where [refTable].[tracking_integration_id] = ? and [refTable].[Hash_DW] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="tracking_integration_id" dataType="DT_STR" length="62" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Hash_DW" dataType="DT_WSTR" length="62" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Loop Trought All Track Files\Importing Tracking to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[tracking_integration_id]};#{Package\Loop Trought All Track Files\Importing Tracking to Stage\SCR _HashValue.Outputs[Output 0].Columns[New_Hash]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Lookup.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[DW-SQL.Stage]"
                      connectionManagerRefId="Package.ConnectionManagers[DW-SQL.Stage]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Lookup.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Lookup.Inputs[Lookup Input].Columns[tracking_integration_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="62"
                          cachedName="tracking_integration_id"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[tracking_integration_id]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">tracking_integration_id</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Lookup.Inputs[Lookup Input].Columns[New_Hash]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="New_Hash"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SCR _HashValue.Outputs[Output 0].Columns[New_Hash]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">Hash_DW</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Lookup.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Lookup.Outputs[Lookup Match Output].Columns[LK_tracking_integration_id]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="62"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Lookup.Outputs[Lookup Match Output].Columns[LK_tracking_integration_id]"
                          name="LK_tracking_integration_id"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">tracking_integration_id</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Lookup.Outputs[Lookup Match Output].Columns[LK_Hash_DW]"
                          dataType="wstr"
                          errorOrTruncationOperation="Copy Column"
                          length="62"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Lookup.Outputs[Lookup Match Output].Columns[LK_Hash_DW]"
                          name="LK_Hash_DW"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">Hash_DW</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Lookup.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Lookup.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Matched rows"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Matched rows">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::RowCount_Match</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Matched rows.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Matched rows.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Matched rows.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\New Parse Error Columns"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="New Parse Error Columns"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\New Parse Error Columns.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\New Parse Error Columns.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Loop Trought All Track Files\Importing Tracking to Stage\New Parse Error Columns.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\New Parse Error Columns.Outputs[Derived Column Output].Columns[Created_Dttm]"
                          dataType="date"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\New Parse Error Columns.Outputs[Derived Column Output].Columns[Created_Dttm]"
                          name="Created_Dttm"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::Error_Dttm]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::Error_Dttm]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\New Parse Error Columns.Outputs[Derived Column Output].Columns[TaskName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="32"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\New Parse Error Columns.Outputs[Derived Column Output].Columns[TaskName]"
                          name="TaskName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,32,1252)@[System::TaskName]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,32,1252)@[System::TaskName]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\New Parse Error Columns.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Loop Trought All Track Files\Importing Tracking to Stage\New Parse Error Columns.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\New Parse Error Columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\New Parse Error Columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\New Parse Error Columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\New Parse Error Columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Push errors to starfish_ETL_Parse_Errors"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[starfish].[starfish_ETL_Parse_Errors]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">true</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[DW-SQL.Stage]"
                      connectionManagerRefId="Package.ConnectionManagers[DW-SQL.Stage]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].Columns[Created_Dttm]"
                          cachedDataType="date"
                          cachedName="Created_Dttm"
                          externalMetadataColumnId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Created_Dttm]"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\New Parse Error Columns.Outputs[Derived Column Output].Columns[Created_Dttm]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].Columns[TaskName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="32"
                          cachedName="TaskName"
                          externalMetadataColumnId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Task_Name]"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\New Parse Error Columns.Outputs[Derived Column Output].Columns[TaskName]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].Columns[Failed_Line_Text]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="Failed_Line_Text"
                          externalMetadataColumnId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Parse_Source_Line_Text]"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Record Level Parse Errors].Columns[Failed_Line_Text]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].Columns[Message]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="5000"
                          cachedName="Message"
                          externalMetadataColumnId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Parse_Error_Message]"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Record Level Parse Errors].Columns[Message]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].Columns[File_Name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="File_Name"
                          externalMetadataColumnId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Parse_Source_File]"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Record Level Parse Errors].Columns[File_Name]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].Columns[FieldName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="FieldName"
                          externalMetadataColumnId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Target_Field_Name]"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Record Level Parse Errors].Columns[FieldName]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Error_Seq]"
                          dataType="i8"
                          name="Error_Seq" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Task_Name]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Task_Name" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Parse_Control_ID]"
                          dataType="i4"
                          name="Parse_Control_ID" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Parse_Source_File]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="Parse_Source_File" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Parse_Source_Line_Text]"
                          dataType="wstr"
                          length="4000"
                          name="Parse_Source_Line_Text" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Parse_Source_Line_Offset]"
                          dataType="i4"
                          name="Parse_Source_Line_Offset" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Target_Field_Number]"
                          dataType="i4"
                          name="Target_Field_Number" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Target_Field_Name]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Target_Field_Name" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Target_Field_DataType]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Target_Field_DataType" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Target_Field_Nullable]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          name="Target_Field_Nullable" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Parse_Field_Text]"
                          dataType="wstr"
                          length="4000"
                          name="Parse_Field_Text" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Parse_PassFail_Result]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          name="Parse_PassFail_Result" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Parse_Truncation_Error]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          name="Parse_Truncation_Error" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Parse_Nullability_Error]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          name="Parse_Nullability_Error" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Parse_DataType_Error]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          name="Parse_DataType_Error" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Parse_FieldCount_Error]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          name="Parse_FieldCount_Error" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Parse_Format_Error]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          name="Parse_Format_Error" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Parse_Other_Error]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          name="Parse_Other_Error" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Parse_Error_Message]"
                          codePage="1252"
                          dataType="text"
                          name="Parse_Error_Message" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Created_Dttm]"
                          dataType="dbTimeStamp"
                          name="Created_Dttm" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Lastupd_Dttm]"
                          dataType="dbTimeStamp"
                          name="Lastupd_Dttm" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Batch_Sid]"
                          dataType="i4"
                          name="Batch_Sid" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Delete_Flag]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          name="Delete_Flag" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Src_Sys_Id]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          name="Src_Sys_Id" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="SafeParse Flat File tracking*"
                  version="13">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_6d69f28d6f704f998cd82fa2b2d3f760.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{9F9EFE2F-CF8A-4C6C-9396-51399A9FC7FB}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_6d69f28d6f704f998cd82fa2b2d3f760</RootNamespace>
    <AssemblyName>SC_0E8B4E4774024C04A3081ADD15F981F7</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <PlatformTarget>x64</PlatformTarget>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.VisualBasic" />
    <Reference Include="Microsoft.VisualBasic.Compatibility" />
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[
#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Collections.Generic;
using System.Text.RegularExpressions;
using Microsoft.VisualBasic.FileIO;
using System.Reflection;
using System.Diagnostics;
using Microsoft.SqlServer.Dts.Pipeline;
using System.Globalization;
#endregion


[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    //Variables to hold values of parameters passed in through other SSIS pipeline components:
    private string fileLocation = "";                    //path to file
    private string fileName = "";                        //Mandatory: must contain the name of a file in folder pointed to by fileLocation
    private string fileFullPath = "";                    //Contains the full path to the input file (i.e. location\name)
    private string fileNameOutputColumn = "";            //Name of the output column expected to receive the file name (MUST BE AT AND OF RECORDSET!!!)
    private string recordTextOutputColumn = "";          //Name of the output column expected to receive the text of the input line (MUST BE AT AND OF RECORDSET!!!)
    private int headerLineCount = 1;                     //If > 0, the number of input lines to skip before reading data
    private int columnHeaderLine = 1;                    //If > 0, the input line where column headings are expected (first line = 1)
    private string columnHeaderList = "";                //If non-empty, overrides columnHeaderLine with comma-separated list of column headings
    private int maxLinesToProcess = -1;                  //If > -1, the number of data lines to process (does not count header lines)
    private int maxErrorsToIgnore = 100;                 //If > -1, the number errors to encounter before throwing an exception
    private int maxEventsToLog = 100;                    //If > -1, the number of parse errors to log (allows for more errors to be ignored, without logging every one)
    private string parseLogLevel = "E";                  //If E: Errors only.  A: All parse events (warning, can result in LARGE log tables).
    private string allowExtraColumnsYN = "Y";            //If Y, columns not in the output recordset will be ignored
    private string allowMissingColumnsYN = "Y";          //If Y, columns not in the input recordset will be output as NULL
    private string failOnExtraColumnYN = "N";            //If Y, and allowExtraColumnsYN = "N", script will throw an exception instead of skipping the file
    private string failOnMissingColumnYN = "N";          //If Y, and allowMissingColumnsYN = "N", script will throw an exception instead of skipping the file
    private string failOnMissingMandatoryColumnInHeaderYN = "N"; //If Y, and allowMissingColumnsYN = "Y" but a column in mandatoryColumns is missing in the header, script will throw an exception instead of skipping the file
    private string failOnMissingMandatoryColumnInLineYN = "N"; //If Y, and allowMissingColumnsYN = "Y" but a column in mandatoryColumns is missing in an input line, script will throw an exception instead of skipping the file
    private string columnNamesCaseSensitive = "Y";       //If Y, column names are case sensitive
    private string truncateStringValuesYN = "Y";         //If Y, columns with length > output field will be truncated
    private string stripUnicodeFromNonUnicodeYN = "N";   //If Y, strings with Unicode characters destined for non-Unicode columns will have those characters stripped from the string.
    private string convertThreeCharTzsToOffsetYN = "N";    //If Y, date values with "EST,EDT,PST,PDT,etc." will be converted to offset from GMT 
    private string fixDateValuesYN = "Y";                //If Y, unparseable dates and dates with Year < earliestAllowableYear will be set to NULL
    private int earliestAllowableYear = 0;               //if fixDateValuesYN == "Y" then dates with earlier Years will be set to NULL (NOTE: For SQL Server tables with DATETIME columns this should be set to 1753. DATETIME2 columns can be as early as CE 1)
    private string allowableDateFormats = "";            //A comma-separated set of date formats (compatible with .Net DateTime class's "ParseExact" function.  Use backslas-style escapes for embedded commas
    private string convertToTimeZone = "";               //The name of the timezone to convert dates with TZ offets to when a DT_DATE or DT_DATETIME is the target field.
    private string workdayIDColumn = "";                 //Contains the name of the column in the source file that has the Workday ID
    private string lookupValueColumn = "";               //Contains the name of the column in the source file that will provide lookup information
    private string additionalDataColumn = "";            //Contains the name of the column in the source file that provides any additional information
    private string notNullColumns = "";                  //A comma-separated set of column names that are considered a parse error if NULL (i.e. empty string in input file)
    private string mandatoryColumns = "";                //A comma-separated set of column names that MUST be in the input file.  If all are not found, parsing will not continue.
    private string nonTruncateableColumns = "";          //A comma-separated set of column names that MAY NOT be truncated.  Ignored if truncateStringValuesYN = "N" (not needed because all columns would be considered non-truncateable).
    private string columnRegexPatterns = "";             //A set of column names and associated regex patterns.  Format is colname:pattern;  Use backslash-style escapes for embedded : and ;
                                                         //If the value in the input file does NOT match the pattern for a column, it is considered an error
    private Dictionary<string, string> tz3ToOffset = new Dictionary<string, string>(); //A hard-coded lookup from three-character timezoned to their GMT offsets (e.g. EST -> -05:00, EDT -> -04:00)


    //Set up misc. variables
    //colCaseSensitivity governs how column names are compared and looked up.
    //it defaults to OrdinalIgnoreCase (column names are NOT case sensitive)
    //but could be set to Ordinal if input parameter ColumnNamesCaseSensitiveYN == "Y"
    private StringComparer colCaseSensitivity = StringComparer.OrdinalIgnoreCase;

    //Variables related to the output recordset:
    private Dictionary<string, IDTSOutputColumn100> mainOutputColumnsByName = new Dictionary<string, IDTSOutputColumn100>(StringComparer.OrdinalIgnoreCase);
    private Dictionary<int, string> mainOutputColumnNamesByPosition = new Dictionary<int, string>();
    private PipelineBuffer mainOutputBuffer = null;
    //private PipelineBuffer errorDetailBuffer = null;
    //private PipelineBuffer errorSummaryBuffer = null;

    //Variables related to the flatfile recordset:
    private Dictionary<string, int> flatfileColumnsByName = new Dictionary<string, int>(StringComparer.OrdinalIgnoreCase);
    private Dictionary<int, string> flatfileColumnsByPosition = new Dictionary<int, string>();

    //Variables controlling how parsing is done:
    private bool readyToParse = false; //Assume column headings are not as desired.
    private HashSet<string> mandatoryColumnList = new HashSet<string>(StringComparer.OrdinalIgnoreCase);
    private HashSet<string> notNullColumnList = new HashSet<string>(StringComparer.OrdinalIgnoreCase);
    private HashSet<string> nonTruncateableColumnList = new HashSet<string>(StringComparer.OrdinalIgnoreCase);
    private Dictionary<string, Regex> columnRegexPatternMap = new Dictionary<string, Regex>(StringComparer.OrdinalIgnoreCase);
    private string[] dateFormatArray = { }; //empty string array
    private TimeZoneInfo convertToTimeZoneInfo = TimeZoneInfo.Local;

    //Variables related to parsing events
    private int totalParseEventsLogged = 0;         //Counter for # of parsing events performed
    private int totalLinesParsed = 0;               //Counter for # of lines parsed
    private int totalLineErrors = 0;                //Counter for # of lines with errors encountered
    private int totalFieldsParsed = 0;              //Counter for # of fields parsed
    private int totalFieldErrors = 0;               //Counter for # of fields with errors encountered
    private int totalTruncationErrors = 0;          //Counter for # of fields with truncation errors encountered
    private int totalNullabilityErrors = 0;         //Counter for # of fields with nullability errors encountered
    private int totalDataTypeErrors = 0;            //Counter for # of fields with data type errors encountered
    private int totalFieldCountErrors = 0;          //Counter for # of fields with field count errors encountered
    private int totalFormatErrors = 0;              //Counter for # of fields with format errors encountered
    private int totalOtherErrors = 0;               //Counter for # of fields or lines with other errors encountered

    public override void PreExecute()
    {
        base.PreExecute();

        //Get output column list:
        //Script sends data to the first output not named "Error Detail Output" or "Error Summary Output"
        foreach (IDTSOutput100 mo in ComponentMetaData.OutputCollection)
        {
            if (mo.Name.Equals("Output - File Data"))
            {
                //If an output not named Error Detail Output or Error Summary Output, gather a list of 
                foreach (IDTSOutputColumn100 outputColumn in mo.OutputColumnCollection)
                {
                    //Add the column to mainOutputColumns so it can be looked up by name
                    mainOutputColumnsByName.Add(outputColumn.Name, outputColumn);
                    mainOutputColumnNamesByPosition.Add(mainOutputColumnNamesByPosition.Count, outputColumn.Name);
                }
                break;
            }
        }
    }

    //Save off a copy of the output buffer (and associated objects)
    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
        base.PrimeOutput(Outputs, OutputIDs, Buffers, OutputMap);

        for (int Idx = 0; Idx < Outputs; Idx++)
        {
            if (OutputIDs[Idx] == GetOutputID(OutputMap, @"Output - File Data"))
            {
                mainOutputBuffer = Buffers[Idx];
            }
        }
    }

    private void AddFieldLevelParseLog(int parseControlID, string parseSourceFile, string parseSourceLineText, int parseSourceLineOffset,
                               int targetFieldNumber, string targetFieldName, string targetFieldDataType,
                               string targetFieldNullable, string parseFieldText, string parsePassFailResult, string parseTruncationError,
                               string parseNullabilityError, string parseDataTypeError, string parseFieldCountError,
                               string parseFormatError, string parseOtherError, string parseErrorMessage)
    {
        if (parseLogLevel == "E" && parsePassFailResult == "PASS")
            return; //Bail if we're set to ignore fields where parsing is successful
        if (totalParseEventsLogged > maxEventsToLog + 1 && maxEventsToLog != -1)
            return; //Bail if we've already logged as many events as we are allowed to

        OutputFieldLevelParseLoggingBuffer.AddRow();
        OutputFieldLevelParseLoggingBuffer.ParseControlID = parseControlID;
        OutputFieldLevelParseLoggingBuffer.ParseSourceFile = parseSourceFile;
        OutputFieldLevelParseLoggingBuffer.ParseSourceLineText = parseSourceLineText.Substring(0, Math.Min(parseSourceLineText.Length, 4000));
        OutputFieldLevelParseLoggingBuffer.ParseSourceLineOffset = parseSourceLineOffset;
        OutputFieldLevelParseLoggingBuffer.TargetFieldNumber = targetFieldNumber;
        OutputFieldLevelParseLoggingBuffer.TargetFieldName = targetFieldName;
        OutputFieldLevelParseLoggingBuffer.TargetFieldDataType = targetFieldDataType;
        OutputFieldLevelParseLoggingBuffer.TargetFieldNullable = targetFieldNullable;
        OutputFieldLevelParseLoggingBuffer.ParseFieldText = parseFieldText.Substring(0, Math.Min(parseFieldText.Length, 4000));
        OutputFieldLevelParseLoggingBuffer.ParsePassFailResult = parsePassFailResult;
        OutputFieldLevelParseLoggingBuffer.ParseTruncationError = parseTruncationError;
        OutputFieldLevelParseLoggingBuffer.ParseNullabilityError = parseNullabilityError;
        OutputFieldLevelParseLoggingBuffer.ParseDataTypeError = parseDataTypeError;
        OutputFieldLevelParseLoggingBuffer.ParseFieldCountError = parseFieldCountError;
        OutputFieldLevelParseLoggingBuffer.ParseFormatError = parseFormatError;
        OutputFieldLevelParseLoggingBuffer.ParseOtherError = parseOtherError;
        OutputFieldLevelParseLoggingBuffer.ParseErrorMessage = parseErrorMessage;

        totalParseEventsLogged++;
    }

    private void AddRecordLevelParsingError(string FailedLineText, string LookupWorkdayID, string LookupValue, string AdditionalData, string ErrorCode, string ErrorColumn, string Message)
    {
        if (totalParseEventsLogged > maxEventsToLog + 1 && maxEventsToLog != -1)
            return; //Bail if we've already logged as many events as we are allowed to
        OutputRecordLevelParseErrorsBuffer.AddRow();
        OutputRecordLevelParseErrorsBuffer.FileName = fileFullPath.Substring(0, Math.Min(fileFullPath.Length, 4000));
        OutputRecordLevelParseErrorsBuffer.FailedLineText = FailedLineText.Substring(0, Math.Min(FailedLineText.Length, 8000));
        OutputRecordLevelParseErrorsBuffer.LookupWorkdayID = LookupWorkdayID.Substring(0, Math.Min(LookupWorkdayID.Length, 255));
        OutputRecordLevelParseErrorsBuffer.LookupValue = LookupValue.Substring(0, Math.Min(LookupValue.Length, 255));
        OutputRecordLevelParseErrorsBuffer.AdditionalData = AdditionalData.Substring(0, Math.Min(AdditionalData.Length, 8000));
        OutputRecordLevelParseErrorsBuffer.ErrorCode = ErrorCode.Substring(0, Math.Min(ErrorCode.Length, 255));
        OutputRecordLevelParseErrorsBuffer.ErrorColumn = ErrorColumn.Substring(0, Math.Min(ErrorColumn.Length, 255));
        OutputRecordLevelParseErrorsBuffer.Message = Message.Substring(0, Math.Min(Message.Length, 5000));
        totalParseEventsLogged++;
    }

    private void AddFileLevelParseLog()
    {
        OutputFileLevelParseLoggingBuffer.AddRow();
        OutputFileLevelParseLoggingBuffer.ParseSourceFile = fileFullPath.Substring(0, Math.Min(fileFullPath.Length, 1000));
        OutputFileLevelParseLoggingBuffer.TotalLinesParsed = totalLinesParsed;
        OutputFileLevelParseLoggingBuffer.TotalLinesPassed = totalLinesParsed - totalLineErrors;
        OutputFileLevelParseLoggingBuffer.TotalLinesFailed = totalLineErrors;
        OutputFileLevelParseLoggingBuffer.TotalFieldsParsed = totalFieldsParsed;
        OutputFileLevelParseLoggingBuffer.TotalFieldsPassed = totalFieldsParsed - totalFieldErrors;
        OutputFileLevelParseLoggingBuffer.TotalFieldsFailed = totalFieldErrors;
        OutputFileLevelParseLoggingBuffer.TotalTruncationErrors = totalTruncationErrors;
        OutputFileLevelParseLoggingBuffer.TotalNullabilityErrors = totalNullabilityErrors;
        OutputFileLevelParseLoggingBuffer.TotalDataTypeErrors = totalDataTypeErrors;
        OutputFileLevelParseLoggingBuffer.TotalFieldCountErrors = totalFieldCountErrors;
        OutputFileLevelParseLoggingBuffer.TotalFormatErrors = totalFormatErrors;
        OutputFileLevelParseLoggingBuffer.TotalOtherErrors = totalOtherErrors;
    }


    private void ParseFlatFile()
    {

        //Get full file path and name
        fileFullPath = fileLocation.Trim();
        if (!Regex.IsMatch(fileFullPath, "^.*\\$"))
            fileFullPath = fileFullPath + "\\";
        fileFullPath = fileFullPath + fileName.Trim();

        //Set up the dictionary object to hold the 
        tz3ToOffset.Add("EDT", "-04:00");
        tz3ToOffset.Add("EST", "-05:00");
        tz3ToOffset.Add("CDT", "-05:00");
        tz3ToOffset.Add("CST", "-06:00");
        tz3ToOffset.Add("MDT", "-06:00");
        tz3ToOffset.Add("MST", "-07:00");
        tz3ToOffset.Add("PDT", "-07:00");
        tz3ToOffset.Add("PST", "-08:00");
        tz3ToOffset.Add("AKDT", "-08:00");
        tz3ToOffset.Add("AKST", "-09:00");
        tz3ToOffset.Add("HDT", "-09:00");
        tz3ToOffset.Add("HST", "-10:00");       


        //Set up the text field parser object
        TextFieldParser parser;
        try
        {
            parser = new TextFieldParser(fileFullPath);
            parser.SetDelimiters(",");
            parser.HasFieldsEnclosedInQuotes = true;
        }
        catch (Exception ex)
        {
            totalOtherErrors++;
            AddFileLevelParseLog();
            throw ex;
        }

        string[] curFields = { };   //the set of fields parsed out of an input line
        int curline = 0;            //Starting at line 
        Boolean abortParse = false;

        //Read to end of file or limit on lines to process is reached:
        while (!abortParse && !parser.EndOfData && (curline <= maxLinesToProcess || maxLinesToProcess == -1))
        {
            //Peek ahead to get the full text of the current line
            string curLineText = parser.PeekChars(8000);

            //read a line from the file, chopping it into individual strings
            curline++;
            try
            {
                curFields = parser.ReadFields();
            }
            catch (MalformedLineException ex)
            {
                totalOtherErrors++;
                totalLineErrors++;
                AddRecordLevelParsingError(curLineText, "N/A", "N/A", "N/A", "N/A", "N/A", "Unable to parse line " + curline.ToString() + " of file. [" + ex.Message + "]");
                if (totalLineErrors > maxErrorsToIgnore && maxErrorsToIgnore != -1)
                    break; //Quit reading from the file (i.e. exit from the "while(!parser.EndOfData)" loop).
                else
                    continue; //Don't bother parsing this line, just move on to the next one.
            }

            //Process header lines
            if (curline <= headerLineCount) //Line is a header line
            {
                if (curline == columnHeaderLine && columnHeaderList.Trim().Equals(""))  //Current line is the header (and the headers are not overriden by specifying the 
                {
                    //Set up some variables for column presence checking
                    bool mandatoryHeadersOK = true; //assume all mandatory columns are found
                    bool specialHeadersOK = true;   //assume Workday ID, Lookup Value and Additional Data columns are found (if requested)
                    bool expectedHeadersOK = true;  //assume all expected columns are found
                    bool extraHeadersOK = true;     //assume no extra columns are found
                    bool duplicateHeadersOK = true; //assume no duplicate headers are found

                    foreach (string colname in curFields)
                    {
                        if (flatfileColumnsByName.ContainsKey(colname))
                        {
                            AddFieldLevelParseLog(-1, fileFullPath, curLineText, curline, -1, colname, "N/A", "N/A", "", "FAIL", "N", "N", "N", "Y", "N", "N", "Duplicate column name found in input recordset.");
                            duplicateHeadersOK = false;
                        }
                        else
                        {
                            flatfileColumnsByName.Add(colname, flatfileColumnsByName.Count);
                            flatfileColumnsByPosition.Add(flatfileColumnsByPosition.Count, colname);
                        }
                    }

                    //Check against the list of columns in mandatoryColumnList
                    foreach (string colname in mandatoryColumnList)
                    {
                        if (!flatfileColumnsByName.ContainsKey(colname))
                        {
                            totalFieldCountErrors++;
                            mandatoryHeadersOK = false;
                            AddFieldLevelParseLog(-1, fileFullPath, curLineText, curline, -1, colname, "N/A", "N/A", "", "FAIL", "N", "N", "N", "Y", "N", "N", "Mandatory column missing from input recordset.");
                        }
                    }
                    //Check the "special" column list (workday ID, lookup value, and additional data)
                    if (workdayIDColumn != "" && !flatfileColumnsByName.ContainsKey(workdayIDColumn))
                    {
                        totalFieldCountErrors++;
                        specialHeadersOK = false;
                        AddFieldLevelParseLog(-1, fileFullPath, curLineText, curline, -1, workdayIDColumn, "N/A", "N/A", "", "FAIL", "N", "N", "N", "Y", "N", "N", "Workday ID column requested but missing from input recordset.");
                    }
                    if (lookupValueColumn != "" && !flatfileColumnsByName.ContainsKey(lookupValueColumn))
                    {
                        totalFieldCountErrors++;
                        specialHeadersOK = false;
                        AddFieldLevelParseLog(-1, fileFullPath, curLineText, curline, -1, lookupValueColumn, "N/A", "N/A", "", "FAIL", "N", "N", "N", "Y", "N", "N", "Lookup Value column requested but missing from input recordset.");
                    }
                    if (additionalDataColumn != "" && !flatfileColumnsByName.ContainsKey(additionalDataColumn))
                    {
                        totalFieldCountErrors++;
                        specialHeadersOK = false;
                        AddFieldLevelParseLog(-1, fileFullPath, curLineText, curline, -1, additionalDataColumn, "N/A", "N/A", "", "FAIL", "N", "N", "N", "Y", "N", "N", "Additional Data column requested but missing from input recordset.");
                    }
                    //Check expected output column list and see if they are on the input
                    foreach (string colname in mainOutputColumnsByName.Keys)
                    {
                        if (!flatfileColumnsByName.ContainsKey(colname))
                        {
                            if (colname != recordTextOutputColumn && colname != fileNameOutputColumn)
                            {
                                totalFieldCountErrors++;
                                expectedHeadersOK = false;
                                AddFieldLevelParseLog(-1, fileFullPath, curLineText, curline, -1, colname, "N/A", "N/A", "", "FAIL", "N", "N", "N", "Y", "N", "N", "Column on output recordset but missing from input recordset.");
                            }
                        }
                    }
                    //Check actual columns in file to see if all are on the output
                    foreach (string colname in flatfileColumnsByName.Keys)
                    {
                        if (!mainOutputColumnsByName.ContainsKey(colname))
                        {
                            totalFieldCountErrors++;
                            extraHeadersOK = false;
                            AddFieldLevelParseLog(-1, fileFullPath, curLineText, curline, -1, colname, "N/A", "N/A", "", "FAIL", "N", "N", "N", "Y", "N", "N", "Extra column found on input recordset.");
                        }
                    }

                    //If a mandatory column was missing, then fail package or quit
                    if (!mandatoryHeadersOK)
                    {
                        if (failOnMissingMandatoryColumnInHeaderYN == "Y")
                        {
                            bool t = true;
                            this.ComponentMetaData.FireError(-1, ComponentMetaData.Name, "Mandatory Column Missing from Input File", null, 0, out t);
                        }
                        return;
                    }
                    //If Workday ID, Lookup Value or Additional Data columns are missing (if requested), then just quit.  Don't fail package.
                    if (!specialHeadersOK)
                        return;
                    //If expected columns are missing and "Allow Missing Columns" is not "Y" then fail package or quit
                    if (!expectedHeadersOK && allowMissingColumnsYN != "Y")
                    {
                        if (failOnMissingColumnYN == "Y")
                        {
                            bool t = true;
                            this.ComponentMetaData.FireError(-1, ComponentMetaData.Name, "Expected Column Missing from Input File", null, 0, out t);
                        }
                        return;
                    }
                    //If an extra column was found and "Allow Extra Columns" is not "Y" then fail package or quit
                    if (!extraHeadersOK && allowExtraColumnsYN != "Y")
                    {
                        if (failOnExtraColumnYN == "Y")
                        {
                            bool t = true;
                            this.ComponentMetaData.FireError(-1, ComponentMetaData.Name, "Unexpected Column Found in Input File", null, 0, out t);
                        }
                        return;
                    };
                    //If a duplicate column was found then just quit
                    if (!duplicateHeadersOK)
                        return;
                }
            }
            else //Line is a data line
            {
                //Try to get the workday ID, lookup value, and additional columns:
                string workdayIDValue = "";
                string lookupValueValue = "";
                string additionalDataValue = "";
                if (flatfileColumnsByName.ContainsKey(workdayIDColumn) && flatfileColumnsByName[workdayIDColumn] < curFields.Length)
                {
                    workdayIDValue = curFields[flatfileColumnsByName[workdayIDColumn]];
                }
                if (flatfileColumnsByName.ContainsKey(lookupValueColumn) && flatfileColumnsByName[lookupValueColumn] < curFields.Length)
                {
                    lookupValueValue = curFields[flatfileColumnsByName[lookupValueColumn]];
                }
                if (flatfileColumnsByName.ContainsKey(additionalDataColumn) && flatfileColumnsByName[additionalDataColumn] < curFields.Length)
                {
                    additionalDataValue = curFields[flatfileColumnsByName[additionalDataColumn]];
                }

                //Create a new output row for the mainOutputRowBuffer 
                mainOutputBuffer.AddRow();
                //Assume all fields will parse correctly
                bool allFieldsParsedOK = true;
                string failedFields = "";

                //Iterate over the set of expected output columns (retrieved earlier in the PreExecute() method):
                for (int outColPos = 0; outColPos < mainOutputColumnNamesByPosition.Count; outColPos++)
                {
                    //Break out of the for loop if abortParse == true
                    if (abortParse)
                        break;
                    //String to hold value of the input field
                    string inColVal = "";
                    //Get the current output column name: 
                    string outColName = mainOutputColumnNamesByPosition[outColPos];
                    //Get the current output column definition:
                    IDTSOutputColumn100 outCol = mainOutputColumnsByName[outColName];
                    //String to hold the type name
                    string outColTypeName = "";
                    //String to hold the nullability
                    string outColNullable = "";

                    //Set up variables to record if/what type of errors were encountered:
                    string parseTruncationError = "N";
                    string parseNullabilityError = "N";
                    string parseDataTypeError = "N";
                    string parseFieldCountError = "N";
                    string parseFormatError = "N";
                    string parseOtherError = "N";
                    string parseUnicodeError = "N";
                    string parseDateYearError = "N";
                    string errorText = "";
                    string fieldPassFailResult = "PASS"; //Default status to "PASS"

                    //Get column type name
                    outColTypeName = outCol.DataType.ToString();
                    if (Regex.IsMatch(outColTypeName, "DT_BYTES|DT_STR|DT_WSTR"))
                    {
                        outColTypeName = outColTypeName + "(" + outCol.Length.ToString() + ")";
                    }
                    if (Regex.IsMatch(outColTypeName, "DT_DECIMAL|DT_NUMERIC"))
                    {
                        outColTypeName = outColTypeName + "(" + outCol.Precision.ToString();
                        if (outCol.Scale != 0)
                            outColTypeName = outColTypeName + "," + outCol.Scale.ToString();
                        outColTypeName = outColTypeName + ")";

                    }
                    //Get column nullability
                    if (notNullColumnList.Contains(outColName))
                        outColNullable = "NOT NULL";
                    else
                        outColNullable = "NULL";

                    //Look for the column in the set of fields on the input record:

                    if (flatfileColumnsByName.ContainsKey(outColName))
                    { //The column was found
                        //Retrieve the column's position
                        int inColPos = flatfileColumnsByName[outColName];

                        //Check to see if the array containing the current line's parsed fields
                        //is long enough to have contained the output column
                        //NOTE 1: there's no way to know if a field is "shifted left" due to a formatting error within 
                        //        the line (other than to see if the header count == field count)
                        //        e.g. Headers say to expect fields A,B,C,D,E but line had four fields.  
                        //        Were they A,B,D,E? B,C,D,E? A,B,C,E? A,B,C,D?  It's impossible to tell.
                        //NOTE 2: Since it's possible to configure the script to allow extra columns, 
                        //        There's no point in checking to see if the parsed array has more fields than expected
                        if (flatfileColumnsByName[outColName] >= curFields.Length)
                        {
                            if (allowMissingColumnsYN != "N") //allowMissingColumnsYN == "Y" or Blank
                            {
                                parseFieldCountError = "Y";
                                errorText = "Expected Column Missing from Input File";
                                mainOutputBuffer.SetNull(outColPos);
                                fieldPassFailResult = "FAIL";
                                if (mandatoryColumnList.Contains(outColName) && failOnMissingMandatoryColumnInLineYN == "Y")
                                {
                                    errorText = "Mandatory Column Missing from Input File";
                                    bool t = true;
                                    this.ComponentMetaData.FireError(-1, ComponentMetaData.Name, "Mandatory Column Missing from Input File", null, 0, out t);
                                    mainOutputBuffer.RemoveRow(); //Remove the current row from the output buffer
                                    abortParse = true; //abort parsing
                                }
                            }
                            else //allowMissingColumnsYN == "N"
                            {
                                if (failOnMissingColumnYN == "Y")
                                {
                                    bool t = true;
                                    this.ComponentMetaData.FireError(-1, ComponentMetaData.Name, "Expected Column Missing from Input File", null, 0, out t);
                                    mainOutputBuffer.RemoveRow(); //Remove the current row from the output buffer
                                    abortParse = true; //abort parsing
                                }
                                if (mandatoryColumnList.Contains(outColName) && failOnMissingMandatoryColumnInLineYN == "Y")
                                {
                                    bool t = true;
                                    this.ComponentMetaData.FireError(-1, ComponentMetaData.Name, "Mandatory Column Missing from Input File", null, 0, out t);
                                    mainOutputBuffer.RemoveRow(); //Remove the current row from the output buffer
                                    abortParse = true; //abort parsing
                                }
                            }
                        }
                        else
                        {
                            //Retrieve the text of the column from the current parsed input record
                            inColVal = curFields[inColPos];

                            //If the string is empty, consider it NULL
                            if (inColVal.Equals(""))
                            {
                                if (notNullColumnList.Contains(outColName))
                                {
                                    allFieldsParsedOK = false;
                                    parseNullabilityError = "Y";
                                    failedFields = failedFields + outColName + ",";
                                }
                                mainOutputBuffer.SetNull(outColPos);
                            }
                            else //Parse the fields
                            {
                                //Pick the right parser/setter based on the desired output data type
                                switch (outCol.DataType)
                                {
                                    #region Type Cases for Parsing
                                    case DataType.DT_BOOL:
                                        {
                                            try //try to cast to System.Boolean and add to row with SetBoolean()
                                            {
                                                System.Boolean v;
                                                v = System.Boolean.Parse(inColVal);
                                                mainOutputBuffer.SetBoolean(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    //DataType DT_BYTES Not Supported
                                    //case DataType.DT_BYTES:
                                    //    {
                                    //        try //try to cast to Array of System.Byte and add to row with SetBytes()
                                    //        {
                                    //           Array of System.Byte v;
                                    //           v = Array of System.Byte.Parse(inColVal);
                                    //           mainOutputBuffer.SetBytes(outColPos,v);
                                    //        } catch(Exception ex) {
                                    //           //handleerrors
                                    //           parseDataTypeError = "Y";
                                    //           errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                    //           mainOutputBuffer.SetNull(outColPos);
                                    //           fieldPassFailResult = "FAIL";
                                    //        }
                                    //        break;
                                    //    }
                                    case DataType.DT_CY:
                                        {
                                            try //try to cast to System.Decimal and add to row with SetDecimal()
                                            {
                                                System.Decimal v;
                                                v = System.Decimal.Parse(inColVal);
                                                mainOutputBuffer.SetDecimal(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_DATE:
                                        {
                                            try //try to cast to System.DateTime and add to row with SetDateTime()
                                            {
                                                if(convertThreeCharTzsToOffsetYN == "Y")
                                                {
                                                    foreach(KeyValuePair<string,string> kvp in this.tz3ToOffset)
                                                    {
                                                        inColVal = Regex.Replace(inColVal, kvp.Key, kvp.Value);
                                                    }
                                                }
                                                System.DateTimeOffset v;
                                                if (dateFormatArray.Length > 0)
                                                    v = System.DateTimeOffset.ParseExact(inColVal, dateFormatArray, CultureInfo.InvariantCulture, DateTimeStyles.None);
                                                else
                                                    v = System.DateTimeOffset.Parse(inColVal);
                                                v = v.ToUniversalTime();
                                                v = TimeZoneInfo.ConvertTime(v, convertToTimeZoneInfo);

                                                //Check for dates with invalid year (less than earliestAllowableYear)
                                                if (fixDateValuesYN.Equals("Y") && v.Year < earliestAllowableYear)
                                                {
                                                    parseDataTypeError = "Y"; //Consider an improper date a data type error
                                                    fieldPassFailResult = "FAIL";
                                                    parseDateYearError = "Y";
                                                    errorText = "Date with Year < " + earliestAllowableYear.ToString();
                                                    mainOutputBuffer.SetNull(outColPos);
                                                }
                                                else
                                                {
                                                    mainOutputBuffer.SetDateTime(outColPos, new DateTime(v.Year, v.Month, v.Day, v.Hour, v.Minute, v.Second, v.Millisecond));
                                                }
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_DBDATE:
                                        {
                                            try //try to cast to System.DateTimeOffset and add to row with SetDate()
                                            {
                                                System.DateTimeOffset v;
                                                if (dateFormatArray.Length > 0)
                                                    v = System.DateTimeOffset.ParseExact(inColVal, dateFormatArray, CultureInfo.InvariantCulture, DateTimeStyles.None);
                                                else
                                                    v = System.DateTimeOffset.Parse(inColVal);
                                                v = v.ToUniversalTime();
                                                v = TimeZoneInfo.ConvertTime(v, convertToTimeZoneInfo);

                                                //Check for dates with invalid year (less than earliestAllowableYear)
                                                if (fixDateValuesYN.Equals("Y") && v.Year < earliestAllowableYear)
                                                {
                                                    parseDataTypeError = "Y"; //Consider an improper date a data type error
                                                    fieldPassFailResult = "FAIL";
                                                    parseDateYearError = "Y";
                                                    errorText = "Date with Year < " + earliestAllowableYear.ToString();
                                                    mainOutputBuffer.SetNull(outColPos);
                                                }
                                                else
                                                {
                                                    mainOutputBuffer.SetDateTime(outColPos, new DateTime(v.Year, v.Month, v.Day, v.Hour, v.Minute, v.Second, v.Millisecond));
                                                }
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_DBTIME:
                                        {
                                            try //try to cast to System.TimeSpan and add to row with SetTime()
                                            {
                                                System.TimeSpan v;
                                                v = System.TimeSpan.Parse(inColVal);
                                                mainOutputBuffer.SetTime(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_DBTIME2:
                                        {
                                            try //try to cast to System.TimeSpan and add to row with SetTime()
                                            {
                                                System.TimeSpan v;
                                                v = System.TimeSpan.Parse(inColVal);
                                                mainOutputBuffer.SetTime(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_DBTIMESTAMP:
                                        {
                                            try //try to cast to System.DateTime and add to row with SetDateTime()
                                            {
                                                System.DateTimeOffset v;
                                                if (dateFormatArray.Length > 0)
                                                    v = System.DateTimeOffset.ParseExact(inColVal, dateFormatArray, CultureInfo.InvariantCulture, DateTimeStyles.None);
                                                else
                                                    v = System.DateTimeOffset.Parse(inColVal);
                                                v = v.ToUniversalTime();
                                                v = TimeZoneInfo.ConvertTime(v, convertToTimeZoneInfo);

                                                //Check for dates with invalid year (less than earliestAllowableYear)
                                                if (fixDateValuesYN.Equals("Y") && v.Year < earliestAllowableYear)
                                                {
                                                    parseDataTypeError = "Y"; //Consider an improper date a data type error
                                                    fieldPassFailResult = "FAIL";
                                                    parseDateYearError = "Y";
                                                    errorText = "Date with Year < " + earliestAllowableYear.ToString();
                                                    mainOutputBuffer.SetNull(outColPos);
                                                }
                                                else
                                                {
                                                    mainOutputBuffer.SetDateTime(outColPos, new DateTime(v.Year, v.Month, v.Day, v.Hour, v.Minute, v.Second, v.Millisecond));
                                                }
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_DBTIMESTAMP2:
                                        {
                                            try //try to cast to System.DateTime and add to row with SetDateTime()
                                            {
                                                System.DateTimeOffset v;
                                                if (dateFormatArray.Length > 0)
                                                    v = System.DateTimeOffset.ParseExact(inColVal, dateFormatArray, CultureInfo.InvariantCulture, DateTimeStyles.None);
                                                else
                                                    v = System.DateTimeOffset.Parse(inColVal);
                                                v = v.ToUniversalTime();
                                                v = TimeZoneInfo.ConvertTime(v, convertToTimeZoneInfo);

                                                //Check for dates with invalid year (less than earliestAllowableYear)
                                                if (fixDateValuesYN.Equals("Y") && v.Year < earliestAllowableYear)
                                                {
                                                    parseDataTypeError = "Y"; //Consider an improper date a data type error
                                                    fieldPassFailResult = "FAIL";
                                                    parseDateYearError = "Y";
                                                    errorText = "Date with Year < " + earliestAllowableYear.ToString();
                                                    mainOutputBuffer.SetNull(outColPos);
                                                }
                                                else
                                                {
                                                    mainOutputBuffer.SetDateTime(outColPos, new DateTime(v.Year, v.Month, v.Day, v.Hour, v.Minute, v.Second, v.Millisecond));
                                                }
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_DBTIMESTAMPOFFSET:
                                        {
                                            try //try to cast to System.DateTimeOffset and add to row with SetDateTimeOffset()
                                            {
                                                System.DateTimeOffset v;
                                                v = System.DateTimeOffset.Parse(inColVal);
                                                //Check for dates with invalid year (less than earliestAllowableYear)

                                                if (fixDateValuesYN.Equals("Y") && v.Year < earliestAllowableYear)
                                                {
                                                    parseDataTypeError = "Y"; //Consider an improper date a data type error
                                                    fieldPassFailResult = "FAIL";
                                                    parseDateYearError = "Y";
                                                    errorText = "Date with Year < " + earliestAllowableYear.ToString();
                                                    mainOutputBuffer.SetNull(outColPos);
                                                }
                                                else
                                                {
                                                    mainOutputBuffer.SetDateTimeOffset(outColPos, v);
                                                }
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_DECIMAL:
                                        {
                                            try //try to cast to System.Decimal and add to row with SetDecimal()
                                            {
                                                System.Decimal v;
                                                v = System.Decimal.Parse(inColVal);
                                                mainOutputBuffer.SetDecimal(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_FILETIME:
                                        {
                                            try //try to cast to System.DateTime and add to row with SetDateTime()
                                            {
                                                System.DateTimeOffset v;
                                                if (dateFormatArray.Length > 0)
                                                    v = System.DateTimeOffset.ParseExact(inColVal, dateFormatArray, CultureInfo.InvariantCulture, DateTimeStyles.None);
                                                else
                                                    v = System.DateTimeOffset.Parse(inColVal);
                                                v = v.ToUniversalTime();
                                                v = TimeZoneInfo.ConvertTime(v, convertToTimeZoneInfo);

                                                //Check for dates with invalid year (less than earliestAllowableYear)
                                                if (fixDateValuesYN.Equals("Y") && v.Year < earliestAllowableYear)
                                                {
                                                    parseDataTypeError = "Y"; //Consider an improper date a data type error
                                                    fieldPassFailResult = "FAIL";
                                                    parseDateYearError = "Y";
                                                    errorText = "Date with Year < " + earliestAllowableYear.ToString();
                                                    mainOutputBuffer.SetNull(outColPos);
                                                }
                                                else
                                                {
                                                    mainOutputBuffer.SetDateTime(outColPos, new DateTime(v.Year, v.Month, v.Day, v.Hour, v.Minute, v.Second, v.Millisecond));
                                                }
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_GUID:
                                        {
                                            try //try to cast to System.Guid and add to row with SetGuid()
                                            {
                                                System.Guid v;
                                                v = System.Guid.Parse(inColVal);
                                                mainOutputBuffer.SetGuid(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_I1:
                                        {
                                            try //try to cast to System.SByte and add to row with SetSByte()
                                            {
                                                System.SByte v;
                                                v = System.SByte.Parse(inColVal);
                                                mainOutputBuffer.SetSByte(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_I2:
                                        {
                                            try //try to cast to System.Int16 and add to row with SetInt16()
                                            {
                                                System.Int16 v;
                                                v = System.Int16.Parse(inColVal);
                                                mainOutputBuffer.SetInt16(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_I4:
                                        {
                                            try //try to cast to System.Int32 and add to row with SetInt32()
                                            {
                                                System.Int32 v;
                                                v = System.Int32.Parse(inColVal);
                                                mainOutputBuffer.SetInt32(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_I8:
                                        {
                                            try //try to cast to System.Int64 and add to row with SetInt64()
                                            {
                                                System.Int64 v;
                                                v = System.Int64.Parse(inColVal);
                                                mainOutputBuffer.SetInt64(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    //DataType DT_IMAGE Not Supported
                                    //case DataType.DT_IMAGE:
                                    //    {
                                    //        try //try to cast to N/A and add to row with AddBlobData or AddBlobData()
                                    //        {
                                    //           N/A v;
                                    //           v = N/A.Parse(inColVal);
                                    //           mainOutputBuffer.AddBlobData or AddBlobData(outColPos,v);
                                    //        } catch(Exception ex) {
                                    //           //handleerrors
                                    //           parseDataTypeError = "Y";
                                    //           errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                    //           mainOutputBuffer.SetNull(outColPos);
                                    //           fieldPassFailResult = "FAIL";
                                    //        }
                                    //        break;
                                    //    }
                                    case DataType.DT_NTEXT:
                                        {
                                            try //try to cast to System.String and add to row with SetString()
                                            {
                                                string v = inColVal;
                                                //Truncate strings longer than allowable size
                                                if (inColVal.Length > outCol.Length)
                                                {
                                                    parseTruncationError = "Y";
                                                    fieldPassFailResult = "FAIL";
                                                    errorText = "String would be truncated";
                                                    if (truncateStringValuesYN.Equals("Y"))
                                                    {
                                                        if (nonTruncateableColumnList.Contains(outColName))
                                                            v = null;
                                                        else
                                                            v = inColVal.Substring(0, outCol.Length);
                                                    }
                                                }
                                                if (columnRegexPatternMap.ContainsKey(outColName))
                                                {
                                                    if (!columnRegexPatternMap[outColName].IsMatch(inColVal))
                                                    {
                                                        fieldPassFailResult = "FAIL";
                                                        if (errorText != "") errorText = errorText + " and ";
                                                        errorText = errorText + "String value failed to match regular expression pattern";
                                                        parseFormatError = "Y";
                                                    }
                                                }
                                                mainOutputBuffer.SetString(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    //DataType DT_NULL Not Supported
                                    //case DataType.DT_NULL:
                                    //    {
                                    //        try //try to cast to N/A and add to row with SetNull()
                                    //        {
                                    //           N/A v;
                                    //           v = N/A.Parse(inColVal);
                                    //           mainOutputBuffer.SetNull(outColPos,v);
                                    //        } catch(Exception ex) {
                                    //           //handleerrors
                                    //           parseDataTypeError = "Y";
                                    //           errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                    //           mainOutputBuffer.SetNull(outColPos);
                                    //           fieldPassFailResult = "FAIL";
                                    //        }
                                    //        break;
                                    //    }
                                    case DataType.DT_NUMERIC:
                                        {
                                            try //try to cast to System.Decimal and add to row with SetDecimal()
                                            {
                                                System.Decimal v;
                                                v = System.Decimal.Parse(inColVal);
                                                mainOutputBuffer.SetDecimal(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_R4:
                                        {
                                            try //try to cast to System.Single and add to row with SetSingle()
                                            {
                                                System.Single v;
                                                v = System.Single.Parse(inColVal);
                                                mainOutputBuffer.SetSingle(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_R8:
                                        {
                                            try //try to cast to System.Double and add to row with SetDouble()
                                            {
                                                System.Double v;
                                                v = System.Double.Parse(inColVal);
                                                mainOutputBuffer.SetDouble(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_STR:
                                        {
                                            try //try to cast to System.String and add to row with SetString()
                                            {
                                                //Strip Unicode characters from non-unicode target columns if requested
                                                if (this.stripUnicodeFromNonUnicodeYN == "Y")
                                                {
                                                    inColVal = Regex.Replace(inColVal, @"[^\u0000-\u007F]+", string.Empty);
                                                }
                                                string v = inColVal;
                                                //Truncate strings longer than allowable size
                                                if (inColVal.Length > outCol.Length)
                                                {
                                                    parseTruncationError = "Y";
                                                    fieldPassFailResult = "FAIL";
                                                    errorText = "String would be truncated";
                                                    if (truncateStringValuesYN.Equals("Y"))
                                                    {
                                                        if (nonTruncateableColumnList.Contains(outColName))
                                                            v = null;
                                                        else
                                                            v = inColVal.Substring(0, outCol.Length);
                                                    }
                                                }
                                                //Check for Unicode input with non-Unicode target column
                                                if (Regex.IsMatch(inColVal, "[^\x00-\x7F]"))
                                                {
                                                    fieldPassFailResult = "FAIL";
                                                    if (errorText != "") errorText = errorText + " and ";
                                                    errorText = errorText + "Unicode character found for non-unicode target column";
                                                    parseUnicodeError = "Y";
                                                    parseFormatError = "Y";
                                                }
                                                if (columnRegexPatternMap.ContainsKey(outColName))
                                                {
                                                    if (!columnRegexPatternMap[outColName].IsMatch(inColVal))
                                                    {
                                                        fieldPassFailResult = "FAIL";
                                                        if (errorText != "") errorText = errorText + " and ";
                                                        errorText = errorText + "String value failed to match regular expression pattern";
                                                        parseFormatError = "Y";
                                                    }
                                                }
                                                mainOutputBuffer.SetString(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_TEXT:
                                        {
                                            try //try to cast to System.String and add to row with SetString()
                                            {
                                                string v = inColVal;
                                                //Truncate strings longer than allowable size
                                                if (inColVal.Length > outCol.Length)
                                                {
                                                    parseTruncationError = "Y";
                                                    fieldPassFailResult = "FAIL";
                                                    errorText = "String would be truncated";
                                                    if (truncateStringValuesYN.Equals("Y"))
                                                        if (truncateStringValuesYN.Equals("Y"))
                                                        {
                                                            if (nonTruncateableColumnList.Contains(outColName))
                                                                v = null;
                                                            else
                                                                v = inColVal.Substring(0, outCol.Length);
                                                        }
                                                }
                                                //Check for Unicode input with non-Unicode target column
                                                if (Regex.IsMatch(inColVal, "[^\x00-\x7F]"))
                                                {
                                                    fieldPassFailResult = "FAIL";
                                                    if (errorText != "") errorText = errorText + " and ";
                                                    errorText = errorText + "Unicode character found for non-unicode target column";
                                                    parseUnicodeError = "Y";
                                                    parseFormatError = "Y";
                                                }
                                                if (columnRegexPatternMap.ContainsKey(outColName))
                                                {
                                                    if (!columnRegexPatternMap[outColName].IsMatch(inColVal))
                                                    {
                                                        fieldPassFailResult = "FAIL";
                                                        if (errorText != "") errorText = errorText + " and ";
                                                        errorText = errorText + "String value failed to match regular expression pattern";
                                                        parseFormatError = "Y";
                                                    }
                                                }
                                                mainOutputBuffer.SetString(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_UI1:
                                        {
                                            try //try to cast to System.Byte and add to row with SetByte()
                                            {
                                                System.Byte v;
                                                v = System.Byte.Parse(inColVal);
                                                mainOutputBuffer.SetByte(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_UI2:
                                        {
                                            try //try to cast to System.UInt16 and add to row with SetUInt16()
                                            {
                                                System.UInt16 v;
                                                v = System.UInt16.Parse(inColVal);
                                                mainOutputBuffer.SetUInt16(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_UI4:
                                        {
                                            try //try to cast to System.UInt32 and add to row with SetUInt32()
                                            {
                                                System.UInt32 v;
                                                v = System.UInt32.Parse(inColVal);
                                                mainOutputBuffer.SetUInt32(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_UI8:
                                        {
                                            try //try to cast to System.UInt64 and add to row with SetUInt64()
                                            {
                                                System.UInt64 v;
                                                v = System.UInt64.Parse(inColVal);
                                                mainOutputBuffer.SetUInt64(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_WSTR:
                                        {
                                            try //try to cast to System.String and add to row with SetString()
                                            {
                                                string v = inColVal;
                                                //Truncate strings longer than allowable size
                                                if (inColVal.Length > outCol.Length)
                                                {
                                                    parseTruncationError = "Y";
                                                    fieldPassFailResult = "FAIL";
                                                    errorText = "String would be truncated";
                                                    if (truncateStringValuesYN.Equals("Y"))
                                                    {
                                                        if (nonTruncateableColumnList.Contains(outColName))
                                                            v = null;
                                                        else
                                                            v = inColVal.Substring(0, outCol.Length);
                                                    }
                                                }
                                                if (columnRegexPatternMap.ContainsKey(outColName))
                                                {
                                                    if (!columnRegexPatternMap[outColName].IsMatch(inColVal))
                                                    {
                                                        fieldPassFailResult = "FAIL";
                                                        if (errorText != "") errorText = errorText + " and ";
                                                        errorText = errorText + "String value failed to match regular expression pattern";
                                                        parseFormatError = "Y";
                                                    }
                                                }
                                                mainOutputBuffer.SetString(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                        #endregion
                                }
                            }
                        }
                        totalFieldsParsed++; //Increment the count of fields parsed
                        //Write a field-level log entry:
                        AddFieldLevelParseLog(-1, fileFullPath, curLineText, curline, outColPos, outColName, outColTypeName, outColNullable, inColVal, fieldPassFailResult, parseTruncationError, parseNullabilityError, parseDataTypeError, parseFieldCountError, parseFormatError, parseOtherError, errorText);
                    } //End of processing where the expected column was found in the input recordset
                    else //The expected column was not found in the input recordset.
                    {
                        //It might be the column the user has chosen to hold the file name (account for case senstivity here)
                        if (columnNamesCaseSensitive == "Y" && outColName == fileNameOutputColumn || columnNamesCaseSensitive != "Y" && outColName.ToUpper() == fileNameOutputColumn.ToUpper())
                        {
                            mainOutputBuffer.SetString(outColPos, fileFullPath);
                        }
                        //It might be the column the user has chosen to hold the text of the input line (account for case senstivity here)
                        else if (columnNamesCaseSensitive == "Y" && outColName == recordTextOutputColumn || columnNamesCaseSensitive != "Y" && outColName.ToUpper() == recordTextOutputColumn.ToUpper())
                        {
                            mainOutputBuffer.SetString(outColPos, curLineText.Substring(0, Math.Min(4000, curLineText.Length)));
                        }
                        else //If it's not the file name or record text column, it truly is missing...It's actually a column missing from the input recordset
                        {
                            //An exception would have been thrown by now if allowMissingColumnsYN was "N" or the column is in the mandatory column list
                            //So just add a NULL:
                            fieldPassFailResult = "FAIL";
                            parseFieldCountError = "Y";
                            mainOutputBuffer.SetNull(outColPos);
                            //Uncomment the line below if writing a field-level "missing input field" log entry for every record:
                            //  AddFieldLevelParseLog(-1, fileFullPath, curLineText, curline, outColPos, outColName, outColTypeName, outColNullable, inColVal, fieldPassFailResult, "N", "N", "N", "Y", "N", "N", "Field missing from input record set.");
                        }
                    }
                    //Perform post-parse error handling at the field level:
                    if (fieldPassFailResult == "FAIL")
                    {
                        failedFields = failedFields + outColName + ",";
                        totalFieldErrors++;
                        if (parseTruncationError == "Y")
                        {
                            totalTruncationErrors++;
                            if (truncateStringValuesYN != "Y" || nonTruncateableColumnList.Contains(outColName))
                                allFieldsParsedOK = false;
                        }
                        if (parseNullabilityError == "Y")
                        {
                            totalNullabilityErrors++;
                            if (notNullColumnList.Contains(outColName))
                                allFieldsParsedOK = false;
                        }
                        if (parseDataTypeError == "Y")
                        {
                            totalDataTypeErrors++;
                            if (parseDateYearError != "Y" || fixDateValuesYN != "Y") //Allow a data type error to slide if it's also a bad-year and fixing dates is allowable
                                allFieldsParsedOK = false;
                        }
                        if (parseFieldCountError == "Y")
                            totalFieldCountErrors++;
                        if (parseFormatError == "Y" || parseUnicodeError == "Y")
                            totalFormatErrors++;
                        if (parseDateYearError == "Y" && fixDateValuesYN != "Y")
                            allFieldsParsedOK = false;
                        if (parseOtherError == "Y")
                            totalOtherErrors++;
                    } //End of post-parse error handling at the field level
                }

                //Increment the count of lines parsed
                totalLinesParsed++;
                //Check to see if a parsing exception has been caught:
                if (!allFieldsParsedOK)
                {
                    mainOutputBuffer.RemoveRow(); //Get rid of the output buffer
                    totalLineErrors++; ; //increment error line counter
                    if (totalLineErrors <= maxErrorsToIgnore || maxErrorsToIgnore == -1)
                    {
                        AddRecordLevelParsingError(curLineText, workdayIDValue, lookupValueValue, additionalDataValue, "", failedFields.Substring(0, Math.Min(failedFields.Length, 255)), "The following columns failed to parse: " + failedFields.Substring(0, failedFields.Length - 1));
                    }
                    if (totalLineErrors > maxErrorsToIgnore && maxErrorsToIgnore != -1)
                    {
                        AddRecordLevelParsingError(curLineText, workdayIDValue, lookupValueValue, additionalDataValue, "", failedFields.Substring(0, Math.Min(failedFields.Length, 255)), "The following columns failed to parse: " + failedFields.Substring(0, failedFields.Length - 1));
                        bool cancel = true;
                        ComponentMetaData.FireError(-1, "Custom Flat File Parser", "Maximum Number of Error Lines to Ignore (" + maxErrorsToIgnore.ToString() + ") exceeded in file \"" + fileFullPath + "\".", "", 0, out cancel);
                        parser.ReadToEnd(); //Don't bother reading the rest of the input records.
                    }
                }
                //Create a new output record buffer:
                mainOutputBuffer.NextRow();
            }
        }
        parser.Close(); //Release the file.

    }


    public override void InputConfigurationParameter_ProcessInput(InputConfigurationParameterBuffer Buffer)
    {
        bool alreadyProcessedInput = false; //Only actually process one record.

        //Process the input variables from the FIRST ROW ENCOUNTERED ONLY!!!
        // (user can pipe in through a SQL query or other means, but only the first file encountered will be parsed)
        while (Buffer.NextRow())
        {
            if (!alreadyProcessedInput)
            {
                InputConfigurationParameter_ProcessInputRow(Buffer);
                alreadyProcessedInput = true;
            }
        }

        //After the last record in the last buffer segment is reached, 
        if (Buffer.EndOfRowset())
        {
            //Check value of readyToParse before actually parsing file.  It could be set to false if
            //the headers were provided as an input string (instead of being picked up from a header line in the file)
            //but there were issues with the headers (e.g. a missing mandatory field, missing field where not allowed, etc.)
            if (readyToParse)
                ParseFlatFile();
            //Log a file-level entry with the results of the parsing (if any was performed)
            AddFileLevelParseLog();
        }

    }

    //Read input records.  By design, the script should only get one input 
    //record, which it only needs so that the data in the Derived Column that holds
    //parameters can be retrieved.  However, it should be noted that if Input0 gets multiple 
    //rows ONLY THE FIRST ROW will be used.   
    public override void InputConfigurationParameter_ProcessInputRow(InputConfigurationParameterBuffer Row)
    {
        //Set variables to the values in the input row (or defaults where the corresponding input column "_IsNull" value is true)
        fileLocation = !Row.FileLocation_IsNull ? Row.FileLocation : "";
        fileName = !(Row.FileName_IsNull) ? Row.FileName : "";
        headerLineCount = !(Row.HeaderLineCount_IsNull) ? Row.HeaderLineCount : 1;
        columnHeaderLine = !(Row.ColumnHeaderLine_IsNull) ? Row.ColumnHeaderLine : 1;
        columnHeaderList = !(Row.ColumnHeaderList_IsNull) ? Row.ColumnHeaderList : "";
        maxLinesToProcess = !(Row.MaxLinesToProcess_IsNull) ? Row.MaxLinesToProcess : -1;
        maxErrorsToIgnore = !(Row.MaxErrorsToIgnore_IsNull) ? Row.MaxErrorsToIgnore : 100;
        maxEventsToLog = !(Row.MaxEventsToLog_IsNull) ? Row.MaxEventsToLog : 100;
        parseLogLevel = !(Row.ParseLogLevelAEAllorErrorsOnly_IsNull) ? Row.ParseLogLevelAEAllorErrorsOnly : "E";
        allowExtraColumnsYN = !(Row.AllowExtraColumnsYN_IsNull) ? Row.AllowExtraColumnsYN : "";
        allowMissingColumnsYN = !(Row.AllowMissingColumnsYN_IsNull) ? Row.AllowMissingColumnsYN : "";
        columnNamesCaseSensitive = !(Row.ColumnNamesCaseSensitiveYN_IsNull) ? Row.ColumnNamesCaseSensitiveYN : "N";
        truncateStringValuesYN = !(Row.TruncateStringValuesYN_IsNull) ? Row.TruncateStringValuesYN : "Y";
        stripUnicodeFromNonUnicodeYN = !(Row.StripUnicodefromNonUnicodeYN_IsNull) ? Row.StripUnicodefromNonUnicodeYN : "N";
        convertThreeCharTzsToOffsetYN = !(Row.ConvertThreeCharTimezonedtoOffsetsYN_IsNull) ? Row.ConvertThreeCharTimezonedtoOffsetsYN : "N";
        fixDateValuesYN = !(Row.FixDateValuesYN_IsNull) ? Row.FixDateValuesYN : "Y";
        earliestAllowableYear = !(Row.EarliestAllowableYear_IsNull) ? Row.EarliestAllowableYear : 0;
        allowableDateFormats = !(Row.AllowableDateFormats_IsNull) ? Row.AllowableDateFormats : ":";
        convertToTimeZone = !(Row.ConverttoTimeZone_IsNull) ? Row.ConverttoTimeZone : "";
        workdayIDColumn = !(Row.WorkdayIDColumn_IsNull) ? Row.WorkdayIDColumn : "";
        lookupValueColumn = !(Row.LookupValueColumn_IsNull) ? Row.LookupValueColumn : "";
        additionalDataColumn = !(Row.AdditionalDataColumn_IsNull) ? Row.AdditionalDataColumn : "";
        notNullColumns = !(Row.NotNullColumns_IsNull) ? Row.NotNullColumns : "";
        mandatoryColumns = !(Row.MandatoryColumns_IsNull) ? Row.MandatoryColumns : "";
        nonTruncateableColumns = !(Row.NonTruncateableColumns_IsNull) ? Row.NonTruncateableColumns : "";
        columnRegexPatterns = !(Row.ColumnRegexPatterns_IsNull) ? Row.ColumnRegexPatterns : "";
        fileNameOutputColumn = !(Row.FileNameOutputColumn_IsNull) ? Row.FileNameOutputColumn : "";
        recordTextOutputColumn = !(Row.RecordTextOutputColumn_IsNull) ? Row.RecordTextOutputColumn : "";

        failOnExtraColumnYN = !(Row.FailOnExtraColumnYN_IsNull) ? Row.FailOnExtraColumnYN : "N";
        failOnMissingColumnYN = !(Row.FailOnMissingColumnYN_IsNull) ? Row.FailOnMissingColumnYN : "N";
        failOnMissingMandatoryColumnInHeaderYN = !(Row.FailOnMissingMandatoryColumnInHeaderYN_IsNull) ? Row.FailOnMissingMandatoryColumnInHeaderYN : "N";
        failOnMissingMandatoryColumnInLineYN = !(Row.FailOnMissingMandatoryColumnInLineYN_IsNull) ? Row.FailOnMissingMandatoryColumnInLineYN : "N";

        //Only make column names case sensitive if input variable ColumnNamesCaseSensitiveYN is "Y"
        if (columnNamesCaseSensitive == "Y")
        {
            //set the comparer to Ordinal (i.e. case sensitive)
            this.colCaseSensitivity = StringComparer.Ordinal;

            //Re-add the IDTSOutputColumn100 objects to a new case-sensitive version of mainOutputColumnsByName 
            Dictionary<string, IDTSOutputColumn100> tmpMainOutputColumnsByName = new Dictionary<string, IDTSOutputColumn100>();
            foreach (string k in mainOutputColumnsByName.Keys)
            {
                tmpMainOutputColumnsByName.Add(k, mainOutputColumnsByName[k]);
            }
            mainOutputColumnsByName = tmpMainOutputColumnsByName;
            //Re-create the other column name Dictionary and HashSet objects as case-sensitive versions
            flatfileColumnsByName = new Dictionary<string, int>();
            columnRegexPatternMap = new Dictionary<string, Regex>();
        }

        //Process input variables that are lists (not-null columns, mandatory columns, date formats, and regex patterns for columns)
        mandatoryColumnList.Clear();
        if (mandatoryColumns != "")
            mandatoryColumnList = new HashSet<string>(mandatoryColumns.Split(','), colCaseSensitivity);
        notNullColumnList.Clear();
        if (notNullColumns != "")
            notNullColumnList = new HashSet<string>(this.notNullColumns.Split(','), colCaseSensitivity);
        nonTruncateableColumnList.Clear();
        if (nonTruncateableColumns != "")
            nonTruncateableColumnList = new HashSet<string>(this.nonTruncateableColumns.Split(','), colCaseSensitivity);
        if (allowableDateFormats != "")
            dateFormatArray = Regex.Split(allowableDateFormats, @"(?<!($|[^\\])(\\\\)*?\\)\,");
        columnRegexPatternMap.Clear();
        if (columnRegexPatterns != "")
        {
            //Split the string into substrings on the semi-colon
            foreach (string colpat in Regex.Split(columnRegexPatterns, @"(?<!($|[^\\])(\\\\)*?\\)\;"))
            {
                //Split the column:pattern entry into individual parts
                string[] splitpat = Regex.Split(colpat, @"(?<!($|[^\\])(\\\\)*?\\)\:");
                //If it looks like a valid entry, attempt to add it to the map
                if (splitpat.Length == 2 && splitpat[0] != "" && splitpat[1] != "")
                {
                    try
                    {
                        //Try to create a new Regex object
                        Regex newpattern = new Regex(splitpat[1]);
                        columnRegexPatternMap.Add(splitpat[0], newpattern);
                    }
                    catch
                    {
                        //Do nothing - fail gently if user formats the ColumnRegexPatterns input variable incorrectly
                    }
                }
            }

        }

        //Process the column header list (if one is given)
        if (!columnHeaderList.Trim().Equals(""))
        {
            //Set up some variables for column presence checking
            bool mandatoryHeadersOK = true; //assume all mandatory columns are found
            bool specialHeadersOK = true;   //assume Workday ID, Lookup Value and Additional Data columns are found (if requested)
            bool expectedHeadersOK = true;  //assume all expected columns are found
            bool extraHeadersOK = true;     //assume no extra columns are found
            bool duplicateHeadersOK = true; //assume no duplicate headers are found

            foreach (string colname in columnHeaderList.Trim().Split(','))
            {
                if (flatfileColumnsByName.ContainsKey(colname))
                {
                    AddFieldLevelParseLog(-1, fileFullPath, columnHeaderList, -1, -1, colname, "N/A", "N/A", "", "FAIL", "N", "N", "N", "Y", "N", "N", "Duplicate column name found in input recordset.");
                    duplicateHeadersOK = false;
                }
                else
                {
                    flatfileColumnsByName.Add(colname, flatfileColumnsByName.Count);
                    flatfileColumnsByPosition.Add(flatfileColumnsByPosition.Count, colname);
                }
            }

            //Check against the list of columns in mandatoryColumnList
            foreach (string colname in mandatoryColumnList)
            {
                if (!flatfileColumnsByName.ContainsKey(colname))
                {
                    totalFieldCountErrors++;
                    mandatoryHeadersOK = false;
                    AddFieldLevelParseLog(-1, fileFullPath, "N/A", -1, -1, colname, "N/A", "N/A", "", "FAIL", "N", "N", "N", "Y", "N", "N", "Mandatory column missing from input recordset.");
                }
            }
            if (workdayIDColumn != "" && !flatfileColumnsByName.ContainsKey(workdayIDColumn))
            {
                totalFieldCountErrors++;
                specialHeadersOK = false;
                AddFieldLevelParseLog(-1, fileFullPath, "N/A", -1, -1, workdayIDColumn, "N/A", "N/A", "", "FAIL", "N", "N", "N", "Y", "N", "N", "Workday ID column requested but missing from input recordset.");
            }
            if (lookupValueColumn != "" && !flatfileColumnsByName.ContainsKey(lookupValueColumn))
            {
                totalFieldCountErrors++;
                specialHeadersOK = false;
                AddFieldLevelParseLog(-1, fileFullPath, "N/A", -1, -1, lookupValueColumn, "N/A", "N/A", "", "FAIL", "N", "N", "N", "Y", "N", "N", "Lookup Value column requested but missing from input recordset.");
            }
            if (additionalDataColumn != "" && !flatfileColumnsByName.ContainsKey(additionalDataColumn))
            {
                totalFieldCountErrors++;
                specialHeadersOK = false;
                AddFieldLevelParseLog(-1, fileFullPath, "N/A", -1, -1, additionalDataColumn, "N/A", "N/A", "", "FAIL", "N", "N", "N", "Y", "N", "N", "Additional Data column requested but missing from input recordset.");
            }
            //Check expected output column list and see if they are on the input
            foreach (string colname in mainOutputColumnsByName.Keys)
            {
                if (!flatfileColumnsByName.ContainsKey(colname))
                {
                    totalFieldCountErrors++;
                    expectedHeadersOK = false;
                    AddFieldLevelParseLog(-1, fileFullPath, "N/A", -1, -1, colname, "N/A", "N/A", "", "FAIL", "N", "N", "N", "Y", "N", "N", "Column on output recordset but missing from input recordset.");
                }
            }
            //Check actual columns in file to see if all are on the output
            foreach (string colname in flatfileColumnsByName.Keys)
            {
                if (!mainOutputColumnsByName.ContainsKey(colname))
                {
                    totalFieldCountErrors++;
                    extraHeadersOK = false;
                    AddFieldLevelParseLog(-1, fileFullPath, "N/A", -1, -1, colname, "N/A", "N/A", "", "FAIL", "N", "N", "N", "Y", "N", "N", "Extra column found on input recordset.");
                }
            }

            //If a mandatory column was missing, then fail package or quit
            if (!mandatoryHeadersOK)
            {
                if (failOnMissingMandatoryColumnInHeaderYN == "Y")
                {
                    bool t = true;
                    this.ComponentMetaData.FireError(-1, ComponentMetaData.Name, "Mandatory Column Missing from Input File", null, 0, out t);
                }
                return;
            }
            //If Workday ID, Lookup Value or Additional Data columns are missing (if requested), then just quit.  Don't fail package.
            if (!specialHeadersOK)
                return;
            //If expected columns are missing and "Allow Missing Columns" is not "Y" then fail package or quit
            if (!expectedHeadersOK && allowMissingColumnsYN != "Y")
            {
                if (failOnMissingColumnYN == "Y")
                {
                    bool t = true;
                    this.ComponentMetaData.FireError(-1, ComponentMetaData.Name, "Expected Column Missing from Input File", null, 0, out t);
                }
                return;
            }
            //If an extra column was found and "Allow Extra Columns" is not "Y" then fail package or quit
            if (!extraHeadersOK && allowExtraColumnsYN != "Y")
            {
                if (failOnExtraColumnYN == "Y")
                {
                    bool t = true;
                    this.ComponentMetaData.FireError(-1, ComponentMetaData.Name, "Unexpected Column Found in Input File", null, 0, out t);
                }
                return;
            };
            //If a duplicate column was found then just quit
            if (!duplicateHeadersOK)
                return;


            //Process the desired convert-to timezone:
            if (convertToTimeZone != "")
            {
                //Attempt to create a new TimeZoneInfo object based on the string the user passed in
                //The convertToTimeZoneInfo object is already instantiated at declaration time as 
                //TimeZoneInfo.Local()
                //  NOTE: If this fails, the component will throw an exception.  This is the proper
                //  action, as it would not be good to load data at this point.
                convertToTimeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById(convertToTimeZone);
            }
        }

        readyToParse = true; //If we reached this point, the parser may read the file.

    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class InputConfigurationParameterBuffer: ScriptBuffer

{
    public InputConfigurationParameterBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String FileLocation
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool FileLocation_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String FileName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool FileName_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Int32 HeaderLineCount
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[2]);
        }
    }
    public bool HeaderLineCount_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Int32 ColumnHeaderLine
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[3]);
        }
    }
    public bool ColumnHeaderLine_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String ColumnHeaderList
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool ColumnHeaderList_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public Int32 MaxLinesToProcess
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[5]);
        }
    }
    public bool MaxLinesToProcess_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public Int32 MaxErrorsToIgnore
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[6]);
        }
    }
    public bool MaxErrorsToIgnore_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public Int32 MaxEventsToLog
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[7]);
        }
    }
    public bool MaxEventsToLog_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    public String ParseLogLevelAEAllorErrorsOnly
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[8]);
        }
    }
    public bool ParseLogLevelAEAllorErrorsOnly_IsNull
    {
        get
        {
            return IsNull(8);
        }
    }

    public String AllowMissingColumnsYN
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[9]);
        }
    }
    public bool AllowMissingColumnsYN_IsNull
    {
        get
        {
            return IsNull(9);
        }
    }

    public String AllowExtraColumnsYN
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[10]);
        }
    }
    public bool AllowExtraColumnsYN_IsNull
    {
        get
        {
            return IsNull(10);
        }
    }

    public String TruncateStringValuesYN
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[11]);
        }
    }
    public bool TruncateStringValuesYN_IsNull
    {
        get
        {
            return IsNull(11);
        }
    }

    public String FixDateValuesYN
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[12]);
        }
    }
    public bool FixDateValuesYN_IsNull
    {
        get
        {
            return IsNull(12);
        }
    }

    public String AllowableDateFormats
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[13]);
        }
    }
    public bool AllowableDateFormats_IsNull
    {
        get
        {
            return IsNull(13);
        }
    }

    public String ConverttoTimeZone
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[14]);
        }
    }
    public bool ConverttoTimeZone_IsNull
    {
        get
        {
            return IsNull(14);
        }
    }

    public String WorkdayIDColumn
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[15]);
        }
    }
    public bool WorkdayIDColumn_IsNull
    {
        get
        {
            return IsNull(15);
        }
    }

    public String LookupValueColumn
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[16]);
        }
    }
    public bool LookupValueColumn_IsNull
    {
        get
        {
            return IsNull(16);
        }
    }

    public String AdditionalDataColumn
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[17]);
        }
    }
    public bool AdditionalDataColumn_IsNull
    {
        get
        {
            return IsNull(17);
        }
    }

    public String NotNullColumns
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[18]);
        }
    }
    public bool NotNullColumns_IsNull
    {
        get
        {
            return IsNull(18);
        }
    }

    public String MandatoryColumns
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[19]);
        }
    }
    public bool MandatoryColumns_IsNull
    {
        get
        {
            return IsNull(19);
        }
    }

    public String ColumnRegexPatterns
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[20]);
        }
    }
    public bool ColumnRegexPatterns_IsNull
    {
        get
        {
            return IsNull(20);
        }
    }

    public String FileNameOutputColumn
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[21]);
        }
    }
    public bool FileNameOutputColumn_IsNull
    {
        get
        {
            return IsNull(21);
        }
    }

    public String RecordTextOutputColumn
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[22]);
        }
    }
    public bool RecordTextOutputColumn_IsNull
    {
        get
        {
            return IsNull(22);
        }
    }

    public Int32 EarliestAllowableYear
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[23]);
        }
    }
    public bool EarliestAllowableYear_IsNull
    {
        get
        {
            return IsNull(23);
        }
    }

    public String NonTruncateableColumns
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[24]);
        }
    }
    public bool NonTruncateableColumns_IsNull
    {
        get
        {
            return IsNull(24);
        }
    }

    public String ColumnNamesCaseSensitiveYN
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[25]);
        }
    }
    public bool ColumnNamesCaseSensitiveYN_IsNull
    {
        get
        {
            return IsNull(25);
        }
    }

    public String FailOnExtraColumnYN
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[26]);
        }
    }
    public bool FailOnExtraColumnYN_IsNull
    {
        get
        {
            return IsNull(26);
        }
    }

    public String FailOnMissingColumnYN
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[27]);
        }
    }
    public bool FailOnMissingColumnYN_IsNull
    {
        get
        {
            return IsNull(27);
        }
    }

    public String FailOnMissingMandatoryColumnInHeaderYN
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[28]);
        }
    }
    public bool FailOnMissingMandatoryColumnInHeaderYN_IsNull
    {
        get
        {
            return IsNull(28);
        }
    }

    public String FailOnMissingMandatoryColumnInLineYN
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[29]);
        }
    }
    public bool FailOnMissingMandatoryColumnInLineYN_IsNull
    {
        get
        {
            return IsNull(29);
        }
    }

    public String StripUnicodefromNonUnicodeYN
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[30]);
        }
    }
    public bool StripUnicodefromNonUnicodeYN_IsNull
    {
        get
        {
            return IsNull(30);
        }
    }

    public String ConvertThreeCharTimezonedtoOffsetsYN
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[31]);
        }
    }
    public bool ConvertThreeCharTimezonedtoOffsetsYN_IsNull
    {
        get
        {
            return IsNull(31);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class OutputFileDataBuffer: ScriptBuffer

{
    public OutputFileDataBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String itemextid
    {
        set
        {
            this[0] = value;
        }
    }
    public bool itemextid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String creatorintegrationid
    {
        set
        {
            this[1] = value;
        }
    }
    public bool creatorintegrationid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String creatorinstitutionalemail
    {
        set
        {
            this[2] = value;
        }
    }
    public bool creatorinstitutionalemail_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String studentintegrationid
    {
        set
        {
            this[3] = value;
        }
    }
    public bool studentintegrationid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String studentinstitutionalemail
    {
        set
        {
            this[4] = value;
        }
    }
    public bool studentinstitutionalemail_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String assignedtointegrationid
    {
        set
        {
            this[5] = value;
        }
    }
    public bool assignedtointegrationid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String assignedtoinstitutionalemail
    {
        set
        {
            this[6] = value;
        }
    }
    public bool assignedtoinstitutionalemail_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String createdate
    {
        set
        {
            this[7] = value;
        }
    }
    public bool createdate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String itemorigin
    {
        set
        {
            this[8] = value;
        }
    }
    public bool itemorigin_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String trackingtype
    {
        set
        {
            this[9] = value;
        }
    }
    public bool trackingtype_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String rulename
    {
        set
        {
            this[10] = value;
        }
    }
    public bool rulename_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String coursesectionid
    {
        set
        {
            this[11] = value;
        }
    }
    public bool coursesectionid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String successplanname
    {
        set
        {
            this[12] = value;
        }
    }
    public bool successplanname_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String itemstatus
    {
        set
        {
            this[13] = value;
        }
    }
    public bool itemstatus_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String resolveddate
    {
        set
        {
            this[14] = value;
        }
    }
    public bool resolveddate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String interventionresolutionreason
    {
        set
        {
            this[15] = value;
        }
    }
    public bool interventionresolutionreason_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String interventionresolutionclosecategory
    {
        set
        {
            this[16] = value;
        }
    }
    public bool interventionresolutionclosecategory_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String closedbystudent
    {
        set
        {
            this[17] = value;
        }
    }
    public bool closedbystudent_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(17);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class OutputRecordLevelParseErrorsBuffer: ScriptBuffer

{
    public OutputRecordLevelParseErrorsBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String FileName
    {
        set
        {
            this[0] = value;
        }
    }
    public bool FileName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FailedLineText
    {
        set
        {
            this[1] = value;
        }
    }
    public bool FailedLineText_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String LookupWorkdayID
    {
        set
        {
            this[2] = value;
        }
    }
    public bool LookupWorkdayID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String LookupValue
    {
        set
        {
            this[3] = value;
        }
    }
    public bool LookupValue_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String AdditionalData
    {
        set
        {
            this[4] = value;
        }
    }
    public bool AdditionalData_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ErrorCode
    {
        set
        {
            this[5] = value;
        }
    }
    public bool ErrorCode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ErrorColumn
    {
        set
        {
            this[6] = value;
        }
    }
    public bool ErrorColumn_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FieldName
    {
        set
        {
            this[7] = value;
        }
    }
    public bool FieldName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Message
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Message_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class OutputFieldLevelParseLoggingBuffer: ScriptBuffer

{
    public OutputFieldLevelParseLoggingBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 ParseControlID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ParseControlID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ParseSourceFile
    {
        set
        {
            this[1] = value;
        }
    }
    public bool ParseSourceFile_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ParseSourceLineText
    {
        set
        {
            this[2] = value;
        }
    }
    public bool ParseSourceLineText_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 ParseSourceLineOffset
    {
        set
        {
            this[3] = value;
        }
    }
    public bool ParseSourceLineOffset_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 TargetFieldNumber
    {
        set
        {
            this[4] = value;
        }
    }
    public bool TargetFieldNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TargetFieldName
    {
        set
        {
            this[5] = value;
        }
    }
    public bool TargetFieldName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TargetFieldDataType
    {
        set
        {
            this[6] = value;
        }
    }
    public bool TargetFieldDataType_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TargetFieldNullable
    {
        set
        {
            this[7] = value;
        }
    }
    public bool TargetFieldNullable_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ParseFieldText
    {
        set
        {
            this[8] = value;
        }
    }
    public bool ParseFieldText_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ParsePassFailResult
    {
        set
        {
            this[9] = value;
        }
    }
    public bool ParsePassFailResult_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ParseTruncationError
    {
        set
        {
            this[10] = value;
        }
    }
    public bool ParseTruncationError_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ParseNullabilityError
    {
        set
        {
            this[11] = value;
        }
    }
    public bool ParseNullabilityError_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ParseDataTypeError
    {
        set
        {
            this[12] = value;
        }
    }
    public bool ParseDataTypeError_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ParseFieldCountError
    {
        set
        {
            this[13] = value;
        }
    }
    public bool ParseFieldCountError_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ParseFormatError
    {
        set
        {
            this[14] = value;
        }
    }
    public bool ParseFormatError_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ParseOtherError
    {
        set
        {
            this[15] = value;
        }
    }
    public bool ParseOtherError_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ParseErrorMessage
    {
        set
        {
            this[16] = value;
        }
    }
    public bool ParseErrorMessage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class OutputFileLevelParseLoggingBuffer: ScriptBuffer

{
    public OutputFileLevelParseLoggingBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String ParseSourceFile
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ParseSourceFile_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 TotalLinesParsed
    {
        set
        {
            this[1] = value;
        }
    }
    public bool TotalLinesParsed_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 TotalLinesPassed
    {
        set
        {
            this[2] = value;
        }
    }
    public bool TotalLinesPassed_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 TotalLinesFailed
    {
        set
        {
            this[3] = value;
        }
    }
    public bool TotalLinesFailed_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 TotalFieldsParsed
    {
        set
        {
            this[4] = value;
        }
    }
    public bool TotalFieldsParsed_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 TotalFieldsPassed
    {
        set
        {
            this[5] = value;
        }
    }
    public bool TotalFieldsPassed_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 TotalFieldsFailed
    {
        set
        {
            this[6] = value;
        }
    }
    public bool TotalFieldsFailed_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 TotalTruncationErrors
    {
        set
        {
            this[7] = value;
        }
    }
    public bool TotalTruncationErrors_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 TotalNullabilityErrors
    {
        set
        {
            this[8] = value;
        }
    }
    public bool TotalNullabilityErrors_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 TotalDataTypeErrors
    {
        set
        {
            this[9] = value;
        }
    }
    public bool TotalDataTypeErrors_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 TotalFieldCountErrors
    {
        set
        {
            this[10] = value;
        }
    }
    public bool TotalFieldCountErrors_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 TotalFormatErrors
    {
        set
        {
            this[11] = value;
        }
    }
    public bool TotalFormatErrors_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 TotalOtherErrors
    {
        set
        {
            this[12] = value;
        }
    }
    public bool TotalOtherErrors_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public OutputFileDataBuffer OutputFileDataBuffer;

    public OutputRecordLevelParseErrorsBuffer OutputRecordLevelParseErrorsBuffer;

    public OutputFieldLevelParseLoggingBuffer OutputFieldLevelParseLoggingBuffer;

    public OutputFileLevelParseLoggingBuffer OutputFileLevelParseLoggingBuffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input - Configuration Parameter", StringComparison.Ordinal))
        {
            InputConfigurationParameter_ProcessInput(new InputConfigurationParameterBuffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != OutputFileDataBuffer)
        {
            OutputFileDataBuffer.SetEndOfRowset();
            OutputFileDataBuffer = null;
        }

        if (null != OutputRecordLevelParseErrorsBuffer)
        {
            OutputRecordLevelParseErrorsBuffer.SetEndOfRowset();
            OutputRecordLevelParseErrorsBuffer = null;
        }

        if (null != OutputFieldLevelParseLoggingBuffer)
        {
            OutputFieldLevelParseLoggingBuffer.SetEndOfRowset();
            OutputFieldLevelParseLoggingBuffer = null;
        }

        if (null != OutputFileLevelParseLoggingBuffer)
        {
            OutputFileLevelParseLoggingBuffer.SetEndOfRowset();
            OutputFileLevelParseLoggingBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output - File Data"))
            {
                OutputFileDataBuffer = new OutputFileDataBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output - Record Level Parse Errors"))
            {
                OutputRecordLevelParseErrorsBuffer = new OutputRecordLevelParseErrorsBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output - Field Level Parse Logging"))
            {
                OutputFieldLevelParseLoggingBuffer = new OutputFieldLevelParseLoggingBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output - File Level Parse Logging"))
            {
                OutputFileLevelParseLoggingBuffer = new OutputFileLevelParseLoggingBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void InputConfigurationParameter_ProcessInput(InputConfigurationParameterBuffer Buffer)
    {
        while (Buffer.NextRow())
        {
            InputConfigurationParameter_ProcessInputRow(Buffer);
        }
    }

    public virtual void InputConfigurationParameter_ProcessInputRow(InputConfigurationParameterBuffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 Connection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_6d69f28d6f704f998cd82fa2b2d3f760.Properties.Settings.get_Default():SC_6d69f28d6f704f998cd82fa2b2d3f760.Properties.Sett" +
    "ings")]

namespace SC_6d69f28d6f704f998cd82fa2b2d3f760.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_6d69f28d6f704f998cd82fa2b2d3f760</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_6d69f28d6f704f998cd82fa2b2d3f760</msb:DisplayName>
    <msb:ProjectId>{638A1502-8FB7-4EFF-A97D-801268CC2B79}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_6d69f28d6f704f998cd82fa2b2d3f760.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_6d69f28d6f704f998cd82fa2b2d3f760")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_6d69f28d6f704f998cd82fa2b2d3f760")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_6d69f28d6f704f998cd82fa2b2d3f760.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_6d69f28d6f704f998cd82fa2b2d3f760.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_6d69f28d6f704f998cd82fa2b2d3f760.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_6d69f28d6f704f998cd82fa2b2d3f760.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_6d69f28d6f704f998cd82fa2b2d3f760.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_0E8B4E4774024C04A3081ADD15F981F7.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
XwEAcHJhAQBwcmsBAHByawEAcHJrAQBwcm8BAHByawEAcHJrAQBwci0DAHAoAwAABgJ7JAAABG83
AAAKbzgAAAoLK3YSASg5AAAKEw8CeycAAAQRD28wAAAKLV4CAns4AAAEF1h9OAAABBYTCQIVAnsD
AAAEcg8BAHAVFREPcg8BAHByDwEAcHJfAQBwcmEBAHByawEAcHJrAQBwcmsBAHBybwEAcHJrAQBw
cmsBAHBytAMAcCgDAAAGEgEoOgAACi2B3g4SAf4WCAAAG28eAAAK3AJ7JwAABG87AAAKbzwAAAoT
ECt2EhAoPQAAChMRAnskAAAEERFvPgAACi1eAgJ7OAAABBdYfTgAAAQWEwoCFQJ7AwAABHIPAQBw
FRUREXIPAQBwcg8BAHByXwEAcHJhAQBwcmsBAHByawEAcHJrAQBwcm8BAHByawEAcHJrAQBwci4E
AHAoAwAABhIQKD8AAAotgd4OEhD+FgoAABtvHgAACtwRBy02AnsRAAAEcm8BAHAoIAAACiwjFxMS
AigRAAAKFQIoEQAACm9AAAAKcnwEAHAUFhISb0EAAAoqEQgtASoRCS1IAnsOAAAEcm8BAHAoNgAA
Ciw2AnsQAAAEcm8BAHAoIAAACiwjFxMTAigRAAAKFQIoEQAACm9AAAAKcs4EAHAUFhITb0EAAAoq
EQotSAJ7DQAABHJvAQBwKDYAAAosNgJ7DwAABHJvAQBwKCAAAAosIxcTFAIoEQAAChUCKBEAAApv
QAAACnIeBQBwFBYSFG9BAAAKKhELLQEqAnsaAAAEcl8BAHAoNgAACiwRAgJ7GgAABCiWAAAKfS8A
AAQCF30pAAAEKgAAAAFAAAACAH4DKKYDDgAAAAAAAC8FHk0FAyYAAAECAF8Gg+IGDgAAAAACAJYI
gxkJDgAAAAACADkJg7wJDgAAAAATMAIA+AEAAAAAAAACcl8BAHB9AQAABAJyXwEAcH0CAAAEAnJf
AQBwfQMAAAQCcl8BAHB9BAAABAJyXwEAcH0FAAAEAhd9BgAABAIXfQcAAAQCcl8BAHB9CAAABAIV
fQkAAAQCH2R9CgAABAIfZH0LAAAEAnInAABwfQwAAAQCcm8BAHB9DQAABAJybwEAcH0OAAAEAnJr
AQBwfQ8AAAQCcmsBAHB9EAAABAJyawEAcH0RAAAEAnJrAQBwfRIAAAQCcm8BAHB9EwAABAJybwEA
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
DgDtHQAADwDDHQAAEACeHQAAEQCSBgAAAQC6JAAAAgC4AQAAAwDNCwAABABfBAAABQBaBgAABgCu
GAAABwCcBgAAAQBkHAAAAQA2JQAAAQBkHAAAAgBzHwAAAwDSGgAAAQBkHAAAAgBzHwAAAwDSGgAA
AQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZ
CwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAA
AQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZ
CwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQBkHAAAAgBzHwAA
AwDSGgAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZ
CwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAA
AQBkHAAAAgBzHwAAAwDSGgAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZ
CwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAA
AQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZ
CwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQBkHAAA
AgBzHwAAAwDSGgAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZ
CwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAA
AQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQDZCwAAAQCg
AQAAAgCuBwAAAwBkHAAABADSGgAAAQA+IgAAAgBiHgAAAwCfIAAABADSGgAAAQBkHAAAAQA2JQAA
AQBuIwAAAQBuIwAAAQDZCwkATB4BABEATB4GABkATB4KACkATB4QADEATB4QADkATB4QAEEATB4Q
AEkATB4QAFEATB4QAFkATB4QAGEATB4QAGkATB4GAFEBTB4GAHEBTB4VAIEBTB4GAEEBmAsGAEEB
NwQpAIkBvRkvAJEBPh41AKkAeCM6ALEAUAc+AJkBoR9CALEAghlHAKEBPh41AIEAUAc+AAwAvwRV
ABQAhCNkABQAvwRVAKkAiyRoALkAsAkGAEEBqAFwAJkBxCV3AJkBoAxkAKkBEhh9AJkBLwyDAJkB
7Rc+AJkAhgx3AJkBciJLARwAvwRVAMkATB4QAMkApyBYAckAVR9eAckAlSBjAckAfx5oAbEBEgw+
APkAZAY+AJkBciJtASQAYCV6ASQAhCNkACQAvwRVACwAPh6GATQAeCOVATQAiyRoAJkB0CV3AAwA
aSKaATwAPh6tAUQAeCOVAUQAiyRoACQAaSKaAUwAPh6tAVQAeCOVAQwAYCV6AVQAiyRoAIkBUAc+
AIkBNx3OASQA1BfZAYkA9SQGABQA1BfZAQwA1BfZAYEAwQjgATEBEgw+AIEAoAxkAJkBciLlAYEA
GhlkAJkBciLtAYEApAZkACwAqB96AYkAzBcBAIkA/CQGALkBvwn0AYkA/hf5AQEBvwn/AYkAvwwG
AhwAPh4OAlwAeCMiAmQAWCWVAWQAvws2ApkAPgbtAVwAiyRoAGEBZwk7AgkBeSJBAgkBvwlQAgkB
LghXAqEARghdAgkBIxtkAAkBqwxkAAkBQCVkAAkBWR5kAAkBowtkAAkBIwZkAAkBLgZkANEBTB5o
AokAIghzAiEBvwl7AokAPgiCAokAiyKKAikBvwmSAokAEQaZAtkBvwmhAokArgumAuEBvwmsAokA
SAGxArEBvwm3AokABgG8AukBvwnCAokANQHHAmwAYCV6AWwA1BfZAZkAhgxCAIkAJQzVAvEBvwnb
AokAFAfgAvkBvwnmAokA5gbrApkB8SXxAgECvwn0AokAtwv5AgkCvwn/AokAPgEEAxECvwkKA4kA
8wAPAxkCvwkVA4kAKwEaA5kBlRw+AMkAGQY+AIkAMiVoAMkATQRoAMkAqgkGAHkAygxUAwwATB4G
ACQATB4GAGwATB4GACwAXBsGAJkB+CJZAywATB5gA5kA+CJyA2wAXBsGAJkATB4QAGwAvwRVAKEA
qAR5AxwATB4GAHkAlAlUAwwATB5/AxQATB4GACQATB5/AywATB5/A2wATB5/A6EAtQyKAzkBTB6P
AzkBZByZAzkBcx+dA4kAGwxjATkBxRehA4kA/QCmAzkBMiVoADkB7CJoADkB3RerAzkBzBcBADkC
TB4QADkB9SQGADkB6SIGAEEBTB4GAJkBoR+xA0EBhx+5A4kA2SJoADEBTB4GAIkBnRm/A0kCuAfF
A1ECfxzMA1kCAgfSA1kCbCXbA1kBTB7hA3kBTB4GAC4ACwDuBC4AEwD3BC4AGwAWBS4AIwAfBS4A
KwBIBS4AMwBIBS4AOwBIBS4AQwAfBS4ASwBOBS4AUwBIBS4AWwBlBUMAYwCvBWMBawCvBcEIewCv
BYkWcwAWBakWcwAWBRwAbACJACADJAMDAAEABABBAAUAZQAGAHcABwCZAAkAswALALQADAC2AAAA
LBnLBAAA2BPPBAAAnAfLBAAAcBHPBAAAkiPTBAAA7RbPBAAAVgjTBAAAsxHPBAAAEyTLBAAACBfP
BAAA5iHTBAAAPxbPBAAAGwnTBAAAIxLPBAAAaAzTBAAAhRLPBAAAfSXLBAAAdxfPBAAApwPLBAAA
BA/PBAAAewPLBAAA5Q7PBAAASQPLBAAAww7PBAAAJQPLBAAAqA7PBAAADiLLBAAAXBbPBAAArwjL
BAAAzxHPBAAANBjLBAAAJxPPBAAAhhjLBAAAYhPPBAAAWBjLBAAAQhPPBAAA5x/LBAAALhXPBAAA
CSDLBAAASBXPBAAAbSDLBAAAZBXPBAAAvhjLBAAAlhPPBAAA7BjLBAAAthPPBAAAMBvTBAAAGBTP
BAAAtR/LBAAADBXPBAAAWALLBAAAEA7PBAAAdwLLBAAANg7PBAAAowLLBAAAVQ7PBAAA0wLLBAAA
dg7PBAAACgLLBAAA4A3PBAAA6QHLBAAAuA3PBAAA1wPLBAAAJQ/PBAAABwbLBAAAmBDPBAAAwQXL
BAAAPRDPBAAAHw3LBAAAxxLPBAAA2gXLBAAAXRDPBAAAPQ3LBAAA7BLPBAAApQXLBAAAGhDPBAAA
/gzLBAAAnxLPBAAA2gnLBAAAWBLPBAAAJRjLBAAAERPPBAAA/gjLBAAACxLPBAAABQjLBAAAhBHP
BAAA8wXLBAAAfRDPBAAAEgjLBAAAmBHPBAAASiLLBAAAfBbPBAAAyQnLBAAAQBLPBAAAXhrLBAAA
8BPPBAAAoCXLBAAAoRfPBAAAOiPLBAAA0hbPBAAAnAfLBAAAcBHPBAAAuiTLBAAAPhfPBAAAuAHL
BAAAnQ3PBAAAzQvLBAAAbhLPBAAAXwTLBAAAVQ/PBAAAWgbLBAAArRDPBAAArhjLBAAAfxPPBAAA
gQfLBAAARxHPBAAAnAbLBAAA3xDPBAAAggHTBAAAgw3PBAAAIgfLBAAAERHPBAAAzSTLBAAAWBfP
BAAAoSLTBAAAkhbPBAAAaxvTBAAAORTPBAAAawfLBAAAQRHPBAAA0gjLBAAA7BHPBAAAsgbLBAAA
8hDPBAAAmCTLBAAAJBfPBAAADiPLBAAAsxbPBAAAYB3LBAAAdBTPBAAABh7LBAAA6xTPBAAAER3L
BAAAVhTPBAAA2B3LBAAAyxTPBAAAsh3LBAAArxTPBAAAjh3LBAAAlBTPBAAAgAbLBAAA1RDPBAAA
IgfLBAAAERHPBAAAVAXTBAAAxQ/PBAAAkAXTBAAA/g/PBAAAFwXTBAAAjA/PBAAALAXTBAAAqA/P
BAAAegXTBAAA4Q/PBAAAAQXTBAAAbw/PBAAABiHTBAAAohXPBAAAtCHTBAAAHRbPBAAA2iDTBAAA
gxXPBAAAhCHTBAAA/BXPBAAAXCHTBAAA3xXPBAAANiHTBAAAwxXPBAAA5BnXBAAAbxzdBAAAdAnj
BAAAAiPpBAIACwADAAIADAAFAAIADQAHAAIADgAJAAIADwALAAIAEAANAAIAEQAPAAIAEgARAAIA
EwATAAIAFAAVAAIAFQAXAAIAFgAZAAIAFwAbAAIAGAAdAAIAGQAfAAIAGgAhAAIAGwAjAAIAHAAl
AAIAHQAnAAIAHgApAAIAHwArAAIAIAAtAAIAIQAvAAIAIgAxAAIAIwAzAAIAJAA1AAIAJQA3AAIA
JgA5AAIAJwA7AAIAKAA9AAIAKQA/AAIAKgBBAAIAKwBDAAIALABFAAIALQBHAAIALgBJAAIALwBL
AAIAMABNAAIAMQBPAAIAMgBRAAIAMwBTAAIANABVAAIANQBXAAIANgBZAAIANwBbAAIAOABdAAIA
OQBfAAIAOgBhAAIAOwBjAAIAPABlAAIAPQBnAAIAPgBpAAIAPwBrAAIAQABtAAIAQQBvAAIAQgBx
AAIAQwBzAAIARAB1AAIARQB3AAIARgB5AAIARwB7AAIASAB9AAIASQB/AAIASgCBAAEATgCDAAEA
TwCFAAEAUACHAAEAUQCJAAEAUgCLAAEAUwCNAAEAVACPAAEAVQCRAAEAVgCTAAEAVwCVAAEAWACX
AAEAWQCZAAEAWgCbAAEAWwCdAAEAXACfAAEAXQChAAEAXgCjAAEAXwClAAEAYACnAAEAYQCpAAEA
YgCrAAEAYwCtAAEAZACvAAEAZQCxAAEAZgCzAAEAZwC1AAEAaAC3AAEAaQC5AAEAagC7AAEAawC9
AAEAbAC/AAEAbQDBAAEAbgDDAAEAbwDFAAEAcADHAAEAcQDJAAEAdgDLAAEAdwDNAAEAeADPAAEA
eQDRAAEAegDTAAEAewDVAAEAfADXAAEAfQDZAAEAfgDbAAEAfwDdAAEAgADfAAEAgQDhAAEAggDj
AAEAgwDlAAEAhADnAAEAhQDpAAEAhgDrAAEAhwDtAAEAjADvAAEAjQDxAAEAjgDzAAEAjwD1AAEA
kAD3AAEAkQD5AAEAkgD7AAEAkwD9AAEAlAD/AAEAlQABAQEAlgADAQEAlwAFAQEAmAAHAQEAmQAJ
AQEAmgALAQEAmwANAQEAnAAPAQEAnQARAQEAngATAQEAnwAVAQEAoAAXAQEAoQAZAQEAogAbAQEA
owAdAQEApAAfAQEApQAhAQEApgAjAQEApwAlAQEAqAAnAQEAqQApAQEAqgArAQEAqwAtAQEArAAv
AQEArQAxAQEAsgAzAQEAswA1AQEAtAA3AQEAtQA5AQEAtgA7AQEAtwA9AQEAuAA/AQEAuQBBAQEA
ugBDAQEAuwBFAQEAvABHAQEAvQBJAQEAvgBLAQEAvwBNAQEAwABPAQEAwQBRAQEAwgBTAQEAwwBV
AQEAxABXAQEAxQBZAQEAxgBbAQEAxwBdAQEAyABfAQEAyQBhAQEAygBjAQEAywBlAQIA2ABnAQIA
2wBpAQIA3ABrAQEA3QBrAQIA3gBtAU0AXQBRAXMBgAGPAaUBuAHAAccBGgIuAs0CBIAAAAEAAAAA
AAAAAAAAAAAAUQEAAAQAAAAAAAAAAAAAAOkDbgQAAAAAEAAAAAAAAAAAAAAA8gOyIwAAAAAQAAAA
AAAAAAAAAADyA/8aAAAAABAAAAAAAAAAAAAAAPIDNSQAAAAABAAAAAAAAAAAAAAA6QMLCQAAAAAE
AAAAAAAAAAAAAADpA+YXAAAAAAoAAAAAAAAAAAAAAPsDkgQAAAAAEAAAAAAAAAAAAAAA8gPcGgAA
AAAAAAAAAQAAALseAAAAAABJRFRTQ29tcG9uZW50TWV0YURhdGExMDAASURUU091dHB1dENvbHVt
bjEwMABJRFRTT3V0cHV0Q29sdW1uQ29sbGVjdGlvbjEwMABJRFRTUnVudGltZUNvbm5lY3Rpb25D
b2xsZWN0aW9uMTAwAElEVFNPdXRwdXRDb2xsZWN0aW9uMTAwAElEVFNSdW50aW1lQ29ubmVjdGlv
bjEwMABJRFRTQ29ubmVjdGlvbk1hbmFnZXIxMDAASURUU091dHB1dDEwMABJRW51bWVyYWJsZWAx
AElFcXVhbGl0eUNvbXBhcmVyYDEASGFzaFNldGAxAFNldFVJbnQzMgBHZXRJbnQzMgBTZXRJbnQz
MgBLZXlWYWx1ZVBhaXJgMgBEaWN0aW9uYXJ5YDIAU2V0VUludDY0AFNldEludDY0AFNldFVJbnQx
NgBTZXRJbnQxNgBTQ18wRThCNEU0Nzc0MDI0QzA0QTMwODFBREQxNUY5ODFGNwA8TW9kdWxlPgBz
ZXRfUGFyc2VDb250cm9sSUQAcGFyc2VDb250cm9sSUQASW5wdXRJRABHZXRPdXRwdXRJRABzZXRf
TG9va3VwV29ya2RheUlEAHN0cmlwVW5pY29kZUZyb21Ob25Vbmljb2RlWU4AZ2V0X1N0cmlwVW5p
Y29kZWZyb21Ob25Vbmljb2RlWU4AZ2V0X0ZhaWxPbk1pc3NpbmdNYW5kYXRvcnlDb2x1bW5Jbkxp
bmVZTgBmYWlsT25NaXNzaW5nTWFuZGF0b3J5Q29sdW1uSW5MaW5lWU4AZ2V0X0NvbHVtbk5hbWVz
Q2FzZVNlbnNpdGl2ZVlOAGdldF9GYWlsT25FeHRyYUNvbHVtbllOAGZhaWxPbkV4dHJhQ29sdW1u
WU4AZ2V0X0ZhaWxPbk1pc3NpbmdDb2x1bW5ZTgBmYWlsT25NaXNzaW5nQ29sdW1uWU4AZ2V0X0Zh
aWxPbk1pc3NpbmdNYW5kYXRvcnlDb2x1bW5JbkhlYWRlcllOAGZhaWxPbk1pc3NpbmdNYW5kYXRv
cnlDb2x1bW5JbkhlYWRlcllOAGdldF9GaXhEYXRlVmFsdWVzWU4AZml4RGF0ZVZhbHVlc1lOAGdl
dF9UcnVuY2F0ZVN0cmluZ1ZhbHVlc1lOAHRydW5jYXRlU3RyaW5nVmFsdWVzWU4AZ2V0X0FsbG93
RXh0cmFDb2x1bW5zWU4AYWxsb3dFeHRyYUNvbHVtbnNZTgBnZXRfQWxsb3dNaXNzaW5nQ29sdW1u
c1lOAGFsbG93TWlzc2luZ0NvbHVtbnNZTgBnZXRfQ29udmVydFRocmVlQ2hhclRpbWV6b25lZHRv
T2Zmc2V0c1lOAGNvbnZlcnRUaHJlZUNoYXJUenNUb09mZnNldFlOAE1pY3Jvc29mdC5WaXN1YWxC
YXNpYy5GaWxlSU8AZ2V0X0NvbXBvbmVudE1ldGFEYXRhAGdldF9FbmRPZkRhdGEAc2V0X0FkZGl0
aW9uYWxEYXRhAG1zY29ybGliAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAE1pY3Jvc29mdC5W
aXN1YWxCYXNpYwBGaW5kU3lzdGVtVGltZVpvbmVCeUlkAEFkZAB0b3RhbFBhcnNlRXZlbnRzTG9n
Z2VkAElucHV0c0ZpbmlzaGVkAE1hcmtPdXRwdXRzRmluaXNoZWQAc2V0X1RvdGFsRmllbGRzRmFp
bGVkAHNldF9Ub3RhbExpbmVzRmFpbGVkAHNldF9Ub3RhbEZpZWxkc1BhcnNlZAB0b3RhbEZpZWxk
c1BhcnNlZABzZXRfVG90YWxMaW5lc1BhcnNlZAB0b3RhbExpbmVzUGFyc2VkAHNldF9Ub3RhbEZp
ZWxkc1Bhc3NlZABzZXRfVG90YWxMaW5lc1Bhc3NlZABzZXRfYXNzaWduZWR0b2ludGVncmF0aW9u
aWQAc2V0X2NyZWF0b3JpbnRlZ3JhdGlvbmlkAHNldF9zdHVkZW50aW50ZWdyYXRpb25pZABzZXRf
Y291cnNlc2VjdGlvbmlkAHNldF9pdGVtZXh0aWQAU2V0R3VpZABSZWFkVG9FbmQAZ2V0X1NlY29u
ZABnZXRfTWlsbGlzZWNvbmQAUmVwbGFjZQBkZWZhdWx0SW5zdGFuY2UAc2V0X0Vycm9yQ29kZQBn
ZXRfTWVzc2FnZQBzZXRfTWVzc2FnZQBzZXRfUGFyc2VFcnJvck1lc3NhZ2UAcGFyc2VFcnJvck1l
c3NhZ2UAZ2V0X1NjYWxlAHNldF9UYXJnZXRGaWVsZE51bGxhYmxlAHRhcmdldEZpZWxkTnVsbGFi
bGUASURpc3Bvc2FibGUAU2V0RG91YmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFu
ZGxlAFNldFNpbmdsZQBzZXRfUGFyc2VTb3VyY2VGaWxlAHBhcnNlU291cmNlRmlsZQBQYXJzZUZs
YXRGaWxlAGdldF9OYW1lAHNldF9GaWVsZE5hbWUAc2V0X1RhcmdldEZpZWxkTmFtZQB0YXJnZXRG
aWVsZE5hbWUAZ2V0X0ZpbGVOYW1lAHNldF9GaWxlTmFtZQBmaWxlTmFtZQBJbnB1dE5hbWUAR2V0
UnVudGltZUNvbm5lY3Rpb25CeU5hbWUAZmxhdGZpbGVDb2x1bW5zQnlOYW1lAG1haW5PdXRwdXRD
b2x1bW5zQnlOYW1lAHNldF9ydWxlbmFtZQBzZXRfc3VjY2Vzc3BsYW5uYW1lAFNldERhdGVUaW1l
AFRvVW5pdmVyc2FsVGltZQBTZXRUaW1lAENvbnZlcnRUaW1lAGdldF9Db2x1bW5IZWFkZXJMaW5l
AGNvbHVtbkhlYWRlckxpbmUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAY29udmVy
dFRvVGltZVpvbmUAZ2V0X0NvbnZlcnR0b1RpbWVab25lAGdldF9EYXRhVHlwZQBzZXRfVGFyZ2V0
RmllbGREYXRhVHlwZQB0YXJnZXRGaWVsZERhdGFUeXBlAHNldF90cmFja2luZ3R5cGUAU3lzdGVt
LkNvcmUAZ2V0X01heEVycm9yc1RvSWdub3JlAG1heEVycm9yc1RvSWdub3JlAGdldF9DdWx0dXJl
AHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBnZXRfSW52YXJpYW50Q3VsdHVyZQBBcHBsaWNh
dGlvblNldHRpbmdzQmFzZQBnZXRfT3JkaW5hbElnbm9yZUNhc2UAQ2xvc2UARGlzcG9zZQByZWFk
eVRvUGFyc2UAc2V0X3Jlc29sdmVkZGF0ZQBzZXRfY3JlYXRlZGF0ZQBFZGl0b3JCcm93c2FibGVT
dGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmli
dXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5
VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3Jr
QXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0
aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9k
dWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25l
bnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29t
cGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAGdldF9NaW51dGUAU2V0U0J5dGUAU2V0Qnl0
ZQBnZXRfVmFsdWUAc2V0X0xvb2t1cFZhbHVlAHZhbHVlAGNvbHVtbk5hbWVzQ2FzZVNlbnNpdGl2
ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAEdldFN0cmluZwBTZXRTdHJpbmcA
U3Vic3RyaW5nAEFkZEZpZWxkTGV2ZWxQYXJzZUxvZwBBZGRGaWxlTGV2ZWxQYXJzZUxvZwBnZXRf
TWF4RXZlbnRzVG9Mb2cAbWF4RXZlbnRzVG9Mb2cASXNNYXRjaABNYXRoAGZpbGVGdWxsUGF0aABn
ZXRfTGVuZ3RoAGdldF9Nb250aABnZXRfTG9jYWwAU2V0RGVjaW1hbABnZXRfT3JkaW5hbABTeXN0
ZW0uQ29tcG9uZW50TW9kZWwAcGFyc2VMb2dMZXZlbABzZXRfYXNzaWduZWR0b2luc3RpdHV0aW9u
YWxlbWFpbABzZXRfY3JlYXRvcmluc3RpdHV0aW9uYWxlbWFpbABzZXRfc3R1ZGVudGluc3RpdHV0
aW9uYWxlbWFpbABTQ18wRThCNEU0Nzc0MDI0QzA0QTMwODFBREQxNUY5ODFGNy5kbGwAc2V0X1Bh
cnNlQ29udHJvbElEX0lzTnVsbABzZXRfTG9va3VwV29ya2RheUlEX0lzTnVsbABnZXRfU3RyaXBV
bmljb2RlZnJvbU5vblVuaWNvZGVZTl9Jc051bGwAZ2V0X0ZhaWxPbk1pc3NpbmdNYW5kYXRvcnlD
b2x1bW5JbkxpbmVZTl9Jc051bGwAZ2V0X0NvbHVtbk5hbWVzQ2FzZVNlbnNpdGl2ZVlOX0lzTnVs
bABnZXRfRmFpbE9uRXh0cmFDb2x1bW5ZTl9Jc051bGwAZ2V0X0ZhaWxPbk1pc3NpbmdDb2x1bW5Z
Tl9Jc051bGwAZ2V0X0ZhaWxPbk1pc3NpbmdNYW5kYXRvcnlDb2x1bW5JbkhlYWRlcllOX0lzTnVs
bABnZXRfRml4RGF0ZVZhbHVlc1lOX0lzTnVsbABnZXRfVHJ1bmNhdGVTdHJpbmdWYWx1ZXNZTl9J
c051bGwAZ2V0X0FsbG93RXh0cmFDb2x1bW5zWU5fSXNOdWxsAGdldF9BbGxvd01pc3NpbmdDb2x1
bW5zWU5fSXNOdWxsAGdldF9Db252ZXJ0VGhyZWVDaGFyVGltZXpvbmVkdG9PZmZzZXRzWU5fSXNO
dWxsAHNldF9BZGRpdGlvbmFsRGF0YV9Jc051bGwAc2V0X1RvdGFsRmllbGRzRmFpbGVkX0lzTnVs
bABzZXRfVG90YWxMaW5lc0ZhaWxlZF9Jc051bGwAc2V0X1RvdGFsRmllbGRzUGFyc2VkX0lzTnVs
bABzZXRfVG90YWxMaW5lc1BhcnNlZF9Jc051bGwAc2V0X1RvdGFsRmllbGRzUGFzc2VkX0lzTnVs
bABzZXRfVG90YWxMaW5lc1Bhc3NlZF9Jc051bGwAc2V0X2Fzc2lnbmVkdG9pbnRlZ3JhdGlvbmlk
X0lzTnVsbABzZXRfY3JlYXRvcmludGVncmF0aW9uaWRfSXNOdWxsAHNldF9zdHVkZW50aW50ZWdy
YXRpb25pZF9Jc051bGwAc2V0X2NvdXJzZXNlY3Rpb25pZF9Jc051bGwAc2V0X2l0ZW1leHRpZF9J
c051bGwAc2V0X0Vycm9yQ29kZV9Jc051bGwAc2V0X01lc3NhZ2VfSXNOdWxsAHNldF9QYXJzZUVy
cm9yTWVzc2FnZV9Jc051bGwAc2V0X1RhcmdldEZpZWxkTnVsbGFibGVfSXNOdWxsAHNldF9QYXJz
ZVNvdXJjZUZpbGVfSXNOdWxsAHNldF9GaWVsZE5hbWVfSXNOdWxsAHNldF9UYXJnZXRGaWVsZE5h
bWVfSXNOdWxsAGdldF9GaWxlTmFtZV9Jc051bGwAc2V0X0ZpbGVOYW1lX0lzTnVsbABzZXRfcnVs
ZW5hbWVfSXNOdWxsAHNldF9zdWNjZXNzcGxhbm5hbWVfSXNOdWxsAGdldF9Db2x1bW5IZWFkZXJM
aW5lX0lzTnVsbABnZXRfQ29udmVydHRvVGltZVpvbmVfSXNOdWxsAHNldF9UYXJnZXRGaWVsZERh
dGFUeXBlX0lzTnVsbABzZXRfdHJhY2tpbmd0eXBlX0lzTnVsbABnZXRfTWF4RXJyb3JzVG9JZ25v
cmVfSXNOdWxsAHNldF9yZXNvbHZlZGRhdGVfSXNOdWxsAHNldF9jcmVhdGVkYXRlX0lzTnVsbABz
ZXRfTG9va3VwVmFsdWVfSXNOdWxsAGdldF9NYXhFdmVudHNUb0xvZ19Jc051bGwAc2V0X2Fzc2ln
bmVkdG9pbnN0aXR1dGlvbmFsZW1haWxfSXNOdWxsAHNldF9jcmVhdG9yaW5zdGl0dXRpb25hbGVt
YWlsX0lzTnVsbABzZXRfc3R1ZGVudGluc3RpdHV0aW9uYWxlbWFpbF9Jc051bGwAc2V0X2l0ZW1v
cmlnaW5fSXNOdWxsAGdldF9Xb3JrZGF5SURDb2x1bW5fSXNOdWxsAGdldF9BZGRpdGlvbmFsRGF0
YUNvbHVtbl9Jc051bGwAZ2V0X0xvb2t1cFZhbHVlQ29sdW1uX0lzTnVsbABzZXRfRXJyb3JDb2x1
bW5fSXNOdWxsAGdldF9GaWxlTmFtZU91dHB1dENvbHVtbl9Jc051bGwAZ2V0X1JlY29yZFRleHRP
dXRwdXRDb2x1bW5fSXNOdWxsAGdldF9GaWxlTG9jYXRpb25fSXNOdWxsAHNldF9pbnRlcnZlbnRp
b25yZXNvbHV0aW9ucmVhc29uX0lzTnVsbABnZXRfRWFybGllc3RBbGxvd2FibGVZZWFyX0lzTnVs
bABzZXRfVGFyZ2V0RmllbGROdW1iZXJfSXNOdWxsAHNldF9QYXJzZURhdGFUeXBlRXJyb3JfSXNO
dWxsAHNldF9QYXJzZVRydW5jYXRpb25FcnJvcl9Jc051bGwAc2V0X1BhcnNlT3RoZXJFcnJvcl9J
c051bGwAc2V0X1BhcnNlRm9ybWF0RXJyb3JfSXNOdWxsAHNldF9QYXJzZUZpZWxkQ291bnRFcnJv
cl9Jc051bGwAc2V0X1BhcnNlTnVsbGFiaWxpdHlFcnJvcl9Jc051bGwAZ2V0X05vblRydW5jYXRl
YWJsZUNvbHVtbnNfSXNOdWxsAGdldF9Ob3ROdWxsQ29sdW1uc19Jc051bGwAZ2V0X01hbmRhdG9y
eUNvbHVtbnNfSXNOdWxsAGdldF9Db2x1bW5SZWdleFBhdHRlcm5zX0lzTnVsbABzZXRfVG90YWxE
YXRhVHlwZUVycm9yc19Jc051bGwAc2V0X1RvdGFsVHJ1bmNhdGlvbkVycm9yc19Jc051bGwAc2V0
X1RvdGFsT3RoZXJFcnJvcnNfSXNOdWxsAHNldF9Ub3RhbEZvcm1hdEVycm9yc19Jc051bGwAc2V0
X1RvdGFsRmllbGRDb3VudEVycm9yc19Jc051bGwAc2V0X1RvdGFsTnVsbGFiaWxpdHlFcnJvcnNf
SXNOdWxsAGdldF9NYXhMaW5lc1RvUHJvY2Vzc19Jc051bGwAZ2V0X0FsbG93YWJsZURhdGVGb3Jt
YXRzX0lzTnVsbABzZXRfaXRlbXN0YXR1c19Jc051bGwAc2V0X1BhcnNlU291cmNlTGluZU9mZnNl
dF9Jc051bGwAc2V0X1BhcnNlUGFzc0ZhaWxSZXN1bHRfSXNOdWxsAHNldF9jbG9zZWRieXN0dWRl
bnRfSXNOdWxsAGdldF9IZWFkZXJMaW5lQ291bnRfSXNOdWxsAGdldF9Db2x1bW5IZWFkZXJMaXN0
X0lzTnVsbABzZXRfUGFyc2VGaWVsZFRleHRfSXNOdWxsAHNldF9GYWlsZWRMaW5lVGV4dF9Jc051
bGwAc2V0X1BhcnNlU291cmNlTGluZVRleHRfSXNOdWxsAGdldF9QYXJzZUxvZ0xldmVsQUVBbGxv
ckVycm9yc09ubHlfSXNOdWxsAHNldF9pbnRlcnZlbnRpb25yZXNvbHV0aW9uY2xvc2VjYXRlZ29y
eV9Jc051bGwAU2V0TnVsbABnZXRfSXRlbQBzZXRfSXRlbQBTeXN0ZW0AVHJpbQByZXNvdXJjZU1h
bgBTZXRCb29sZWFuAFRpbWVTcGFuAE1pbgBTY3JpcHRNYWluAHNldF9pdGVtb3JpZ2luAGdldF9X
b3JrZGF5SURDb2x1bW4Ad29ya2RheUlEQ29sdW1uAGdldF9BZGRpdGlvbmFsRGF0YUNvbHVtbgBh
ZGRpdGlvbmFsRGF0YUNvbHVtbgBnZXRfTG9va3VwVmFsdWVDb2x1bW4AbG9va3VwVmFsdWVDb2x1
bW4Ac2V0X0Vycm9yQ29sdW1uAGdldF9GaWxlTmFtZU91dHB1dENvbHVtbgBmaWxlTmFtZU91dHB1
dENvbHVtbgBnZXRfUmVjb3JkVGV4dE91dHB1dENvbHVtbgByZWNvcmRUZXh0T3V0cHV0Q29sdW1u
AGdldF9QcmVjaXNpb24AZ2V0X0ZpbGVMb2NhdGlvbgBmaWxlTG9jYXRpb24AU3lzdGVtLkNvbmZp
Z3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AZ2V0X091dHB1
dENvbHVtbkNvbGxlY3Rpb24AZ2V0X1J1bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlvbgBnZXRfT3V0
cHV0Q29sbGVjdGlvbgBLZXlDb2xsZWN0aW9uAGdldF9Db25uZWN0aW9uAG1haW5PdXRwdXRDb2x1
bW5OYW1lc0J5UG9zaXRpb24AZmxhdGZpbGVDb2x1bW5zQnlQb3NpdGlvbgBNYWxmb3JtZWRMaW5l
RXhjZXB0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24Ac2V0X2ludGVydmVudGlvbnJlc29s
dXRpb25yZWFzb24AU3RyaW5nQ29tcGFyaXNvbgBjb252ZXJ0VG9UaW1lWm9uZUluZm8AQ3VsdHVy
ZUluZm8AT3V0cHV0TmFtZU1hcABjb2x1bW5SZWdleFBhdHRlcm5NYXAAT3V0cHV0TWFwAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNQaXBl
bGluZVdyYXAAZ2V0X1llYXIAZ2V0X0VhcmxpZXN0QWxsb3dhYmxlWWVhcgBlYXJsaWVzdEFsbG93
YWJsZVllYXIAQ2xlYXIAQ2hhcgBzZXRfVGFyZ2V0RmllbGROdW1iZXIAdGFyZ2V0RmllbGROdW1i
ZXIASUZvcm1hdFByb3ZpZGVyAE91dHB1dEZpbGVEYXRhQnVmZmVyAFBpcGVsaW5lQnVmZmVyAE91
dHB1dEZpZWxkTGV2ZWxQYXJzZUxvZ2dpbmdCdWZmZXIAT3V0cHV0RmlsZUxldmVsUGFyc2VMb2dn
aW5nQnVmZmVyAElucHV0Q29uZmlndXJhdGlvblBhcmFtZXRlckJ1ZmZlcgBPdXRwdXRSZWNvcmRM
ZXZlbFBhcnNlRXJyb3JzQnVmZmVyAFNjcmlwdEJ1ZmZlcgBtYWluT3V0cHV0QnVmZmVyAGdldF9S
ZXNvdXJjZU1hbmFnZXIAZ2V0X0Nvbm5lY3Rpb25NYW5hZ2VyAFRvVXBwZXIATWljcm9zb2Z0LlNx
bFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVs
aW5lLldyYXBwZXIAU3RyaW5nQ29tcGFyZXIAVGV4dEZpZWxkUGFyc2VyAHNldF9QYXJzZURhdGFU
eXBlRXJyb3IAcGFyc2VEYXRhVHlwZUVycm9yAEZpcmVFcnJvcgBBZGRSZWNvcmRMZXZlbFBhcnNp
bmdFcnJvcgBzZXRfUGFyc2VUcnVuY2F0aW9uRXJyb3IAcGFyc2VUcnVuY2F0aW9uRXJyb3IAc2V0
X1BhcnNlT3RoZXJFcnJvcgBwYXJzZU90aGVyRXJyb3IAc2V0X1BhcnNlRm9ybWF0RXJyb3IAcGFy
c2VGb3JtYXRFcnJvcgBzZXRfUGFyc2VGaWVsZENvdW50RXJyb3IAcGFyc2VGaWVsZENvdW50RXJy
b3IAc2V0X1BhcnNlTnVsbGFiaWxpdHlFcnJvcgBwYXJzZU51bGxhYmlsaXR5RXJyb3IASUVudW1l
cmF0b3IAR2V0RW51bWVyYXRvcgAuY3RvcgAuY2N0b3IAZ2V0X0hvdXIAT3V0cHV0SURzAFN5c3Rl
bS5EaWFnbm9zdGljcwBSZWFkRmllbGRzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMA
U3lzdGVtLlJlc291cmNlcwBTQ182ZDY5ZjI4ZDZmNzA0Zjk5OGNkODJmYTJiMmQzZjc2MC5Qcm9w
ZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfNmQ2OWYyOGQ2Zjcw
NGY5OThjZDgyZmEyYjJkM2Y3NjAuUHJvcGVydGllcwBWYXJpYWJsZXMARGF0ZVRpbWVTdHlsZXMA
c2V0X0hhc0ZpZWxkc0VuY2xvc2VkSW5RdW90ZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1
bW5JbmRleGVzAFNldHRpbmdzAEVxdWFscwBDb250YWlucwBnZXRfTm9uVHJ1bmNhdGVhYmxlQ29s
dW1ucwBub25UcnVuY2F0ZWFibGVDb2x1bW5zAGdldF9Ob3ROdWxsQ29sdW1ucwBub3ROdWxsQ29s
dW1ucwBnZXRfTWFuZGF0b3J5Q29sdW1ucwBtYW5kYXRvcnlDb2x1bW5zAFN5c3RlbS5UZXh0LlJl
Z3VsYXJFeHByZXNzaW9ucwBTeXN0ZW0uQ29sbGVjdGlvbnMAQ29ubmVjdGlvbnMAZ2V0X0NvbHVt
blJlZ2V4UGF0dGVybnMAY29sdW1uUmVnZXhQYXR0ZXJucwBQZWVrQ2hhcnMAQnVmZmVycwBTZXRE
ZWxpbWl0ZXJzAHRvdGFsRmllbGRFcnJvcnMAdG90YWxMaW5lRXJyb3JzAHNldF9Ub3RhbERhdGFU
eXBlRXJyb3JzAHRvdGFsRGF0YVR5cGVFcnJvcnMAc2V0X1RvdGFsVHJ1bmNhdGlvbkVycm9ycwB0
b3RhbFRydW5jYXRpb25FcnJvcnMAc2V0X1RvdGFsT3RoZXJFcnJvcnMAdG90YWxPdGhlckVycm9y
cwBzZXRfVG90YWxGb3JtYXRFcnJvcnMAdG90YWxGb3JtYXRFcnJvcnMAc2V0X1RvdGFsRmllbGRD
b3VudEVycm9ycwB0b3RhbEZpZWxkQ291bnRFcnJvcnMAc2V0X1RvdGFsTnVsbGFiaWxpdHlFcnJv
cnMAdG90YWxOdWxsYWJpbGl0eUVycm9ycwBnZXRfTWF4TGluZXNUb1Byb2Nlc3MAbWF4TGluZXNU
b1Byb2Nlc3MAZ2V0X0FsbG93YWJsZURhdGVGb3JtYXRzAGFsbG93YWJsZURhdGVGb3JtYXRzAEZp
bmlzaE91dHB1dHMAc2V0X2l0ZW1zdGF0dXMAQ3JlYXRlTmV3T3V0cHV0Um93cwBnZXRfS2V5cwBD
b25jYXQAUGFyc2VFeGFjdABPYmplY3QAU2V0RGF0ZVRpbWVPZmZzZXQAc2V0X1BhcnNlU291cmNl
TGluZU9mZnNldABwYXJzZVNvdXJjZUxpbmVPZmZzZXQAdHozVG9PZmZzZXQAZ2V0X0VuZE9mUm93
c2V0AFNldEVuZE9mUm93c2V0AFNwbGl0AGdldF9EZWZhdWx0AHNldF9QYXJzZVBhc3NGYWlsUmVz
dWx0AHBhcnNlUGFzc0ZhaWxSZXN1bHQAc2V0X2Nsb3NlZGJ5c3R1ZGVudABVc2VyQ29tcG9uZW50
AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQAZ2V0X0N1cnJlbnQAZ2V0X0NvdW50AGdl
dF9IZWFkZXJMaW5lQ291bnQAaGVhZGVyTGluZUNvdW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhT
Y3JpcHQAbm9uVHJ1bmNhdGVhYmxlQ29sdW1uTGlzdABub3ROdWxsQ29sdW1uTGlzdABtYW5kYXRv
cnlDb2x1bW5MaXN0AGdldF9Db2x1bW5IZWFkZXJMaXN0AGNvbHVtbkhlYWRlckxpc3QATWljcm9z
b2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QASW5wdXRDb25maWd1cmF0aW9uUGFyYW1ldGVyX1By
b2Nlc3NJbnB1dABQcmltZU91dHB1dABNb3ZlTmV4dABzZXRfUGFyc2VGaWVsZFRleHQAcGFyc2VG
aWVsZFRleHQAc2V0X0ZhaWxlZExpbmVUZXh0AHNldF9QYXJzZVNvdXJjZUxpbmVUZXh0AHBhcnNl
U291cmNlTGluZVRleHQAQWRkUm93AFJlbW92ZVJvdwBJbnB1dENvbmZpZ3VyYXRpb25QYXJhbWV0
ZXJfUHJvY2Vzc0lucHV0Um93AE5leHRSb3cAUmVnZXgAZ2V0X0RheQBkYXRlRm9ybWF0QXJyYXkA
Z2V0X0tleQBDb250YWluc0tleQBnZXRfQXNzZW1ibHkAZ2V0X1BhcnNlTG9nTGV2ZWxBRUFsbG9y
RXJyb3JzT25seQBzZXRfaW50ZXJ2ZW50aW9ucmVzb2x1dGlvbmNsb3NlY2F0ZWdvcnkAb3BfRXF1
YWxpdHkAb3BfSW5lcXVhbGl0eQBjb2xDYXNlU2Vuc2l0aXZpdHkARW1wdHkAAAAlTwB1AHQAcAB1
AHQAIAAtACAARgBpAGwAZQAgAEQAYQB0AGEAAQNFAAAJUABBAFMAUwAAC14ALgAqAFwAJAAAA1wA
AAdFAEQAVAAADS0AMAA0ADoAMAAwAAEHRQBTAFQAAA0tADAANQA6ADAAMAABB0MARABUAAAHQwBT
AFQAAA0tADAANgA6ADAAMAABB00ARABUAAAHTQBTAFQAAA0tADAANwA6ADAAMAABB1AARABUAAAH
UABTAFQAAA0tADAAOAA6ADAAMAABCUEASwBEAFQAAAlBAEsAUwBUAAANLQAwADkAOgAwADAAAQdI
AEQAVAAAB0gAUwBUAAANLQAxADAAOgAwADAAAQMsAAAHTgAvAEEAACtVAG4AYQBiAGwAZQAgAHQA
bwAgAHAAYQByAHMAZQAgAGwAaQBuAGUAIAAAFyAAbwBmACAAZgBpAGwAZQAuACAAWwAAA10AAAEA
CUYAQQBJAEwAAANOAAADWQAAX0QAdQBwAGwAaQBjAGEAdABlACAAYwBvAGwAdQBtAG4AIABuAGEA
bQBlACAAZgBvAHUAbgBkACAAaQBuACAAaQBuAHAAdQB0ACAAcgBlAGMAbwByAGQAcwBlAHQALgAA
XU0AYQBuAGQAYQB0AG8AcgB5ACAAYwBvAGwAdQBtAG4AIABtAGkAcwBzAGkAbgBnACAAZgByAG8A
bQAgAGkAbgBwAHUAdAAgAHIAZQBjAG8AcgBkAHMAZQB0AC4AAHtXAG8AcgBrAGQAYQB5ACAASQBE
ACAAYwBvAGwAdQBtAG4AIAByAGUAcQB1AGUAcwB0AGUAZAAgAGIAdQB0ACAAbQBpAHMAcwBpAG4A
ZwAgAGYAcgBvAG0AIABpAG4AcAB1AHQAIAByAGUAYwBvAHIAZABzAGUAdAAuAAB/TABvAG8AawB1
AHAAIABWAGEAbAB1AGUAIABjAG8AbAB1AG0AbgAgAHIAZQBxAHUAZQBzAHQAZQBkACAAYgB1AHQA
IABtAGkAcwBzAGkAbgBnACAAZgByAG8AbQAgAGkAbgBwAHUAdAAgAHIAZQBjAG8AcgBkAHMAZQB0
AC4AAICFQQBkAGQAaQB0AGkAbwBuAGEAbAAgAEQAYQB0AGEAIABjAG8AbAB1AG0AbgAgAHIAZQBx
AHUAZQBzAHQAZQBkACAAYgB1AHQAIABtAGkAcwBzAGkAbgBnACAAZgByAG8AbQAgAGkAbgBwAHUA
dAAgAHIAZQBjAG8AcgBkAHMAZQB0AC4AAHlDAG8AbAB1AG0AbgAgAG8AbgAgAG8AdQB0AHAAdQB0
ACAAcgBlAGMAbwByAGQAcwBlAHQAIABiAHUAdAAgAG0AaQBzAHMAaQBuAGcAIABmAHIAbwBtACAA
aQBuAHAAdQB0ACAAcgBlAGMAbwByAGQAcwBlAHQALgAATUUAeAB0AHIAYQAgAGMAbwBsAHUAbQBu
ACAAZgBvAHUAbgBkACAAbwBuACAAaQBuAHAAdQB0ACAAcgBlAGMAbwByAGQAcwBlAHQALgAAUU0A
YQBuAGQAYQB0AG8AcgB5ACAAQwBvAGwAdQBtAG4AIABNAGkAcwBzAGkAbgBnACAAZgByAG8AbQAg
AEkAbgBwAHUAdAAgAEYAaQBsAGUAAE9FAHgAcABlAGMAdABlAGQAIABDAG8AbAB1AG0AbgAgAE0A
aQBzAHMAaQBuAGcAIABmAHIAbwBtACAASQBuAHAAdQB0ACAARgBpAGwAZQAAS1UAbgBlAHgAcABl
AGMAdABlAGQAIABDAG8AbAB1AG0AbgAgAEYAbwB1AG4AZAAgAGkAbgAgAEkAbgBwAHUAdAAgAEYA
aQBsAGUAAC9EAFQAXwBCAFkAVABFAFMAfABEAFQAXwBTAFQAUgB8AEQAVABfAFcAUwBUAFIAAAMo
AAADKQAAK0QAVABfAEQARQBDAEkATQBBAEwAfABEAFQAXwBOAFUATQBFAFIASQBDAAARTgBPAFQA
IABOAFUATABMAAAJTgBVAEwATAAAT1UAbgBhAGIAbABlACAAdABvACAAYwBvAG4AdgBlAHIAdAAg
AHQAbwAgAHQAYQByAGcAZQB0ACAAZABhAHQAYQAgAHQAeQBwAGUAIABbAAAjRABhAHQAZQAgAHcA
aQB0AGgAIABZAGUAYQByACAAPAAgAAAzUwB0AHIAaQBuAGcAIAB3AG8AdQBsAGQAIABiAGUAIAB0
AHIAdQBuAGMAYQB0AGUAZAAACyAAYQBuAGQAIAAAb1MAdAByAGkAbgBnACAAdgBhAGwAdQBlACAA
ZgBhAGkAbABlAGQAIAB0AG8AIABtAGEAdABjAGgAIAByAGUAZwB1AGwAYQByACAAZQB4AHAAcgBl
AHMAcwBpAG8AbgAgAHAAYQB0AHQAZQByAG4AACNbAF4AXAB1ADAAMAAwADAALQBcAHUAMAAwADcA
RgBdACsAAQ1bAF4AAAAtAH8AXQABa1UAbgBpAGMAbwBkAGUAIABjAGgAYQByAGEAYwB0AGUAcgAg
AGYAbwB1AG4AZAAgAGYAbwByACAAbgBvAG4ALQB1AG4AaQBjAG8AZABlACAAdABhAHIAZwBlAHQA
IABjAG8AbAB1AG0AbgABT1QAaABlACAAZgBvAGwAbABvAHcAaQBuAGcAIABjAG8AbAB1AG0AbgBz
ACAAZgBhAGkAbABlAGQAIAB0AG8AIABwAGEAcgBzAGUAOgAgAAAvQwB1AHMAdABvAG0AIABGAGwA
YQB0ACAARgBpAGwAZQAgAFAAYQByAHMAZQByAABTTQBhAHgAaQBtAHUAbQAgAE4AdQBtAGIAZQBy
ACAAbwBmACAARQByAHIAbwByACAATABpAG4AZQBzACAAdABvACAASQBnAG4AbwByAGUAIAAoAAAp
KQAgAGUAeABjAGUAZQBkAGUAZAAgAGkAbgAgAGYAaQBsAGUAIAAiAAAFIgAuAAADOgAANSgAPwA8
ACEAKAAkAHwAWwBeAFwAXABdACkAKABcAFwAXABcACkAKgA/AFwAXAApAFwALAAANSgAPwA8ACEA
KAAkAHwAWwBeAFwAXABdACkAKABcAFwAXABcACkAKgA/AFwAXAApAFwAOwAANSgAPwA8ACEAKAAk
AHwAWwBeAFwAXABdACkAKABcAFwAXABcACkAKgA/AFwAXAApAFwAOgAAgJtJAHMATgB1AGwAbAAg
AHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEA
bABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBv
AGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAD9JAG4AcAB1AHQAIAAtACAAQwBvAG4AZgBpAGcA
dQByAGEAdABpAG8AbgAgAFAAYQByAGEAbQBlAHQAZQByAAFFTwB1AHQAcAB1AHQAIAAtACAAUgBl
AGMAbwByAGQAIABMAGUAdgBlAGwAIABQAGEAcgBzAGUAIABFAHIAcgBvAHIAcwABRU8AdQB0AHAA
dQB0ACAALQAgAEYAaQBlAGwAZAAgAEwAZQB2AGUAbAAgAFAAYQByAHMAZQAgAEwAbwBnAGcAaQBu
AGcAAUNPAHUAdABwAHUAdAAgAC0AIABGAGkAbABlACAATABlAHYAZQBsACAAUABhAHIAcwBlACAA
TABvAGcAZwBpAG4AZwABFUMAbwBuAG4AZQBjAHQAaQBvAG4AAHFTAEMAXwA2AGQANgA5AGYAMgA4
AGQANgBmADcAMAA0AGYAOQA5ADgAYwBkADgAMgBmAGEAMgBiADIAZAAzAGYANwA2ADAALgBQAHIA
bwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAADsWLy1mQDrQaYbVUBkxxHgAAQg
AQEIAyAAAQUgAQEREQQgAQEOBiABARGAtQwHBRJVElkSVRJBEl0FIAASgMUFIAASgMkEIAASVQMg
ABwDIAAOBCABAg4FIAASgNEHFRI5Ag4SQQcgAgETABMBBhUSOQIIDgMgAAgDIAACAwcBCAYAAggS
YQ4FAAICDg4FAAIICAgFIAIOCAiAwAdqEmUdDggCDhJpAgICAgIdDggOFRFtAQ4OFRF1Ag4SQQ4V
EXUCDggOAgICDg4OAg4IDg4SQQ4ODg4ODg4ODg4ODhF5CAICAgISfRGAgRJ9EYCFFRGAiQIODhUR
gI0CDg4SfRGAhRJ9EYCREn0RgJESfRGAhRJ9EYCFEn0RgIUSfRGAgRJ9EYCFEn0RgJUSfQQSfQYS
fQgSfQoSfQ4SfRGAgRJ9DBJ9DRJ9DhJ9DhJ9BRJ9BxJ9CRJ9CxJ9DhJ9AgUAAg4ODgYVEjkCDg4F
IAEBHQ4EIAEBAgQgAQ4IBCAAHQ4FAAEOHQ4GFRI5Ag4IBSABAhMABRUSSQEOCCAAFRFtARMABRUR
bQEOBCAAEwAKIAAVEnECEwATAQcVEnECDhJBCiAAFRF1AhMAEwEHFRF1Ag4SQQYVEnECDggGFRF1
Ag4ICiAGAQgODg4IEAIGIAETARMABCAAEXkHAAQODg4ODgYAAw4ODg4EAAECDgUgAgEIAgYAARGA
gQ4HIAIBCBGAgQsgABURgIkCEwATAQcVEYCJAg4OCyAAFRGAjQITABMBBxURgI0CDg4EIAATAQUA
ABKAsQ4ABBGAhQ4dDhKA4RGA5QYAARGAhQ4FIAARgIUKAAIRgIURgIUSUQogBwEICAgICAgIByAC
AQgRgOkGAAERgJEOByACAQgRgJEHIAIBCBGAhQYAARGAlQ4HIAIBCBGAlQQAAQQOBSACAQgEBAAB
Bg4FIAIBCAYEAAEIDgUgAgEICAQAAQoOBSACAQgKBxUSOQIOEk0FIAIBCA4EAAEMDgUgAgEIDAQA
AQ0OBSACAQgNAgYOBAABBQ4FIAIBCAUEAAEHDgUgAgEIBwQAAQkOBSACAQgJBAABCw4FIAIBCAsD
BwECLwcVFRI5Ag4SQRURdQIOEkEOHQ4IHQ4STQICAgICDhURbQEODg4VEXUCDggOAgICBAAAEj0G
IAEdDh0DESACARUSgRUBEwAVEoEZARMABgACHQ4ODgUAARJRDgogAQEVEoEZARMABAAAElEJIAMB
EkUdCBJhAwYSRQMGHQgEIAECCAQgAQgIBSACAQgcByACAg4RgSEFIAEdCAgFIAASgSUGIAESgSkO
BSAAEoClCAABEoEtEYExBSAAEoE1ByACAQ4SgTUIt3pcVhk04IkIiYRdzYCAzJEIsD9ffxHVCjoC
BggHBhUSOQIODgMGEj0IBhUSOQIOEkEHBhUSOQIIDgcGFRI5Ag4IAgYCBgYVEkkBDggGFRI5Ag4S
TQMGHQ4DBhJRAwYSJAMGEigDBhIQAwYSFAMGEhgDBhIcBAYSgKEEBhKArQQGEoCxAwYSMAsgBAEI
HQgdEkUSYRQgEQEIDg4ICA4ODg4ODg4ODg4ODgogBwEODg4ODg4OBSABARIMCSAEAQgOEkUSYQYg
AQESgKEFAAASgK0GAAEBEoCxBAAAEjADAAABAygADgMoAAIDKAAIBSgAEoClBQgAEoCtBQgAEoCx
BAgAEjAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEA
I1NDXzZkNjlmMjhkNmY3MDRmOTk4Y2Q4MmZhMmIyZDNmNzYwAAAFAQAAAAAWAQARQ29weXJpZ2h0
IEAgIDIwMTgAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlz
cGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43BAEAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5S
ZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1
cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3Vy
Y2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAiL0AAAAAAAAAAAAA
or0AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJS9AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNj
b3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAA
gAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFjAAADsAwAA
AAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAA
AAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYA
aQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAETAMA
AAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAwAAAA
GgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAA
AAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwA2AGQA
NgA5AGYAMgA4AGQANgBmADcAMAA0AGYAOQA5ADgAYwBkADgAMgBmAGEAMgBiADIAZAAzAGYANwA2
ADAAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABwACgA
AQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADAARQA4AEIANABFADQANwA3ADQAMAAy
ADQAQwAwADQAQQAzADAAOAAxAEEARABEADEANQBGADkAOAAxAEYANwAuAGQAbABsAAAASAASAAEA
TABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAy
ADAAMQA4AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgA
AQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AMABFADgAQgA0AEUANAA3
ADcANAAwADIANABDADAANABBADMAMAA4ADEAQQBEAEQAMQA1AEYAOQA4ADEARgA3AC4AZABsAGwA
AABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADYAZAA2ADkAZgAyADgAZAA2
AGYANwAwADQAZgA5ADkAOABjAGQAOAAyAGYAYQAyAGIAMgBkADMAZgA3ADYAMAAAADQACAABAFAA
cgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBl
AG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwAAAMAAAAtD0AAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_0e8b4e4774024c04a3081add15f981f7</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">98</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">94381dea27e8645a475f805c35e0543ae2a37b85</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">660e146c05f4964994d81b905bfb7715</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Connections[Connection]"
                      connectionManagerID="Package.ConnectionManagers[DW-SQL.Stage]"
                      connectionManagerRefId="Package.ConnectionManagers[DW-SQL.Stage]"
                      name="Connection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Inputs[Input - Configuration Parameter]"
                      description="Takes a set of input parameters and uses the first row that it finds."
                      hasSideEffects="true"
                      name="Input - Configuration Parameter">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Inputs[Input - Configuration Parameter].Columns[File Location]"
                          cachedDataType="wstr"
                          cachedLength="15"
                          cachedName="File Location"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[File Location]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Inputs[Input - Configuration Parameter].Columns[File Name]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="File Name"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[File Name]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Inputs[Input - Configuration Parameter].Columns[Header Line Count]"
                          cachedDataType="i4"
                          cachedName="Header Line Count"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Header Line Count]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Inputs[Input - Configuration Parameter].Columns[Column Header Line]"
                          cachedDataType="i4"
                          cachedName="Column Header Line"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Column Header Line]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Inputs[Input - Configuration Parameter].Columns[Column Header List]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="4000"
                          cachedName="Column Header List"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Column Header List]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Inputs[Input - Configuration Parameter].Columns[Max Lines To Process]"
                          cachedDataType="i4"
                          cachedName="Max Lines To Process"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Max Lines To Process]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Inputs[Input - Configuration Parameter].Columns[Max Errors To Ignore]"
                          cachedDataType="i4"
                          cachedName="Max Errors To Ignore"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Max Errors To Ignore]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Inputs[Input - Configuration Parameter].Columns[Max Events To Log]"
                          cachedDataType="i4"
                          cachedName="Max Events To Log"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Max Events To Log]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Inputs[Input - Configuration Parameter].Columns[Parse Log Level AE (All or Errors-Only)]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1"
                          cachedName="Parse Log Level AE (All or Errors-Only)"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Parse Log Level AE (All or Errors-Only)]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Inputs[Input - Configuration Parameter].Columns[Allow Missing Columns YN]"
                          cachedDataType="wstr"
                          cachedLength="1"
                          cachedName="Allow Missing Columns YN"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Allow Missing Columns YN]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Inputs[Input - Configuration Parameter].Columns[Allow Extra Columns YN]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1"
                          cachedName="Allow Extra Columns YN"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Allow Extra Columns YN]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Inputs[Input - Configuration Parameter].Columns[Truncate String Values YN]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1"
                          cachedName="Truncate String Values YN"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Truncate String Values YN]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Inputs[Input - Configuration Parameter].Columns[Fix Date Values YN]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Fix Date Values YN"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Fix Date Values YN]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Inputs[Input - Configuration Parameter].Columns[Allowable Date Formats]"
                          cachedDataType="wstr"
                          cachedLength="23"
                          cachedName="Allowable Date Formats"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Allowable Date Formats]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Inputs[Input - Configuration Parameter].Columns[Convert to TimeZone]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Convert to TimeZone"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Convert to TimeZone]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Inputs[Input - Configuration Parameter].Columns[Workday ID Column]"
                          cachedDataType="wstr"
                          cachedName="Workday ID Column"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Workday ID Column]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Inputs[Input - Configuration Parameter].Columns[Lookup Value Column]"
                          cachedDataType="wstr"
                          cachedName="Lookup Value Column"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Lookup Value Column]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Inputs[Input - Configuration Parameter].Columns[Additional Data Column]"
                          cachedDataType="wstr"
                          cachedName="Additional Data Column"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Additional Data Column]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Inputs[Input - Configuration Parameter].Columns[Not Null Columns]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="8000"
                          cachedName="Not Null Columns"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Not Null Columns]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Inputs[Input - Configuration Parameter].Columns[Mandatory Columns]"
                          cachedDataType="wstr"
                          cachedName="Mandatory Columns"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Mandatory Columns]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Inputs[Input - Configuration Parameter].Columns[Column Regex Patterns]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="8000"
                          cachedName="Column Regex Patterns"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Column Regex Patterns]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Inputs[Input - Configuration Parameter].Columns[File Name Output Column]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="File Name Output Column"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[File Name Output Column]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Inputs[Input - Configuration Parameter].Columns[Record Text Output Column]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Record Text Output Column"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Record Text Output Column]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Inputs[Input - Configuration Parameter].Columns[Earliest Allowable Year]"
                          cachedDataType="i4"
                          cachedName="Earliest Allowable Year"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Earliest Allowable Year]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Inputs[Input - Configuration Parameter].Columns[Non-Truncateable Columns]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="4000"
                          cachedName="Non-Truncateable Columns"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Non-Truncateable Columns]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Inputs[Input - Configuration Parameter].Columns[Column Names Case Sensitive YN]"
                          cachedDataType="wstr"
                          cachedLength="1"
                          cachedName="Column Names Case Sensitive YN"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Column Names Case Sensitive YN]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Inputs[Input - Configuration Parameter].Columns[Fail On Extra Column YN]"
                          cachedDataType="wstr"
                          cachedLength="1"
                          cachedName="Fail On Extra Column YN"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Fail On Extra Column YN]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Inputs[Input - Configuration Parameter].Columns[Fail On Missing Column YN]"
                          cachedDataType="wstr"
                          cachedLength="1"
                          cachedName="Fail On Missing Column YN"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Fail On Missing Column YN]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Inputs[Input - Configuration Parameter].Columns[Fail On Missing Mandatory Column In Header YN]"
                          cachedDataType="wstr"
                          cachedLength="1"
                          cachedName="Fail On Missing Mandatory Column In Header YN"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Fail On Missing Mandatory Column In Header YN]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Inputs[Input - Configuration Parameter].Columns[Fail On Missing Mandatory Column In Line YN]"
                          cachedDataType="wstr"
                          cachedLength="1"
                          cachedName="Fail On Missing Mandatory Column In Line YN"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Fail On Missing Mandatory Column In Line YN]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Inputs[Input - Configuration Parameter].Columns[Strip Unicode from Non-Unicode YN]"
                          cachedDataType="wstr"
                          cachedLength="1"
                          cachedName="Strip Unicode from Non-Unicode YN"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Strip Unicode from Non-Unicode YN]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Inputs[Input - Configuration Parameter].Columns[Convert Three-Char Timezoned to Offsets YN]"
                          cachedDataType="wstr"
                          cachedLength="1"
                          cachedName="Convert Three-Char Timezoned to Offsets YN"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Convert Three-Char Timezoned to Offsets YN]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data]"
                      description="Outputs the data parsed from the flat file.  Set the columns to the desired names and types."
                      hasSideEffects="true"
                      name="Output - File Data">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[item_ext_id]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[item_ext_id]"
                          name="item_ext_id" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[creator_integration_id]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[creator_integration_id]"
                          name="creator_integration_id" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[creator_institutional_email]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[creator_institutional_email]"
                          name="creator_institutional_email" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[student_integration_id]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[student_integration_id]"
                          name="student_integration_id" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[student_institutional_email]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[student_institutional_email]"
                          name="student_institutional_email" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[assigned_to_integration_id]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[assigned_to_integration_id]"
                          name="assigned_to_integration_id" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[assigned_to_institutional_email]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[assigned_to_institutional_email]"
                          name="assigned_to_institutional_email" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[create_date]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[create_date]"
                          name="create_date" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[item_origin]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[item_origin]"
                          name="item_origin" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[tracking_type]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[tracking_type]"
                          name="tracking_type" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[rule_name]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[rule_name]"
                          name="rule_name" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[course_section_id]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[course_section_id]"
                          name="course_section_id" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[success_plan_name]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[success_plan_name]"
                          name="success_plan_name" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[item_status]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[item_status]"
                          name="item_status" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[resolved_date]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[resolved_date]"
                          name="resolved_date" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[intervention_resolution_reason]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[intervention_resolution_reason]"
                          name="intervention_resolution_reason" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[intervention_resolution_close_category]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[intervention_resolution_close_category]"
                          name="intervention_resolution_close_category" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[closed_by_student]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[closed_by_student]"
                          name="closed_by_student" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Record Level Parse Errors]"
                      description="Logs errors only to tbl_WL_ETL_Load_Errors"
                      hasSideEffects="true"
                      name="Output - Record Level Parse Errors">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Record Level Parse Errors].Columns[File_Name]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Record Level Parse Errors].Columns[File_Name]"
                          name="File_Name" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Record Level Parse Errors].Columns[Failed_Line_Text]"
                          dataType="wstr"
                          length="4000"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Record Level Parse Errors].Columns[Failed_Line_Text]"
                          name="Failed_Line_Text" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Record Level Parse Errors].Columns[Lookup_WorkdayID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Record Level Parse Errors].Columns[Lookup_WorkdayID]"
                          name="Lookup_WorkdayID" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Record Level Parse Errors].Columns[Lookup_Value]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Record Level Parse Errors].Columns[Lookup_Value]"
                          name="Lookup_Value" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Record Level Parse Errors].Columns[Additional_Data]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Record Level Parse Errors].Columns[Additional_Data]"
                          name="Additional_Data" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Record Level Parse Errors].Columns[ErrorCode]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Record Level Parse Errors].Columns[ErrorCode]"
                          name="ErrorCode" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Record Level Parse Errors].Columns[ErrorColumn]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Record Level Parse Errors].Columns[ErrorColumn]"
                          name="ErrorColumn" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Record Level Parse Errors].Columns[FieldName]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Record Level Parse Errors].Columns[FieldName]"
                          name="FieldName" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Record Level Parse Errors].Columns[Message]"
                          codePage="1252"
                          dataType="str"
                          length="5000"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Record Level Parse Errors].Columns[Message]"
                          name="Message" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Field Level Parse Logging]"
                      hasSideEffects="true"
                      name="Output - Field Level Parse Logging">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Field Level Parse Logging].Columns[Parse_Control_ID]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Field Level Parse Logging].Columns[Parse_Control_ID]"
                          name="Parse_Control_ID" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Field Level Parse Logging].Columns[Parse_Source_File]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Field Level Parse Logging].Columns[Parse_Source_File]"
                          name="Parse_Source_File" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Field Level Parse Logging].Columns[Parse_Source_Line_Text]"
                          dataType="wstr"
                          length="4000"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Field Level Parse Logging].Columns[Parse_Source_Line_Text]"
                          name="Parse_Source_Line_Text" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Field Level Parse Logging].Columns[Parse_Source_Line_Offset]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Field Level Parse Logging].Columns[Parse_Source_Line_Offset]"
                          name="Parse_Source_Line_Offset" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Field Level Parse Logging].Columns[Target_Field_Number]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Field Level Parse Logging].Columns[Target_Field_Number]"
                          name="Target_Field_Number" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Field Level Parse Logging].Columns[Target_Field_Name]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Field Level Parse Logging].Columns[Target_Field_Name]"
                          name="Target_Field_Name" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Field Level Parse Logging].Columns[Target_Field_DataType]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Field Level Parse Logging].Columns[Target_Field_DataType]"
                          name="Target_Field_DataType" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Field Level Parse Logging].Columns[Target_Field_Nullable]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Field Level Parse Logging].Columns[Target_Field_Nullable]"
                          name="Target_Field_Nullable" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Field Level Parse Logging].Columns[Parse_Field_Text]"
                          dataType="wstr"
                          length="4000"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Field Level Parse Logging].Columns[Parse_Field_Text]"
                          name="Parse_Field_Text" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Field Level Parse Logging].Columns[Parse_PassFail_Result]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Field Level Parse Logging].Columns[Parse_PassFail_Result]"
                          name="Parse_PassFail_Result" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Field Level Parse Logging].Columns[Parse_Truncation_Error]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Field Level Parse Logging].Columns[Parse_Truncation_Error]"
                          name="Parse_Truncation_Error" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Field Level Parse Logging].Columns[Parse_Nullability_Error]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Field Level Parse Logging].Columns[Parse_Nullability_Error]"
                          name="Parse_Nullability_Error" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Field Level Parse Logging].Columns[Parse_DataType_Error]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Field Level Parse Logging].Columns[Parse_DataType_Error]"
                          name="Parse_DataType_Error" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Field Level Parse Logging].Columns[Parse_FieldCount_Error]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Field Level Parse Logging].Columns[Parse_FieldCount_Error]"
                          name="Parse_FieldCount_Error" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Field Level Parse Logging].Columns[Parse_Format_Error]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Field Level Parse Logging].Columns[Parse_Format_Error]"
                          name="Parse_Format_Error" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Field Level Parse Logging].Columns[Parse_Other_Error]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Field Level Parse Logging].Columns[Parse_Other_Error]"
                          name="Parse_Other_Error" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Field Level Parse Logging].Columns[Parse_Error_Message]"
                          codePage="1252"
                          dataType="str"
                          length="2000"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Field Level Parse Logging].Columns[Parse_Error_Message]"
                          name="Parse_Error_Message" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Level Parse Logging]"
                      hasSideEffects="true"
                      name="Output - File Level Parse Logging">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Level Parse Logging].Columns[Parse_Source_File]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Level Parse Logging].Columns[Parse_Source_File]"
                          name="Parse_Source_File" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Level Parse Logging].Columns[Total_Lines_Parsed]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Level Parse Logging].Columns[Total_Lines_Parsed]"
                          name="Total_Lines_Parsed" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Level Parse Logging].Columns[Total_Lines_Passed]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Level Parse Logging].Columns[Total_Lines_Passed]"
                          name="Total_Lines_Passed" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Level Parse Logging].Columns[Total_Lines_Failed]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Level Parse Logging].Columns[Total_Lines_Failed]"
                          name="Total_Lines_Failed" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Level Parse Logging].Columns[Total_Fields_Parsed]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Level Parse Logging].Columns[Total_Fields_Parsed]"
                          name="Total_Fields_Parsed" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Level Parse Logging].Columns[Total_Fields_Passed]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Level Parse Logging].Columns[Total_Fields_Passed]"
                          name="Total_Fields_Passed" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Level Parse Logging].Columns[Total_Fields_Failed]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Level Parse Logging].Columns[Total_Fields_Failed]"
                          name="Total_Fields_Failed" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Level Parse Logging].Columns[Total_Truncation_Errors]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Level Parse Logging].Columns[Total_Truncation_Errors]"
                          name="Total_Truncation_Errors" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Level Parse Logging].Columns[Total_Nullability_Errors]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Level Parse Logging].Columns[Total_Nullability_Errors]"
                          name="Total_Nullability_Errors" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Level Parse Logging].Columns[Total_DataType_Errors]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Level Parse Logging].Columns[Total_DataType_Errors]"
                          name="Total_DataType_Errors" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Level Parse Logging].Columns[Total_FieldCount_Errors]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Level Parse Logging].Columns[Total_FieldCount_Errors]"
                          name="Total_FieldCount_Errors" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Level Parse Logging].Columns[Total_Format_Errors]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Level Parse Logging].Columns[Total_Format_Errors]"
                          name="Total_Format_Errors" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Level Parse Logging].Columns[Total_Other_Errors]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Level Parse Logging].Columns[Total_Other_Errors]"
                          name="Total_Other_Errors" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SCR _HashValue"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="SCR _HashValue"
                  version="13">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[

#region Namespaces
using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Diagnostics;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using Microsoft.SqlServer.Dts.Runtime;
using Microsoft.SqlServer.Dts.Pipeline;
using System.Text;
using System.Windows.Forms;
using System.Security.Cryptography;

#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]

#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion


public class ScriptMain : UserComponent
{
    

    #region Methods
    private PipelineBuffer inputBuffer;

    /// <summary>
    /// The ProcessInput method is called to provide the component a full PipelineBuffer object that contains rows from the upstream component.
    /// The columns contained in buffer include those columns defined in the IDTSInputColumnCollection100 of the component.
    /// If the component has synchronous outputs, the buffer will also include the columns added to the output column collection by the component,
    /// and all the columns in the output column collection of the components upstream from the component.
    /// </summary>
    /// <param name="InputID">The ID of the input of the component.</param>
    /// <param name="Buffer">The PipelineBuffer object.</param>
    public override void ProcessInput(int InputID, Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer Buffer)
    {
        inputBuffer = Buffer;
        base.ProcessInput(InputID, Buffer);
    }
    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        //Holds the number of columns in the row
        int counter = 0;
        //Used to concatenate columns in our row
        StringBuilder values = new StringBuilder();
        //Will be used to hold the value of the column in the loop
        object value = null;
        //Will be used to capture the string
        string probStr = null;
        //Will be used to hold the length of the blob
        int probBlobLen = 0;
        //Will be used to hold the bytes of the blob
        byte[] probbytBlob = null;
        //Will be used to test the type of blob(ASCII or Unicode)
        object tester = null;
        //Will be used to determine case sensitivity
        string caseSensitive = Variables.strCaseSensitive;
            //Variables.strCaseSensitive;

        //Loops through the columns in the current record in the buffer
        for (counter = 0; counter < inputBuffer.ColumnCount - 1; counter++)
        {
            //Checks for null values in the column, if not we process the value, else we submit a blank to the string builder
            if (inputBuffer.IsNull(counter) == false)
            {
                //Sets tester to the object type of the column being evaluated in the loop
                tester = inputBuffer[counter].GetType();
                //Gets SSIS specific data type
                BufferColumn bc = inputBuffer.GetColumnInfo(counter);

                //Checks to see if the data is a BLOB
                if (object.ReferenceEquals(tester, typeof(BlobColumn)))
                {

                    //Convert BLOB data to string
                    probBlobLen = (int)inputBuffer.GetBlobLength(counter);
                    probbytBlob = inputBuffer.GetBlobData(counter, 0, probBlobLen);

                    //If input is Unicode
                    if (bc.DataType == DataType.DT_NTEXT)
                    {
                        probStr = System.Text.Encoding.Unicode.GetString(probbytBlob);

                    }
                    //If input is ASCII
                    else
                    {
                        probStr = System.Text.Encoding.ASCII.GetString(probbytBlob);

                    }
                    //Sets the value object to the current column in the loop if BLOB
                    value = probStr;
                }
                else
                {
                    //Sets the value object to the current column in the loop
                    value = inputBuffer[counter].ToString();

                }
                //Appends the StringBuilder with the value from the current column in the loop
                values.Append(value);
                values.Append("|");
            }
            else
            {
                //Appends the String Builder with a field separator if the incoming column has a null value
                values.Append("|");
            }
        }

        //Sets the output of the component to the SHA1 hash of the String Builder value

        //Not case sensitve
        if (caseSensitive == "N")
        {
            Row.NewHash = CreateMD5Hash(values.ToString().ToUpper());

        }
        //Case sensitive
        else
        {
            Row.NewHash = CreateMD5Hash(values.ToString());

        }

    }

    /// <summary>
    /// Generates a SHA1 hash value for a string passed
    /// </summary>
    /// <param name="data">Data string that is to be hashed</param>
    /// <returns>SAH1 hash value string</returns>
    //public static string CreateHash(string data)
    //{
    //    byte[] dataToHash = (new UnicodeEncoding()).GetBytes(data);
    //    SHA1CryptoServiceProvider sha = new SHA1CryptoServiceProvider();
    //    byte[] hashedData = sha.ComputeHash(dataToHash);
    //    RNGCryptoServiceProvider.Create().GetBytes(dataToHash);
    //    string s = Convert.ToBase64String(hashedData, Base64FormattingOptions.None);
    //    return s;
    //}

    public string CreateMD5Hash(string data)
    {
        // Step 1, calculate MD5 hash from input
        MD5 md5 = System.Security.Cryptography.MD5.Create();
        byte[] inputBytes = System.Text.Encoding.ASCII.GetBytes(data);
        byte[] hashBytes = md5.ComputeHash(inputBytes);

        // Step 2, convert byte array to hex string
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < hashBytes.Length; i++)
        {
            sb.Append(hashBytes[i].ToString("X2"));
        }
        return sb.ToString();
    }



    #endregion
}



]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String itemextid
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool itemextid_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String creatorintegrationid
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool creatorintegrationid_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String creatorinstitutionalemail
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool creatorinstitutionalemail_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String studentintegrationid
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool studentintegrationid_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String studentinstitutionalemail
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool studentinstitutionalemail_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String assignedtointegrationid
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool assignedtointegrationid_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String assignedtoinstitutionalemail
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool assignedtoinstitutionalemail_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public String itemorigin
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[7]);
        }
    }
    public bool itemorigin_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    public String rulename
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[8]);
        }
    }
    public bool rulename_IsNull
    {
        get
        {
            return IsNull(8);
        }
    }

    public String trackingtype
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[9]);
        }
    }
    public bool trackingtype_IsNull
    {
        get
        {
            return IsNull(9);
        }
    }

    public String coursesectionid
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[10]);
        }
    }
    public bool coursesectionid_IsNull
    {
        get
        {
            return IsNull(10);
        }
    }

    public String successplanname
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[11]);
        }
    }
    public bool successplanname_IsNull
    {
        get
        {
            return IsNull(11);
        }
    }

    public String itemstatus
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[12]);
        }
    }
    public bool itemstatus_IsNull
    {
        get
        {
            return IsNull(12);
        }
    }

    public String resolveddate
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[13]);
        }
    }
    public bool resolveddate_IsNull
    {
        get
        {
            return IsNull(13);
        }
    }

    public String interventionresolutionreason
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[14]);
        }
    }
    public bool interventionresolutionreason_IsNull
    {
        get
        {
            return IsNull(14);
        }
    }

    public String interventionresolutionclosecategory
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[15]);
        }
    }
    public bool interventionresolutionclosecategory_IsNull
    {
        get
        {
            return IsNull(15);
        }
    }

    public String closedbystudent
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[16]);
        }
    }
    public bool closedbystudent_IsNull
    {
        get
        {
            return IsNull(16);
        }
    }

    public String trackingintegrationid
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[17]);
        }
    }
    public bool trackingintegrationid_IsNull
    {
        get
        {
            return IsNull(17);
        }
    }

    public String NewHash
    {
        set
        {
            this[18] = value;
        }
    }
    public bool NewHash_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(18);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 Connection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String strCaseSensitive
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["strCaseSensitive"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_0d4c795259d145579c25b7a7fd80aadf.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{3C9DD22E-8575-4053-899C-01020A7EF92F}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_0d4c795259d145579c25b7a7fd80aadf</RootNamespace>
    <AssemblyName>SC_0d4c795259d145579c25b7a7fd80aadf</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0d4c795259d145579c25b7a7fd80aadf.Properties.Settings.get_Default():SC_0d4c795259d145579c25b7a7fd80aadf.Properties.Sett" +
    "ings")]

namespace SC_0d4c795259d145579c25b7a7fd80aadf.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_0d4c795259d145579c25b7a7fd80aadf</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_0d4c795259d145579c25b7a7fd80aadf</msb:DisplayName>
    <msb:ProjectId>{247973B1-A7D8-410E-8406-630356BEB4F5}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_0d4c795259d145579c25b7a7fd80aadf.csproj" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_0d4c795259d145579c25b7a7fd80aadf")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_0d4c795259d145579c25b7a7fd80aadf")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0d4c795259d145579c25b7a7fd80aadf.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0d4c795259d145579c25b7a7fd80aadf.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0d4c795259d145579c25b7a7fd80aadf.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_0d4c795259d145579c25b7a7fd80aadf.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_0d4c795259d145579c25b7a7fd80aadf.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_0d4c795259d145579c25b7a7fd80aadf.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAPaL5GYAAAAAAAAAAOAAIiALATAAACQAAAAIAAAAAAAARkIA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAPRBAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAATCIAAAAgAAAAJAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAmAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAALAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAo
QgAAAAAAAEgAAAACAAUAjCUAALAbAAABAAAAAAAAADxBAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEICBH0BAAAEAgMEKBAAAAoqAAAAEzAEADMBAAABAAARFgpz
EQAACgsUDBQNFhMEFBMFAnsDAAAEbzUAAAYTBhYKOMEAAAACewEAAAQGbxIAAAo6oAAAAAJ7AQAA
BAZvEwAACm8UAAAKAnsBAAAEBm8VAAAKEwfQHgAAASgWAAAKM00CewEAAAQGbxcAAAoTBAJ7AQAA
BAYWEQRvGAAAChMFEQd7GQAACiAvAQAAMw8oGgAAChEFbxsAAAoNKw0oHAAAChEFbxsAAAoNCQwr
EgJ7AQAABAZvEwAACm8dAAAKDAcIbx4AAAomB3IBAABwbx8AAAomKwwHcgEAAHBvHwAACiYGF1gK
BgJ7AQAABG8gAAAKF1k/LP///xEGcgUAAHAoIQAACiwYAwIHbx0AAApvIgAACigDAAAGbyoAAAYq
AwIHbx0AAAooAwAABm8qAAAGKgATMAMASwAAAAIAABEoIwAACigcAAAKA28kAAAKCgZvJQAACgtz
EQAACgwWDSscCAcJjyUAAAFyCQAAcCgmAAAKbx8AAAomCRdYDQkHjmky3ghvHQAACioeAiguAAAG
KioCAwQFKCcAAAoqUgJ7KAAACgJ7KQAAChaUbyoAAAoqIgIWKCsAAAoqUgJ7KAAACgJ7KQAACheU
byoAAAoqIgIXKCsAAAoqUgJ7KAAACgJ7KQAAChiUbyoAAAoqIgIYKCsAAAoqUgJ7KAAACgJ7KQAA
ChmUbyoAAAoqIgIZKCsAAAoqUgJ7KAAACgJ7KQAAChqUbyoAAAoqIgIaKCsAAAoqUgJ7KAAACgJ7
KQAAChuUbyoAAAoqIgIbKCsAAAoqUgJ7KAAACgJ7KQAAChyUbyoAAAoqIgIcKCsAAAoqUgJ7KAAA
CgJ7KQAACh2UbyoAAAoqIgIdKCsAAAoqUgJ7KAAACgJ7KQAACh6UbyoAAAoqIgIeKCsAAAoqVgJ7
KAAACgJ7KQAACh8JlG8qAAAKKiYCHwkoKwAACipWAnsoAAAKAnspAAAKHwqUbyoAAAoqJgIfCigr
AAAKKlYCeygAAAoCeykAAAofC5RvKgAACiomAh8LKCsAAAoqVgJ7KAAACgJ7KQAACh8MlG8qAAAK
KiYCHwwoKwAACipWAnsoAAAKAnspAAAKHw2UbyoAAAoqJgIfDSgrAAAKKlYCeygAAAoCeykAAAof
DpRvKgAACiomAh8OKCsAAAoqVgJ7KAAACgJ7KQAACh8PlG8qAAAKKiYCHw8oKwAACipWAnsoAAAK
AnspAAAKHxCUbyoAAAoqJgIfECgrAAAKKlYCeygAAAoCeykAAAofEZRvKgAACiomAh8RKCsAAAoq
KgIfEgMoLAAACipeAywJAh8SKC0AAAoqcg8AAHBzLgAACnoeAigvAAAKKh4CKDAAAAoqfgIoMQAA
CgICczIAAAZ9AgAABAICczQAAAZ9AwAABCqSBHKsAABwGm8yAAAKLBUCBQIDKDMAAAoOBHMFAAAG
bzAAAAYqSisHAgNvMQAABgNvLAAABi3xKgYqOgIoNAAACgIDfQQAAAQqggJ7BAAABG81AAAKbzYA
AApyvAAAcG83AAAKbzgAAAoqOgIoNAAACgIDfQUAAAQqlgJ7BQAABG85AAAKctIAAHBvOgAACig7
AAAKbzwAAAp0IgAAASoeAig0AAAKKq5+BgAABC0ecvQAAHDQBwAAAigWAAAKbz0AAApzPgAACoAG
AAAEfgYAAAQqGn4HAAAEKh4CgAcAAAQqGn4IAAAEKh4CKD8AAAoqLnM7AAAGgAgAAAQqQlNKQgEA
AQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAZAoAACN+AADQCgAAEA0AACNTdHJpbmdzAAAA
AOAXAABoAQAAI1VTAEgZAAAQAAAAI0dVSUQAAABYGQAAWAIAACNCbG9iAAAAAAAAAAIAAAFXFaIB
CQEAAAD6ATMAFgAAAQAAAC8AAAAIAAAACAAAADwAAAASAAAAPwAAABAAAAACAAAABQAAACsAAAAs
AAAAAQAAAAYAAAABAAAAAAB9BQEAAAAAAAYAqgNeCgYAPgReCgYA9gJLCg8A0goAAAYAIwNyCAYA
jQNyCAYAbgNyCAYAJQRyCAYAygNyCAYA4wNyCAYAOgNyCAYAVQOpBAoA/gMOAg4AkwkOAgYAeAlC
DAYAfwv1Bw4AOwgOAgoAogkOAgoAGQkOAgoA0AsOAhIAZgDtCQYA2QJLCgYAvwl+CgYA/whdCBYA
qQIKBRYACgMKBRYAeQJICAYAvgJeCgYAOwL1Bw4AMAgOAgYApAH1BxIALwLtCQYAoARCDAYAzwT1
BwYAqACxDAYA/AexDAYAXAT1BwYAswj1BwYA7gj1BxoAAQAVChoAKgAVChoATQAVChIAfwDtCRIA
GgDtCVMAYgwAABIAkADtCQYA0gxyCAAAAACsAAAAAAABAAEAAQAQABYIAAAQAAEAAQABABAAhgkA
AEkAAgAFAAEAEACyCwAAUQACAC4AAQAQAGQLAABBAAQAMgABABAAHAsAAEEABQA0AAAAEACFCuEK
QQAGADYAAAEQAFQL4QptAAgAOgABAK8JsAAGAGQLJwEGABwLKwEBAMALLwEBAMALLwERAAoIMwER
AGkCNwERAIgBOwFQIAAAAADGADUMGwABAGQgAAAAAMYAkgw/AQMApCEAAAAAhgDWBKEABAD7IQAA
AACGGD4KBgAFAAMiAAAAAIYYPgqmAAUADiIAAAAAhghzAWoACAAjIgAAAACGCEQGwwAIACwiAAAA
AIYILQFqAAgAQSIAAAAAhgjpBcMACABKIgAAAACGCEEFagAIAF8iAAAAAIYI8wbDAAgAaCIAAAAA
hghGAWoACAB9IgAAAACGCAkGwwAIAIYiAAAAAIYIXwVqAAgAmyIAAAAAhggYB8MACACkIgAAAACG
CBEBagAIALkiAAAAAIYIxgXDAAgAwiIAAAAAhgggBWoACADXIgAAAACGCMsGwwAIAOAiAAAAAIYI
IQhqAAgA9SIAAAAAhgg9B8MACAD+IgAAAACGCO0BagAIABMjAAAAAIYIWQbDAAgAHCMAAAAAhghA
AmoACAAyIwAAAACGCIgGwwAIADwjAAAAAIYIXwFqAAgAUiMAAAAAhggpBsMACABcIwAAAACGCPoB
agAIAHIjAAAAAIYIbQbDAAgAfCMAAAAAhghwC2oACACSIwAAAACGCHsHwwAIAJwjAAAAAIYIkQJq
AAgAsiMAAAAAhgigBsMACAC8IwAAAACGCM0IagAIANIjAAAAAIYIUwfDAAgA3CMAAAAAhgjbDGoA
CADyIwAAAACGCKwHwwAIAPwjAAAAAIYIngtqAAgAEiQAAAAAhgiRB8MACAAcJAAAAACGCPcAagAI
ADIkAAAAAIYIpQXDAAgAPCQAAAAAhgjwBBAACABHJAAAAACGCLgGRQEJAF8kAAAAAIYAqQzDAAoA
ZyQAAAAAhgCGC8MACgBvJAAAAACGGD4KBgAKAI8kAAAAAMYANQxKAQoAtCQAAAAAxgEuDD8BDgDH
JAAAAADGAZIMPwEPAMkkAAAAAIYYPgpUARAA2CQAAAAAhgikCOgAEQD5JAAAAACGGD4KVAERAAgl
AAAAAIYIZwRqABIALiUAAAAAgxg+CgYAEgA2JQAAAACTCLsJWgESAGIlAAAAAJMIUQJfARIAaSUA
AAAAkwhdAmQBEgBxJQAAAACWCJILagETAHglAAAAAIYYPgoGABMAgCUAAAAAkRhECm8BEwAAAAEA
tQAAAAIAtAkAAAEArQwAAAEA6QAAAAEAtAkAAAIALwsAAAMAJwkAAAEAYQQAAAEAYQQAAAEAtQAA
AAIAyAEAAAMAtAkAAAQAJwkAAAEAtAkAAAEArQwAAAEA1gsAAAEA1gsAAAEAYQQJAD4KAQARAD4K
BgAZAD4KCgApAD4KEAAxAD4KEAA5AD4KEABBAD4KEABJAD4KEABRAD4KEABZAD4KEABhAD4KEABp
AD4KBgCxAD4KBgDRAD4KFQDhAD4KBgChADUMGwB5AD4KBgBxANQHMABxAOMHNQCBADgCOgBxAAsJ
PwDpALYBRQBxAPwETABxAN0AUQCJAC8CWQAJAZgBXgAJAcwEZAAJAb0AXgCBAMMEagB5AIEBbgB5
AIEBdABxAOALegARAQMNfgARAeUJagAZAaICjgAJASYLlAAhAeQEmgApAcMEoQCRAD4KpgCRALQJ
sACRAC8LtABxAMwEuACRANQHMACRAOwHvQCRANsHAQAxAT4KEACRAKkMwwCRAIYLwwChAD4KBgAR
AV0LxwChAEMLzwCBAD4KBgChAMcA1QBBAYQI2wBJAdIB4QBRAc8J6AChABAL7QBZAeMH8wChAH0M
+gBhAU4MAAHpAM4MBwG5AD4KDQHZAD4KBgAuAAsAjwEuABMAmAEuABsAtwEuACMAwAEuACsA6QEu
ADMA6QEuADsA6QEuAEMAwAEuAEsA7wEuAFMA6QEuAFsABgJDAGMAUALjAGsAUAIBAXsAUAIpBXMA
twFJBXMAtwEiAIQAAwABAAUAJwAGACgABwApAAgAKwAAAHcBcwEAAEgGdwEAADEBcwEAAO0FdwEA
AEUFcwEAAPcGdwEAAEoBcwEAAA0GdwEAAGMFcwEAABwHdwEAABUBcwEAAMoFdwEAACQFcwEAAM8G
dwEAACUIcwEAAEEHdwEAAPEBcwEAAF0GdwEAAEQCcwEAAIwGdwEAAGMBcwEAAC0GdwEAAP4BcwEA
AHEGdwEAAHQLcwEAAH8HdwEAAJUCcwEAAKQGdwEAANEIcwEAAFcHdwEAAN8McwEAALAHdwEAAKIL
cwEAAJUHdwEAAPsAcwEAAKkFdwEAAPQEcwEAALwGdwEAAKgIewEAAGsEcwEAAL8JgAEAAHEChQEA
AJYLigECAAYAAwACAAcABQACAAgABwACAAkACQACAAoACwACAAsADQACAAwADwACAA0AEQACAA4A
EwACAA8AFQACABAAFwACABEAGQACABIAGwACABMAHQACABQAHwACABUAIQACABYAIwACABcAJQAC
ABgAJwACABkAKQACABoAKwACABsALQACABwALwACAB0AMQACAB4AMwACAB8ANQACACAANwACACEA
OQACACIAOwACACMAPQACACQAPwACACUAQQACACYAQwACACcARQACACgARwACACkASQABACoASwAB
ACsATQACADMATwACADUAUQACADcAUwACADgAVQABADkAVQACADoAVwAEgAAAAQAAAAAAAAAAAAAA
AAB8BAAABAAAAAAAAAAAAAAAFQHuAAAAAAAQAAAAAAAAAAAAAAAeAfALAAAAABAAAAAAAAAAAAAA
AB4BDQwAAAAAEAAAAAAAAAAAAAAAHgExCQAAAAAEAAAAAAAAAAAAAAAVAfUHAAAAABAAAAAAAAAA
AAAAAB4BVAkAAAAAAAAAAAEAAACPCgAAAAAASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAElEVFNW
YXJpYWJsZTEwMABJRFRTUnVudGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uMTAwAElEVFNSdW50aW1l
Q29ubmVjdGlvbjEwMABJRFRTQ29ubmVjdGlvbk1hbmFnZXIxMDAASURUU1ZhcmlhYmxlczEwMABJ
RFRTRXZhbHVhdG9yQ29udGV4dDEwMABNRDUAPE1vZHVsZT4ASW5wdXRJRABnZXRfQVNDSUkAZ2V0
X0NvbXBvbmVudE1ldGFEYXRhAEdldEJsb2JEYXRhAGRhdGEAbXNjb3JsaWIAZ2V0X3RyYWNraW5n
aW50ZWdyYXRpb25pZABnZXRfYXNzaWduZWR0b2ludGVncmF0aW9uaWQAZ2V0X2NyZWF0b3JpbnRl
Z3JhdGlvbmlkAGdldF9zdHVkZW50aW50ZWdyYXRpb25pZABnZXRfY291cnNlc2VjdGlvbmlkAGdl
dF9pdGVtZXh0aWQAQXBwZW5kAGRlZmF1bHRJbnN0YW5jZQBnZXRfVW5pY29kZQBSdW50aW1lVHlw
ZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBJbnB1dE5hbWUAR2V0UnVudGltZUNvbm5lY3Rpb25C
eU5hbWUAZ2V0X3J1bGVuYW1lAGdldF9zdWNjZXNzcGxhbm5hbWUATWljcm9zb2Z0LlNxbFNlcnZl
ci5EdHMuUGlwZWxpbmUARGF0YVR5cGUAR2V0VHlwZQBnZXRfdHJhY2tpbmd0eXBlAGdldF9DdWx0
dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBn
ZXRfcmVzb2x2ZWRkYXRlAENyZWF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVy
YXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRy
aWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNz
ZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5
Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBp
bGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2Vt
Ymx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmli
dXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0
ZQBCeXRlAHZhbHVlAGdldF9zdHJDYXNlU2Vuc2l0aXZlAFNDXzBkNGM3OTUyNTlkMTQ1NTc5YzI1
YjdhN2ZkODBhYWRmAEVuY29kaW5nAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcA
R2V0U3RyaW5nAENyZWF0ZU1ENUhhc2gAQ29tcHV0ZUhhc2gAc2V0X05ld0hhc2gAR2V0QmxvYkxl
bmd0aABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAZ2V0X2Fzc2lnbmVkdG9pbnN0aXR1dGlvbmFsZW1h
aWwAZ2V0X2NyZWF0b3JpbnN0aXR1dGlvbmFsZW1haWwAZ2V0X3N0dWRlbnRpbnN0aXR1dGlvbmFs
ZW1haWwAU0NfMGQ0Yzc5NTI1OWQxNDU1NzljMjViN2E3ZmQ4MGFhZGYuZGxsAGdldF90cmFja2lu
Z2ludGVncmF0aW9uaWRfSXNOdWxsAGdldF9hc3NpZ25lZHRvaW50ZWdyYXRpb25pZF9Jc051bGwA
Z2V0X2NyZWF0b3JpbnRlZ3JhdGlvbmlkX0lzTnVsbABnZXRfc3R1ZGVudGludGVncmF0aW9uaWRf
SXNOdWxsAGdldF9jb3Vyc2VzZWN0aW9uaWRfSXNOdWxsAGdldF9pdGVtZXh0aWRfSXNOdWxsAGdl
dF9ydWxlbmFtZV9Jc051bGwAZ2V0X3N1Y2Nlc3NwbGFubmFtZV9Jc051bGwAZ2V0X3RyYWNraW5n
dHlwZV9Jc051bGwAZ2V0X3Jlc29sdmVkZGF0ZV9Jc051bGwAc2V0X05ld0hhc2hfSXNOdWxsAGdl
dF9hc3NpZ25lZHRvaW5zdGl0dXRpb25hbGVtYWlsX0lzTnVsbABnZXRfY3JlYXRvcmluc3RpdHV0
aW9uYWxlbWFpbF9Jc051bGwAZ2V0X3N0dWRlbnRpbnN0aXR1dGlvbmFsZW1haWxfSXNOdWxsAGdl
dF9pdGVtb3JpZ2luX0lzTnVsbABnZXRfaW50ZXJ2ZW50aW9ucmVzb2x1dGlvbnJlYXNvbl9Jc051
bGwAZ2V0X2l0ZW1zdGF0dXNfSXNOdWxsAGdldF9jbG9zZWRieXN0dWRlbnRfSXNOdWxsAGdldF9p
bnRlcnZlbnRpb25yZXNvbHV0aW9uY2xvc2VjYXRlZ29yeV9Jc051bGwAU2V0TnVsbABnZXRfSXRl
bQBzZXRfSXRlbQBTeXN0ZW0ASGFzaEFsZ29yaXRobQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAGdl
dF9pdGVtb3JpZ2luAEJsb2JDb2x1bW4AQnVmZmVyQ29sdW1uAFN5c3RlbS5Db25maWd1cmF0aW9u
AFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAGdldF9SdW50aW1lQ29ubmVj
dGlvbkNvbGxlY3Rpb24AZ2V0X0Nvbm5lY3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBn
ZXRfaW50ZXJ2ZW50aW9ucmVzb2x1dGlvbnJlYXNvbgBTdHJpbmdDb21wYXJpc29uAEN1bHR1cmVJ
bmZvAEdldENvbHVtbkluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNl
cnZlci5EVFNSdW50aW1lV3JhcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5lV3JhcABT
dHJpbmdCdWlsZGVyAElucHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAaW5w
dXRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ29ubmVjdGlvbk1hbmFnZXIAVG9VcHBl
cgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIATWljcm9zb2Z0LlNxbFNl
cnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNz
AFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ18wZDRj
Nzk1MjU5ZDE0NTU3OWMyNWI3YTdmZDgwYWFkZi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJj
ZXMARGVidWdnaW5nTW9kZXMAU0NfMGQ0Yzc5NTI1OWQxNDU1NzljMjViN2E3ZmQ4MGFhZGYuUHJv
cGVydGllcwBnZXRfUmVhZE9ubHlWYXJpYWJsZXMAR2V0Qnl0ZXMAQnVmZmVyQ29sdW1uSW5kZXhl
cwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdzAEVxdWFscwBDb25uZWN0aW9ucwBnZXRfaXRlbXN0
YXR1cwBPYmplY3QARW5kT2ZSb3dzZXQAZ2V0X0RlZmF1bHQAZ2V0X2Nsb3NlZGJ5c3R1ZGVudABV
c2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQAZ2V0X0NvbHVtbkNv
dW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBl
bGluZUhvc3QASW5wdXQwX1Byb2Nlc3NJbnB1dABTeXN0ZW0uVGV4dABHZXRWYWx1ZVdpdGhDb250
ZXh0AFNjcmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdldF9FdmFsdWF0b3JDb250ZXh0AElucHV0
MF9Qcm9jZXNzSW5wdXRSb3cATmV4dFJvdwBTeXN0ZW0uU2VjdXJpdHkuQ3J5cHRvZ3JhcGh5AGdl
dF9Bc3NlbWJseQBnZXRfaW50ZXJ2ZW50aW9ucmVzb2x1dGlvbmNsb3NlY2F0ZWdvcnkAb3BfRXF1
YWxpdHkAAAADfAAAA04AAAVYADIAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABj
AGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcA
bgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABl
AGEAZAAuAAAPSQBuAHAAdQB0ACAAMAAAFUMAbwBuAG4AZQBjAHQAaQBvAG4AACFzAHQAcgBDAGEA
cwBlAFMAZQBuAHMAaQB0AGkAdgBlAABxUwBDAF8AMABkADQAYwA3ADkANQAyADUAOQBkADEANAA1
ADUANwA5AGMAMgA1AGIANwBhADcAZgBkADgAMABhAGEAZABmAC4AUAByAG8AcABlAHIAdABpAGUA
cwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAEAC8mVmI+BBm55TIoyMjawABCABAQgDIAABBSABARER
BCABAQ4FIAEBEWUGIAIBCBI5DQcICBI9HA4IHQUOEUUEIAECCAQgARwIBCAAEnUFIAERRQgGAAES
dRF9BCABCQgHIAMdBQgICAQGEYCBBQAAEoCFBSABDh0FAyAADgUgARI9HAUgARI9DgMgAAgFAAIC
Dg4JBwQdBR0FEj0IBQAAEoCNBSABHQUOBiABHQUdBQQgAQ4OCSADARI5HQgSTQMGEjkDBh0IBCAB
DggFIAIBCBwDIAACByACAg4RgJ0FIAEdCAgFIAASgKEFIAASgKUGIAESgKkOBCAAElUFIAASgK0G
IAESgLEcBQAAEoC1BiABHBKAuQUgABKAvQcgAgEOEoC9CLd6XFYZNOCJCImEXc2AgMyRAwYSFAMG
EhgDBhJRAwYSXQMGEmEDBhIgBSABARIMBCABAQIJIAQBCA4SORJNBSABARJRBAAAEl0EAAASYQUA
AQESYQQAABIgAwAAAQMoAA4DKAACBCgAElUECAASXQQIABJhBAgAEiAIAQAIAAAAAAAeAQABAFQC
FldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDXzBkNGM3OTUyNTlkMTQ1NTc5
YzI1YjdhN2ZkODBhYWRmAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjEAAEkBABouTkVURnJh
bWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdv
cmsgNC43BAEAAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VS
ZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGlj
S2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJj
ZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAHEIAAAAAAAAAAAAANkIAAAAgAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAChCAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAA
ABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA
7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4A
AAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEA
cgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACw
BEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0AGIA
MAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBt
AGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8A
MABkADQAYwA3ADkANQAyADUAOQBkADEANAA1ADUANwA5AGMAMgA1AGIANwBhADcAZgBkADgAMABh
AGEAZABmAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAA
cAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwAwAGQANABjADcAOQA1ADIANQA5
AGQAMQA0ADUANQA3ADkAYwAyADUAYgA3AGEANwBmAGQAOAAwAGEAYQBkAGYALgBkAGwAbAAAAEgA
EgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAg
ACAAMgAwADIAMQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAA
eAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADAAZAA0AGMANwA5
ADUAMgA1ADkAZAAxADQANQA1ADcAOQBjADIANQBiADcAYQA3AGYAZAA4ADAAYQBhAGQAZgAuAGQA
bABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwAwAGQANABjADcAOQA1
ADIANQA5AGQAMQA0ADUANQA3ADkAYwAyADUAYgA3AGEANwBmAGQAOAAwAGEAYQBkAGYAAAA0AAgA
AQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEAQQBz
AHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAAEgyAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_0d4c795259d145579c25b7a7fd80aadf</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::strCaseSensitive</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">1df6cfa8cbcf9ab163b3e6ccfd145d2e</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">0a41f6e08946d480bc571cc216d8219582357232</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">63</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SCR _HashValue.Connections[Connection]"
                      connectionManagerID="Package.ConnectionManagers[DW-SQL.Stage]"
                      connectionManagerRefId="Package.ConnectionManagers[DW-SQL.Stage]"
                      name="Connection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SCR _HashValue.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SCR _HashValue.Inputs[Input 0].Columns[item_ext_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="item_ext_id"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[item_ext_id]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SCR _HashValue.Inputs[Input 0].Columns[creator_integration_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="creator_integration_id"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[creator_integration_id]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SCR _HashValue.Inputs[Input 0].Columns[creator_institutional_email]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="creator_institutional_email"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[creator_institutional_email]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SCR _HashValue.Inputs[Input 0].Columns[student_integration_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="student_integration_id"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[student_integration_id]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SCR _HashValue.Inputs[Input 0].Columns[student_institutional_email]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="student_institutional_email"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[student_institutional_email]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SCR _HashValue.Inputs[Input 0].Columns[assigned_to_integration_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="assigned_to_integration_id"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[assigned_to_integration_id]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SCR _HashValue.Inputs[Input 0].Columns[assigned_to_institutional_email]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="assigned_to_institutional_email"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[assigned_to_institutional_email]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SCR _HashValue.Inputs[Input 0].Columns[item_origin]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="item_origin"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[item_origin]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SCR _HashValue.Inputs[Input 0].Columns[rule_name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1000"
                          cachedName="rule_name"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[rule_name]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SCR _HashValue.Inputs[Input 0].Columns[tracking_type]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="tracking_type"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[tracking_type]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SCR _HashValue.Inputs[Input 0].Columns[course_section_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="course_section_id"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[course_section_id]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SCR _HashValue.Inputs[Input 0].Columns[success_plan_name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="success_plan_name"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[success_plan_name]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SCR _HashValue.Inputs[Input 0].Columns[item_status]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="item_status"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[item_status]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SCR _HashValue.Inputs[Input 0].Columns[resolved_date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="resolved_date"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[resolved_date]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SCR _HashValue.Inputs[Input 0].Columns[intervention_resolution_reason]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="intervention_resolution_reason"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[intervention_resolution_reason]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SCR _HashValue.Inputs[Input 0].Columns[intervention_resolution_close_category]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="intervention_resolution_close_category"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[intervention_resolution_close_category]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SCR _HashValue.Inputs[Input 0].Columns[closed_by_student]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="closed_by_student"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data].Columns[closed_by_student]" />
                        <inputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SCR _HashValue.Inputs[Input 0].Columns[tracking_integration_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="62"
                          cachedName="tracking_integration_id"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[tracking_integration_id]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SCR _HashValue.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SCR _HashValue.Inputs[Input 0]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SCR _HashValue.Outputs[Output 0].Columns[New_Hash]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SCR _HashValue.Outputs[Output 0].Columns[New_Hash]"
                          name="New_Hash" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Set Script Parameters"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[File Location]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="15"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[File Location]"
                          name="File Location"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::SourceFolder]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::SourceFolder]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[File Name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[File Name]"
                          name="File Name"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::FileName]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::FileName]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Header Line Count]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Header Line Count]"
                          name="Header Line Count"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">1</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">1</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Column Header Line]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Column Header Line]"
                          name="Column Header Line"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">1</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">1</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Column Header List]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="4000"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Column Header List]"
                          name="Column Header List"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">""</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">""</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Max Lines To Process]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Max Lines To Process]"
                          name="Max Lines To Process"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">-1</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">-1</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Max Errors To Ignore]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Max Errors To Ignore]"
                          name="Max Errors To Ignore"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">-1</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">-1</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Max Events To Log]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Max Events To Log]"
                          name="Max Events To Log"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">-1</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">-1</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Parse Log Level AE (All or Errors-Only)]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="1"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Parse Log Level AE (All or Errors-Only)]"
                          name="Parse Log Level AE (All or Errors-Only)"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"E"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"E"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Allow Missing Columns YN]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="1"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Allow Missing Columns YN]"
                          name="Allow Missing Columns YN"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"Y"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"Y"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Allow Extra Columns YN]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="1"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Allow Extra Columns YN]"
                          name="Allow Extra Columns YN"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"Y"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"Y"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Column Names Case Sensitive YN]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="1"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Column Names Case Sensitive YN]"
                          name="Column Names Case Sensitive YN"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"N"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"N"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Truncate String Values YN]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="1"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Truncate String Values YN]"
                          name="Truncate String Values YN"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"Y"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"Y"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Strip Unicode from Non-Unicode YN]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="1"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Strip Unicode from Non-Unicode YN]"
                          name="Strip Unicode from Non-Unicode YN"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"Y"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"Y"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Convert Three-Char Timezoned to Offsets YN]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="1"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Convert Three-Char Timezoned to Offsets YN]"
                          name="Convert Three-Char Timezoned to Offsets YN"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"Y"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"Y"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Fix Date Values YN]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Fix Date Values YN]"
                          name="Fix Date Values YN"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"Y"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"Y"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Earliest Allowable Year]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Earliest Allowable Year]"
                          name="Earliest Allowable Year"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">1753</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">1753</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Allowable Date Formats]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="23"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Allowable Date Formats]"
                          name="Allowable Date Formats"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"yyyy-MM-dd HH:mm:ss zzz"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"yyyy-MM-dd HH:mm:ss zzz"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Convert to TimeZone]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Convert to TimeZone]"
                          name="Convert to TimeZone"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"Eastern Standard Time"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"Eastern Standard Time"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Workday ID Column]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Workday ID Column]"
                          name="Workday ID Column"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">""</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">""</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Lookup Value Column]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Lookup Value Column]"
                          name="Lookup Value Column"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">""</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">""</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Additional Data Column]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Additional Data Column]"
                          name="Additional Data Column"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">""</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">""</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Not Null Columns]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="8000"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Not Null Columns]"
                          name="Not Null Columns"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">""</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">""</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Mandatory Columns]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Mandatory Columns]"
                          name="Mandatory Columns"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">""</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">""</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Non-Truncateable Columns]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="4000"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Non-Truncateable Columns]"
                          name="Non-Truncateable Columns"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">""</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">""</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Column Regex Patterns]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="8000"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Column Regex Patterns]"
                          name="Column Regex Patterns"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">""</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">""</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[File Name Output Column]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[File Name Output Column]"
                          name="File Name Output Column"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"Input_File_Name"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"Input_File_Name"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Record Text Output Column]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Record Text Output Column]"
                          name="Record Text Output Column"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"Input_Line_Text"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"Input_Line_Text"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Fail On Extra Column YN]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="1"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Fail On Extra Column YN]"
                          name="Fail On Extra Column YN"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"N"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"N"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Fail On Missing Column YN]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="1"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Fail On Missing Column YN]"
                          name="Fail On Missing Column YN"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"N"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"N"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Fail On Missing Mandatory Column In Header YN]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="1"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Fail On Missing Mandatory Column In Header YN]"
                          name="Fail On Missing Mandatory Column In Header YN"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"Y"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"Y"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Fail On Missing Mandatory Column In Line YN]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="1"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Fail On Missing Mandatory Column In Line YN]"
                          name="Fail On Missing Mandatory Column In Line YN"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"N"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"N"</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Loop Trought All Track Files\Importing Tracking to Stage.Paths[Derived Column Output]"
                  endId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Inputs[Input - Configuration Parameter]"
                  name="Derived Column Output"
                  startId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Loop Trought All Track Files\Importing Tracking to Stage.Paths[Derived Column Output1]"
                  endId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Loop Trought All Track Files\Importing Tracking to Stage\New Parse Error Columns.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Loop Trought All Track Files\Importing Tracking to Stage.Paths[Derived Column Output2]"
                  endId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SCR _HashValue.Inputs[Input 0]"
                  name="Derived Column Output"
                  startId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Adding New Columns.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Loop Trought All Track Files\Importing Tracking to Stage.Paths[Lookup Match Output]"
                  endId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Matched rows.Inputs[Row Count Input 1]"
                  name="Lookup Match Output"
                  startId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Lookup.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Loop Trought All Track Files\Importing Tracking to Stage.Paths[Lookup No Match Output]"
                  endId="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking.Inputs[OLE DB Destination Input]"
                  name="Lookup No Match Output"
                  startId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Lookup.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\Loop Trought All Track Files\Importing Tracking to Stage.Paths[OLE DB Source Output]"
                  endId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters.Inputs[Derived Column Input]"
                  name="OLE DB Source Output"
                  startId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Get Single Row.Outputs[OLE DB Source Output]" />
                <path
                  refId="Package\Loop Trought All Track Files\Importing Tracking to Stage.Paths[Output - File Data]"
                  endId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Adding New Columns.Inputs[Derived Column Input]"
                  name="Output - File Data"
                  startId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - File Data]" />
                <path
                  refId="Package\Loop Trought All Track Files\Importing Tracking to Stage.Paths[Output - Record Level Parse Errors]"
                  endId="Package\Loop Trought All Track Files\Importing Tracking to Stage\New Parse Error Columns.Inputs[Derived Column Input]"
                  name="Output - Record Level Parse Errors"
                  startId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*.Outputs[Output - Record Level Parse Errors]" />
                <path
                  refId="Package\Loop Trought All Track Files\Importing Tracking to Stage.Paths[Output 0]"
                  endId="Package\Loop Trought All Track Files\Importing Tracking to Stage\Lookup.Inputs[Lookup Input]"
                  name="Output 0"
                  startId="Package\Loop Trought All Track Files\Importing Tracking to Stage\SCR _HashValue.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{83547069-C437-4237-97F8-0AC8EB3EF1A8}"
          DTS:ObjectName="{83547069-C437-4237-97F8-0AC8EB3EF1A8}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::FileName" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Sequence Container"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{E225A9BB-E091-441E-8C45-91A23E6FC5DD}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sequence Container">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Archive File"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{C522B531-C901-4537-9EE9-BC02E69B77A3}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Archive File"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_2f3d40c5a861436994b89e55eba0b7ca"
              VSTAMajorVersion="16"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::DestinationFolder,User::SourceFolder"
              ReadWriteVariables="User::FilesMovedCount">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_2f3d40c5a861436994b89e55eba0b7ca.Properties.Settings.get_Default():ST_2f3d40c5a861436994b89e55eba0b7ca.Properties.Sett" +
    "ings")]

namespace ST_2f3d40c5a861436994b89e55eba0b7ca.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_2f3d40c5a861436994b89e55eba0b7ca
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // TODO: Add your code here
            string folderpart;
            bool FolderExistFlg;
            string destFolder;
            destFolder = Dts.Variables["User::DestinationFolder"].Value.ToString();
            string sourceFolder = Dts.Variables["User::SourceFolder"].Value.ToString();
            string fName;

            Int32 fileCnt = 0;

            try
            {

                var directory = new DirectoryInfo(sourceFolder);
                FileInfo[] files = directory.GetFiles("tracking_*");
                foreach (FileInfo file in files)
                {
                    folderpart = file.Name.Substring(0, file.Name.LastIndexOf("_"));
                    FolderExistFlg = Directory.Exists(destFolder + folderpart);

                    if (!FolderExistFlg)
                    {
                        Directory.CreateDirectory(destFolder + "\\" + folderpart);
                    }
                    if (File.Exists(destFolder + "\\" + folderpart + "\\" + file.Name))
                    {
                        File.Delete(destFolder + "\\" + folderpart + "\\" + file.Name);

                    }


                    fName = file.FullName.ToString();
                    File.Move(fName, destFolder + "\\" + folderpart + "\\" + file.Name);

                    fileCnt += 1;

                }
                Dts.Variables["User::FilesMovedCount"].Value = Convert.ToInt32(fileCnt);


                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                Dts.Events.FireError(0, "An error occured", ex.Message, String.Empty, 0);

            }
        }
        #region ScriptResults declaration
            /// <summary>
            /// This enum provides a convenient shorthand within the scope of this class for setting the
            /// result of the script.
            /// 
            /// This code was generated automatically.
            /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_2f3d40c5a861436994b89e55eba0b7ca.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{25B9DDDF-7881-4BD6-98AA-AAC6225E1133}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_2f3d40c5a861436994b89e55eba0b7ca</RootNamespace>
    <AssemblyName>ST_2f3d40c5a861436994b89e55eba0b7ca</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_2f3d40c5a861436994b89e55eba0b7ca</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_2f3d40c5a861436994b89e55eba0b7ca</msb:DisplayName>
    <msb:ProjectId>{0B406669-B07B-4B20-9D41-8C03125AAF87}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_2f3d40c5a861436994b89e55eba0b7ca.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_2f3d40c5a861436994b89e55eba0b7ca")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_2f3d40c5a861436994b89e55eba0b7ca")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_2f3d40c5a861436994b89e55eba0b7ca.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_2f3d40c5a861436994b89e55eba0b7ca.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_2f3d40c5a861436994b89e55eba0b7ca.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_2f3d40c5a861436994b89e55eba0b7ca.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_2f3d40c5a861436994b89e55eba0b7ca.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_2f3d40c5a861436994b89e55eba0b7ca.dll">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
giIAAAAAhhjYBAYAAgCKIgAAAACRGN4E9AACAAAAAQAmAwkA2AQBABEA2AQGABkA2AQKACkA2AQQ
ADEA2AQQADkA2AQQAEEA2AQQAEkA2AQQAFEA2AQQAFkA2AQQAGEA2AQQAGkA2AQGAJEA2AQGALkA
2AQVAMkA2AQGAHEA0gUqANEAqgUvANkAAgQ0AOEAEgM6AJkAVwM+AOkA2AQQAOkAuAVCAPEAvgA+
APkAMQNJAPkAYANOAPkA+gVUAAEB8wVaAPkA+gVfAAEBOAZmAPkA+gVsAAkB8wVaAAkBcgFyAPEA
xwA+AAkBLAN3ABEBAQB9AOEAHAOCANEAFAYBANEA6AWHAIEAgAA+APkASAaNACEBzgSQAHEA2AQG
AJkA2AQGACkBpwCZACkBKwaiAKEA2ASoAMEA2AQGAAgAFADCAAgAGADHACkAcwAvAS4ACwAHAS4A
EwAQAS4AGwAvAS4AIwA4AS4AKwBhAS4AMwBhAS4AOwBhAS4AQwA4AS4ASwBnAS4AUwBhAS4AWwB+
AUMAYwDHAEkAcwAvAWEAewDHAGMAawDHABsAAwABAAQAAwAAAKoE+AAAACEB/QAAAAwGAgECAAQA
AwACAAUABQABAAYABQACAAcABwAEgAAAAQAAAD4jxjcAAAAAAABDAAAABAAAAAAAAAAAAAAAsABn
AAAAAAAQAAAAAAAAAAAAAAC5AGoDAAAAAAQAAAAAAAAAAAAAALAACwQAAAAAEAAAAAAAAAAAAAAA
uQAcAAAAAAAAAAAAAQAAACkFAAAFAAIAAAAAVG9JbnQzMgA8TW9kdWxlPgBTeXN0ZW0uSU8ATWlj
cm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AU1RfMmYzZDQwYzVhODYxNDM2OTk0
Yjg5ZTU1ZWJhMGI3Y2EAbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNlAGdldF9NZXNzYWdlAFZhcmlh
YmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEZpbGUAZ2V0X05hbWUAZ2V0
X0Z1bGxOYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdl
dF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RN
b2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUARGVs
ZXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1
dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlU
aXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtB
dHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRp
b25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1
Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRy
eVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJp
bGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAc2V0X1ZhbHVlAHZhbHVlAE1vdmUATGFzdEluZGV4T2YA
U3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBTdWJzdHJpbmcATWljcm9zb2Z0LlNx
bFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRh
c2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUXzJmM2Q0MGM1YTg2
MTQzNjk5NGI4OWU1NWViYTBiN2NhLmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1h
bgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5
c3RlbS5SZWZsZWN0aW9uAEV4Y2VwdGlvbgBGaWxlSW5mbwBDdWx0dXJlSW5mbwBGaWxlU3lzdGVt
SW5mbwBEaXJlY3RvcnlJbmZvAGdldF9SZXNvdXJjZU1hbmFnZXIARXZlbnRzT2JqZWN0V3JhcHBl
cgBGaXJlRXJyb3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGlt
ZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfMmYzZDQwYzVhODYxNDM2OTk0
Yjg5ZTU1ZWJhMGI3Y2EuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01v
ZGVzAFNUXzJmM2Q0MGM1YTg2MTQzNjk5NGI4OWU1NWViYTBiN2NhLlByb3BlcnRpZXMAZ2V0X1Zh
cmlhYmxlcwBHZXRGaWxlcwBTZXR0aW5ncwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBn
ZXRfRXZlbnRzAEV4aXN0cwBDb25jYXQAT2JqZWN0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0
AENvbnZlcnQAZ2V0X0Fzc2VtYmx5AENyZWF0ZURpcmVjdG9yeQBFbXB0eQAAAAAvVQBzAGUAcgA6
ADoARABlAHMAdABpAG4AYQB0AGkAbwBuAEYAbwBsAGQAZQByAAAlVQBzAGUAcgA6ADoAUwBvAHUA
cgBjAGUARgBvAGwAZABlAHIAABV0AHIAYQBjAGsAaQBuAGcAXwAqAAADXwAAA1wAACtVAHMAZQBy
ADoAOgBGAGkAbABlAHMATQBvAHYAZQBkAEMAbwB1AG4AdAAAIUEAbgAgAGUAcgByAG8AcgAgAG8A
YwBjAHUAcgBlAGQAAHFTAFQAXwAyAGYAMwBkADQAMABjADUAYQA4ADYAMQA0ADMANgA5ADkANABi
ADgAOQBlADUANQBlAGIAYQAwAGIANwBjAGEALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMA
bwB1AHIAYwBlAHMAAAAAAOD5yaO9HBZEnBXTknpeB8YABCABAQgDIAABBSABARERBCABAQ4FIAEB
EVkOBwgODg4IHRI9CBI9EkEEIAASaQQgABJtBSABEnEcAyAAHAMgAA4GIAEdEj0OBCABCA4FIAIO
CAgFAAIODg4EAAECDgYAAw4ODg4FAAESdQ4FAAEOHQ4EAAEBDgUAAgEODgQAAQgIBCABARwFIAAS
gJECBg4IIAUCCA4ODggIAAESgJURgJkFIAASgJ0HIAIBDhKAnQi3elxWGTTgiQiJhF3NgIDMkQQA
AAAABAEAAAADBhJRAwYSVQMGEhACBggDBhEUBAAAElEEAAASVQUAAQESVQQAABIQAwAAAQQIABJR
BAgAElUECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAA
AAAoAQAjU1RfMmYzZDQwYzVhODYxNDM2OTk0Yjg5ZTU1ZWJhMGI3Y2EAAAUBAAAAABYBABFDb3B5
cmlnaHQgQCAgMjAyMwAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdv
cmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0Lje0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5S
ZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1
cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3Vy
Y2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAtDEAAAAAAAAAAAAA
zjEAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAxAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNj
b3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAMY3PiMAAAEAxjc+Iz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBUAF8AMgBmADMAZAA0ADAAYwA1AGEAOAA2ADEANAAzADYAOQA5ADQAYgA4ADkAZQA1ADUA
ZQBiAGEAMABiADcAYwBhAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADkAMAAyADIALgAxADQAMgA3ADgAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
UwBUAF8AMgBmADMAZAA0ADAAYwA1AGEAOAA2ADEANAAzADYAOQA5ADQAYgA4ADkAZQA1ADUAZQBi
AGEAMABiADcAYwBhAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQA
AABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADMAAAAqAAEAAQBMAGUAZwBhAGwAVABy
AGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAFQAXwAyAGYAMwBkADQAMABjADUAYQA4ADYAMQA0ADMANgA5ADkANABiADgAOQBl
ADUANQBlAGIAYQAwAGIANwBjAGEALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBUAF8AMgBmADMAZAA0ADAAYwA1AGEAOAA2ADEANAAzADYAOQA5ADQAYgA4ADkAZQA1
ADUAZQBiAGEAMABiADcAYwBhAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA5ADAAMgAyAC4AMQA0ADIANwA4AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABW
AGUAcgBzAGkAbwBuAAAAMQAuADAALgA5ADAAMgAyAC4AMQA0ADIANwA4AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAOAxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Files  Moved to Archive"
          DTS:CreationName="Microsoft.SendMailTask"
          DTS:Description="Send Mail Task"
          DTS:DTSID="{B772B191-EF30-43F4-9D85-4D260ACDE866}"
          DTS:ExecutableType="Microsoft.SendMailTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Files  Moved to Archive"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:PropertyExpression
            DTS:Name="FromLine">@[User::Email_id_sender]</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="ToLine">@[User::Email_id_receiver]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SendMailTask:SendMailTaskData
              SendMailTask:SMTPServer="{D389747A-D7EA-4696-8DFC-1A86AD07F963}"
              SendMailTask:From="umg-up.biteam.datawarehouse@pennstateoffice365.onmicrosoft.com"
              SendMailTask:To="L-DWEMAIL@LISTS.PSU.EDU"
              SendMailTask:Subject="Starfish Files"
              SendMailTask:Priority="High"
              SendMailTask:MessageSourceType="Variable"
              SendMailTask:MessageSource="User::FilesMovedMsg" xmlns:SendMailTask="www.microsoft.com/sqlserver/dts/tasks/sendmailtask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Files Not Moved Problem"
          DTS:CreationName="Microsoft.SendMailTask"
          DTS:Description="Send Mail Task"
          DTS:DTSID="{FEBBDA44-5396-4EF7-AAD5-53EC338A94AE}"
          DTS:ExecutableType="Microsoft.SendMailTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Files Not Moved Problem"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:PropertyExpression
            DTS:Name="FromLine">@[User::Email_id_sender]</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="ToLine">@[User::Email_id_receiver]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SendMailTask:SendMailTaskData
              SendMailTask:SMTPServer="{D389747A-D7EA-4696-8DFC-1A86AD07F963}"
              SendMailTask:From="umg-up.biteam.datawarehouse@pennstateoffice365.onmicrosoft.com"
              SendMailTask:To="L-DWEMAIL@LISTS.PSU.EDU"
              SendMailTask:Subject="Starfish Files"
              SendMailTask:Priority="High"
              SendMailTask:MessageSourceType="Variable"
              SendMailTask:MessageSource="User::NoFilesMoved" xmlns:SendMailTask="www.microsoft.com/sqlserver/dts/tasks/sendmailtask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Find Junk Files"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{DE74899E-58FC-484D-AEE9-9AB7F00552BB}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="Find Junk Files">
          <DTS:ForEachEnumerator
            DTS:CreationName="Microsoft.ForEachFileEnumerator"
            DTS:DTSID="{012EA527-EB6D-4D3D-835C-E6C6A9A4F4B0}"
            DTS:ObjectName="{3FB4F9E9-1245-4E10-A3F7-7099A4368BBB}">
            <DTS:ObjectData>
              <ForEachFileEnumeratorProperties>
                <FEFEProperty
                  Folder="F:\Dat\starfish" />
                <FEFEProperty
                  FileSpec="*.csv" />
                <FEFEProperty
                  FileNameRetrievalType="1" />
                <FEFEProperty
                  Recurse="0" />
              </ForEachFileEnumeratorProperties>
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Find Junk Files\Delete  Junk Files"
              DTS:CreationName="Microsoft.FileSystemTask"
              DTS:DelayValidation="True"
              DTS:Description="File System Task"
              DTS:DTSID="{78EAE056-7289-4B96-B678-EAEC06BFA25D}"
              DTS:ExecutableType="Microsoft.FileSystemTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Delete  Junk Files"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:ObjectData>
                <FileSystemData
                  TaskOperationType="DeleteFile"
                  TaskSourcePath="User::varDeleteFiles"
                  TaskIsSourceVariable="True" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{052B5561-85FF-4A49-87C5-A046E9FBF401}"
              DTS:ObjectName="{12768FEA-D8BF-428D-BA90-E757F58881BB}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::varDeleteFiles" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{D7AD5366-B96D-4900-BBAB-C0B4E9C8CAB6}"
          DTS:From="Package\Sequence Container\Archive File"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Sequence Container\Find Junk Files" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{585C94E4-C384-4014-8A35-AD1612BE5DD9}"
          DTS:From="Package\Sequence Container\Archive File"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Sequence Container\Files  Moved to Archive" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{A6A0C637-8CCC-488E-9FC4-57EB4A97E172}"
          DTS:From="Package\Sequence Container\Archive File"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Sequence Container\Files Not Moved Problem"
          DTS:Value="1" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Truncate table sf_tracking"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{44ABD7AE-4253-4381-A83F-F902D1EE17AC}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Truncate table sf_tracking"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{49EB527A-907A-4E9A-BBDC-B5B8551264F3}"
          SQLTask:SqlStatementSource="truncate table [idr].[sf_tracking]" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Updating Table Tracking on IDR"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{CE03BCCA-A2E3-4478-8686-FA910211FCE0}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Updating Table Tracking on IDR">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{C004447B-5E8B-4F25-B324-BE84E5F19C37}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Incrimental Update Tracking Table"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Conditional Split"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Conditional Split"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Conditional Split.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Conditional Split.Inputs[Conditional Split Input].Columns[tracking_integration_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="62"
                          cachedName="tracking_integration_id"
                          cachedSortKeyPosition="1"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[tracking_integration_id]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Conditional Split.Inputs[Conditional Split Input].Columns[DEST_tracking_integration_id]"
                          cachedDataType="wstr"
                          cachedLength="62"
                          cachedName="DEST_tracking_integration_id"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Lookup.Outputs[Lookup Match Output].Columns[DEST_tracking_integration_id]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Conditional Split.Inputs[Conditional Split Input].Columns[Hash_DW_str]"
                          cachedDataType="wstr"
                          cachedLength="62"
                          cachedName="Hash_DW_str"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[Hash_DW_str]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Conditional Split.Inputs[Conditional Split Input].Columns[DEST_Hash_DW]"
                          cachedDataType="wstr"
                          cachedLength="62"
                          cachedName="DEST_Hash_DW"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Lookup.Outputs[Lookup Match Output].Columns[DEST_Hash_DW]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Conditional Split.Outputs[Matched]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Matched"
                      synchronousInputId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">#{Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[tracking_integration_id]} == #{Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Lookup.Outputs[Lookup Match Output].Columns[DEST_tracking_integration_id]} &amp;&amp; #{Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[Hash_DW_str]} == #{Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Lookup.Outputs[Lookup Match Output].Columns[DEST_Hash_DW]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">tracking_integration_id == DEST_tracking_integration_id &amp;&amp; Hash_DW_str == DEST_Hash_DW</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Conditional Split.Outputs[NotMatchedRecords]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="NotMatchedRecords"
                      synchronousInputId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Conditional Split.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Conditional Split.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Conditional Split.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Inputs[Data Conversion Input].Columns[tracking_integration_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="62"
                          cachedName="tracking_integration_id"
                          cachedSortKeyPosition="1"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[tracking_integration_id]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Inputs[Data Conversion Input].Columns[item_ext_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="62"
                          cachedName="item_ext_id"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[item_ext_id]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Inputs[Data Conversion Input].Columns[student_integration_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1000"
                          cachedName="student_integration_id"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[student_integration_id]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Inputs[Data Conversion Input].Columns[student_institutional_email]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1000"
                          cachedName="student_institutional_email"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[student_institutional_email]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Inputs[Data Conversion Input].Columns[create_date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1000"
                          cachedName="create_date"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[create_date]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Inputs[Data Conversion Input].Columns[item_origin]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1000"
                          cachedName="item_origin"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[item_origin]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Inputs[Data Conversion Input].Columns[tracking_type]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1000"
                          cachedName="tracking_type"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[tracking_type]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Inputs[Data Conversion Input].Columns[rule_name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1000"
                          cachedName="rule_name"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[rule_name]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Inputs[Data Conversion Input].Columns[course_section_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1000"
                          cachedName="course_section_id"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[course_section_id]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Inputs[Data Conversion Input].Columns[success_plan_name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1000"
                          cachedName="success_plan_name"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[success_plan_name]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Inputs[Data Conversion Input].Columns[item_status]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1000"
                          cachedName="item_status"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[item_status]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Inputs[Data Conversion Input].Columns[resolved_date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1000"
                          cachedName="resolved_date"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[resolved_date]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Inputs[Data Conversion Input].Columns[intervention_resolution_reason]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1000"
                          cachedName="intervention_resolution_reason"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[intervention_resolution_reason]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Inputs[Data Conversion Input].Columns[intervention_resolution_close_category]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1000"
                          cachedName="intervention_resolution_close_category"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[intervention_resolution_close_category]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Inputs[Data Conversion Input].Columns[closed_by_student]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1000"
                          cachedName="closed_by_student"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[closed_by_student]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Inputs[Data Conversion Input].Columns[creator_integration_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1000"
                          cachedName="creator_integration_id"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[creator_integration_id]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Inputs[Data Conversion Input].Columns[assigned_to_integration_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1000"
                          cachedName="assigned_to_integration_id"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[assigned_to_integration_id]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Inputs[Data Conversion Input].Columns[assigned_to_institutional_email]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1000"
                          cachedName="assigned_to_institutional_email"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[assigned_to_institutional_email]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Inputs[Data Conversion Input].Columns[FileImported]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="FileImported"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[FileImported]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Inputs[Data Conversion Input].Columns[FileCreated_On]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="25"
                          cachedName="FileCreated_On"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[FileCreated_On]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Inputs[Data Conversion Input].Columns[FileSize]"
                          cachedDataType="i4"
                          cachedName="FileSize"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[FileSize]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Inputs[Data Conversion Input].Columns[Hash_DW]"
                          cachedDataType="wstr"
                          cachedLength="62"
                          cachedName="Hash_DW"
                          cachedSortKeyPosition="2"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[Hash_DW]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Inputs[Data Conversion Input].Columns[ETL_SOURCE]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="15"
                          cachedName="ETL_SOURCE"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[ETL_SOURCE]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[tracking_integration_id_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="62"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[tracking_integration_id_str]"
                          name="tracking_integration_id_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[tracking_integration_id]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[item_ext_id_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="62"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[item_ext_id_str]"
                          name="item_ext_id_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[item_ext_id]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[student_integration_id_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="150"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[student_integration_id_str]"
                          name="student_integration_id_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[student_integration_id]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[student_institutional_email_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="200"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[student_institutional_email_str]"
                          name="student_institutional_email_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[student_institutional_email]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[create_date_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="24"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[create_date_str]"
                          name="create_date_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[create_date]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[item_origin_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[item_origin_str]"
                          name="item_origin_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[item_origin]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[tracking_type_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[tracking_type_str]"
                          name="tracking_type_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[tracking_type]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[rule_name_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="150"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[rule_name_str]"
                          name="rule_name_str"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[rule_name]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[course_section_id_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[course_section_id_str]"
                          name="course_section_id_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[course_section_id]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[success_plan_name_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="150"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[success_plan_name_str]"
                          name="success_plan_name_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[success_plan_name]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[item_status_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[item_status_str]"
                          name="item_status_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[item_status]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[resolved_date_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[resolved_date_str]"
                          name="resolved_date_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[resolved_date]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[intervention_resolution_reason_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="150"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[intervention_resolution_reason_str]"
                          name="intervention_resolution_reason_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[intervention_resolution_reason]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[intervention_resolution_close_category_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[intervention_resolution_close_category_str]"
                          name="intervention_resolution_close_category_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[intervention_resolution_close_category]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[closed_by_student_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[closed_by_student_str]"
                          name="closed_by_student_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[closed_by_student]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[creator_integration_id_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="150"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[creator_integration_id_str]"
                          name="creator_integration_id_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[creator_integration_id]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[assigned_to_integration_id_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[assigned_to_integration_id_str]"
                          name="assigned_to_integration_id_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[assigned_to_integration_id]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[assigned_to_institutional_email_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="150"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[assigned_to_institutional_email_str]"
                          name="assigned_to_institutional_email_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[assigned_to_institutional_email]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[FileImported_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[FileImported_str]"
                          name="FileImported_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[FileImported]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[FileCreated_On_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="25"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[FileCreated_On_str]"
                          name="FileCreated_On_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[FileCreated_On]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[FileSize_int]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[FileSize_int]"
                          name="FileSize_int"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[FileSize]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[Hash_DW_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="62"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[Hash_DW_str]"
                          name="Hash_DW_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[Hash_DW]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[ETL_SOURCE_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="15"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[ETL_SOURCE_str]"
                          name="ETL_SOURCE_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[ETL_SOURCE]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\DC-UPDATE_DT"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="DC-UPDATE_DT"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\DC-UPDATE_DT.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\DC-UPDATE_DT.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\DC-UPDATE_DT.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\DC-UPDATE_DT.Outputs[Derived Column Output].Columns[UPDATE_DT]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\DC-UPDATE_DT.Outputs[Derived Column Output].Columns[UPDATE_DT]"
                          name="UPDATE_DT"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[System::StartTime]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[System::StartTime]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\DC-UPDATE_DT.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\DC-UPDATE_DT.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\DC-UPDATE_DT.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\DC-UPDATE_DT.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\DC-UPDATE_DT.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\DC-UPDATE_DT.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Lookup"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT distinct [tracking_integration_id] , [Hash_DW]
    
  FROM IDR.[etl].[starfish_tracking]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (SELECT distinct [tracking_integration_id] , [Hash_DW]
    
  FROM IDR.[etl].[starfish_tracking]) [refTable]
where [refTable].[tracking_integration_id] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="tracking_integration_id" dataType="DT_WSTR" length="62" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Hash_DW" dataType="DT_WSTR" length="62" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[tracking_integration_id_str]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Lookup.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.IDR]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.IDR]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Lookup.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Lookup.Inputs[Lookup Input].Columns[tracking_integration_id_str]"
                          cachedDataType="wstr"
                          cachedLength="62"
                          cachedName="tracking_integration_id_str"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[tracking_integration_id_str]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">tracking_integration_id</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Lookup.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Lookup.Outputs[Lookup Match Output].Columns[DEST_tracking_integration_id]"
                          dataType="wstr"
                          errorOrTruncationOperation="Copy Column"
                          length="62"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Lookup.Outputs[Lookup Match Output].Columns[DEST_tracking_integration_id]"
                          name="DEST_tracking_integration_id"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">tracking_integration_id</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Lookup.Outputs[Lookup Match Output].Columns[DEST_Hash_DW]"
                          dataType="wstr"
                          errorOrTruncationOperation="Copy Column"
                          length="62"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Lookup.Outputs[Lookup Match Output].Columns[DEST_Hash_DW]"
                          name="DEST_Hash_DW"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">Hash_DW</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Lookup.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Lookup.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="OLE DB Stage Tracking  Source"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[idr].[sf_tracking]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT 
      [tracking_integration_id]
      ,[item_ext_id]
      ,[creator_integration_id]
      ,[student_integration_id]
      ,[student_institutional_email]
      ,[assigned_to_integration_id]
      ,[assigned_to_institutional_email]
      ,[create_date]
      ,[item_origin]
      ,[tracking_type]
      ,substring([rule_name],1,150) as rule_name 
      ,[course_section_id]
      ,[success_plan_name]
      ,[item_status]
      ,[resolved_date]
      ,[intervention_resolution_reason]
      ,[intervention_resolution_close_category]
      ,[closed_by_student]
      ,[DELETE_FLG]
      ,[INSERT_DT]
      ,[UPDATE_dtm]
      ,[ETL_SOURCE]
      ,[FileImported]
      ,[FileCreated_On]
      ,[FileSize]
      ,[Hash_DW]
  FROM [idr].[sf_tracking] stg

  JOIN 
( SELECT rowid, row_number() over (partition by [tracking_integration_id] order by FileCreated_On DESC) rownum  
FROM whse_stage.[idr].[sf_tracking]) most_recent ON stg.rowid = most_recent.rowid AND most_recent.rownum = 1</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[DW-SQL.Stage]"
                      connectionManagerRefId="Package.ConnectionManagers[DW-SQL.Stage]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output]"
                      isSorted="true"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[tracking_integration_id]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[tracking_integration_id]"
                          length="62"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[tracking_integration_id]"
                          name="tracking_integration_id"
                          sortKeyPosition="1"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[item_ext_id]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[item_ext_id]"
                          length="62"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[item_ext_id]"
                          name="item_ext_id"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[rule_name]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[rule_name]"
                          length="1000"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[rule_name]"
                          name="rule_name"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[creator_integration_id]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[creator_integration_id]"
                          length="1000"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[creator_integration_id]"
                          name="creator_integration_id"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[tracking_type]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[tracking_type]"
                          length="1000"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[tracking_type]"
                          name="tracking_type"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[item_origin]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[item_origin]"
                          length="1000"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[item_origin]"
                          name="item_origin"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[course_section_id]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[course_section_id]"
                          length="1000"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[course_section_id]"
                          name="course_section_id"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[item_status]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[item_status]"
                          length="1000"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[item_status]"
                          name="item_status"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[resolved_date]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[resolved_date]"
                          length="1000"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[resolved_date]"
                          name="resolved_date"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[intervention_resolution_reason]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[intervention_resolution_reason]"
                          length="1000"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[intervention_resolution_reason]"
                          name="intervention_resolution_reason"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[intervention_resolution_close_category]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[intervention_resolution_close_category]"
                          length="1000"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[intervention_resolution_close_category]"
                          name="intervention_resolution_close_category"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[create_date]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[create_date]"
                          length="1000"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[create_date]"
                          name="create_date"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[student_integration_id]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[student_integration_id]"
                          length="1000"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[student_integration_id]"
                          name="student_integration_id"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[student_institutional_email]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[student_institutional_email]"
                          length="1000"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[student_institutional_email]"
                          name="student_institutional_email"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[success_plan_name]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[success_plan_name]"
                          length="1000"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[success_plan_name]"
                          name="success_plan_name"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[closed_by_student]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[closed_by_student]"
                          length="1000"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[closed_by_student]"
                          name="closed_by_student"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[assigned_to_integration_id]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[assigned_to_integration_id]"
                          length="1000"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[assigned_to_integration_id]"
                          name="assigned_to_integration_id"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[assigned_to_institutional_email]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[assigned_to_institutional_email]"
                          length="1000"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[assigned_to_institutional_email]"
                          name="assigned_to_institutional_email"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[DELETE_FLG]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[DELETE_FLG]"
                          length="1"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[DELETE_FLG]"
                          name="DELETE_FLG"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[INSERT_DT]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[INSERT_DT]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[INSERT_DT]"
                          name="INSERT_DT"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[ETL_SOURCE]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[ETL_SOURCE]"
                          length="15"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[ETL_SOURCE]"
                          name="ETL_SOURCE"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[FileImported]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[FileImported]"
                          length="100"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[FileImported]"
                          name="FileImported"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[FileCreated_On]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[FileCreated_On]"
                          length="25"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[FileCreated_On]"
                          name="FileCreated_On"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[FileSize]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[FileSize]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[FileSize]"
                          name="FileSize"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[Hash_DW]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[Hash_DW]"
                          length="62"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[Hash_DW]"
                          name="Hash_DW"
                          sortKeyPosition="2"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[tracking_integration_id]"
                          codePage="1252"
                          dataType="str"
                          length="62"
                          name="tracking_integration_id" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[item_ext_id]"
                          codePage="1252"
                          dataType="str"
                          length="62"
                          name="item_ext_id" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[rule_name]"
                          codePage="1252"
                          dataType="str"
                          length="150"
                          name="rule_name" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[creator_integration_id]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="creator_integration_id" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[tracking_type]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="tracking_type" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[item_origin]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="item_origin" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[course_section_id]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="course_section_id" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[item_status]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="item_status" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[resolved_date]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="resolved_date" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[intervention_resolution_reason]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="intervention_resolution_reason" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[intervention_resolution_close_category]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="intervention_resolution_close_category" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[create_date]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="create_date" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[student_integration_id]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="student_integration_id" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[student_institutional_email]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="student_institutional_email" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[success_plan_name]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="success_plan_name" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[closed_by_student]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="closed_by_student" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[assigned_to_integration_id]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="assigned_to_integration_id" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[assigned_to_institutional_email]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="assigned_to_institutional_email" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[DELETE_FLG]"
                          dataType="wstr"
                          length="1"
                          name="DELETE_FLG" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[INSERT_DT]"
                          dataType="dbTimeStamp"
                          name="INSERT_DT" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[UPDATE_dtm]"
                          dataType="dbTimeStamp"
                          name="UPDATE_dtm" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[ETL_SOURCE]"
                          codePage="1252"
                          dataType="str"
                          length="15"
                          name="ETL_SOURCE" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[FileImported]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="FileImported" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[FileCreated_On]"
                          codePage="1252"
                          dataType="str"
                          length="25"
                          name="FileCreated_On" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[FileSize]"
                          dataType="i4"
                          name="FileSize" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].ExternalColumns[Hash_DW]"
                          dataType="wstr"
                          length="62"
                          name="Hash_DW" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[tracking_integration_id]"
                          codePage="1252"
                          dataType="str"
                          length="62"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[tracking_integration_id]"
                          name="tracking_integration_id" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[item_ext_id]"
                          codePage="1252"
                          dataType="str"
                          length="62"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[item_ext_id]"
                          name="item_ext_id" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[rule_name]"
                          codePage="1252"
                          dataType="str"
                          length="150"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[rule_name]"
                          name="rule_name" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[creator_integration_id]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[creator_integration_id]"
                          name="creator_integration_id" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[tracking_type]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[tracking_type]"
                          name="tracking_type" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[item_origin]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[item_origin]"
                          name="item_origin" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[course_section_id]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[course_section_id]"
                          name="course_section_id" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[item_status]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[item_status]"
                          name="item_status" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[resolved_date]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[resolved_date]"
                          name="resolved_date" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[intervention_resolution_reason]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[intervention_resolution_reason]"
                          name="intervention_resolution_reason" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[intervention_resolution_close_category]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[intervention_resolution_close_category]"
                          name="intervention_resolution_close_category" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[create_date]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[create_date]"
                          name="create_date" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[student_integration_id]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[student_integration_id]"
                          name="student_integration_id" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[student_institutional_email]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[student_institutional_email]"
                          name="student_institutional_email" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[success_plan_name]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[success_plan_name]"
                          name="success_plan_name" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[closed_by_student]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[closed_by_student]"
                          name="closed_by_student" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[assigned_to_integration_id]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[assigned_to_integration_id]"
                          name="assigned_to_integration_id" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[assigned_to_institutional_email]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[assigned_to_institutional_email]"
                          name="assigned_to_institutional_email" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[DELETE_FLG]"
                          dataType="wstr"
                          length="1"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[DELETE_FLG]"
                          name="DELETE_FLG" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[INSERT_DT]"
                          dataType="dbTimeStamp"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[INSERT_DT]"
                          name="INSERT_DT" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[ETL_SOURCE]"
                          codePage="1252"
                          dataType="str"
                          length="15"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[ETL_SOURCE]"
                          name="ETL_SOURCE" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[FileImported]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[FileImported]"
                          name="FileImported" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[FileCreated_On]"
                          codePage="1252"
                          dataType="str"
                          length="25"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[FileCreated_On]"
                          name="FileCreated_On" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[FileSize]"
                          dataType="i4"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[FileSize]"
                          name="FileSize" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[Hash_DW]"
                          dataType="wstr"
                          length="62"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[Hash_DW]"
                          name="Hash_DW" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record"
                  componentClassID="Microsoft.OLEDBCommand"
                  contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                  name="OLE DB Update chaged record"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">UPDATE [etl].[starfish_tracking]    SET [item_ext_id] = ? 
      ,[creator_integration_id] = ? 
      ,[student_integration_id] = ? 
      ,[student_institutional_email] = ? 
      ,[assigned_to_integration_id] = ? 
      ,[assigned_to_institutional_email] = ? 
      ,[create_date] = ? 
      ,[item_origin] = ? 
      ,[tracking_type] = ? 
      ,[rule_name] = ? 
      ,[course_section_id] = ?
      ,[class_term_code] = ? 
      ,[class_session_code] = ? 
      ,[crse_car_code] = ? 
      ,[class_nbr] = ? 
      ,[success_plan_name] = ? 
      ,[item_status] = ? 
      ,[resolved_date] = ? 
      ,[intervention_resolution_reason] = ? 
      ,[intervention_resolution_close_category] = ? 
      ,[closed_by_student] = ? 
      ,[DELETE_FLG] = ?
      ,[UPDATE_dtm] = ? 
      ,[ETL_SOURCE] = ? 
      ,[FileImported] = ? 
      ,[FileCreated_On] = ? 
      ,[FileSize] = ? 
      , [Hash_DW] =?
 WHERE [tracking_integration_id] =?  





</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.IDR]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.IDR]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input]"
                      errorOrTruncationOperation="Command Execution"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Command Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].Columns[item_ext_id_str]"
                          cachedDataType="wstr"
                          cachedLength="62"
                          cachedName="item_ext_id_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[item_ext_id_str]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].Columns[creator_integration_id_str]"
                          cachedDataType="wstr"
                          cachedLength="150"
                          cachedName="creator_integration_id_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[creator_integration_id_str]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].Columns[student_integration_id_str]"
                          cachedDataType="wstr"
                          cachedLength="150"
                          cachedName="student_integration_id_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[student_integration_id_str]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].Columns[student_institutional_email_str]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="student_institutional_email_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[student_institutional_email_str]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].Columns[assigned_to_integration_id_str]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="assigned_to_integration_id_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[assigned_to_integration_id_str]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].Columns[assigned_to_institutional_email_str]"
                          cachedDataType="wstr"
                          cachedLength="150"
                          cachedName="assigned_to_institutional_email_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[assigned_to_institutional_email_str]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].Columns[create_date_str]"
                          cachedDataType="wstr"
                          cachedLength="24"
                          cachedName="create_date_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[create_date_str]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].Columns[item_origin_str]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="item_origin_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[item_origin_str]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].Columns[tracking_type_str]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="tracking_type_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_8]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[tracking_type_str]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].Columns[rule_name_str]"
                          cachedDataType="wstr"
                          cachedLength="150"
                          cachedName="rule_name_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_9]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[rule_name_str]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].Columns[course_section_id_str]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="course_section_id_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_10]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[course_section_id_str]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].Columns[CLASSTERMCODE]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="CLASSTERMCODE"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_11]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Script Component Split.Outputs[Output 0].Columns[CLASSTERMCODE]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].Columns[CLASSSESSIONCODE]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="CLASSSESSIONCODE"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_12]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Script Component Split.Outputs[Output 0].Columns[CLASSSESSIONCODE]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].Columns[CRSECARCODE]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="CRSECARCODE"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_13]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Script Component Split.Outputs[Output 0].Columns[CRSECARCODE]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].Columns[CLASSNBR]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="CLASSNBR"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_14]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Script Component Split.Outputs[Output 0].Columns[CLASSNBR]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].Columns[success_plan_name_str]"
                          cachedDataType="wstr"
                          cachedLength="150"
                          cachedName="success_plan_name_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_15]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[success_plan_name_str]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].Columns[item_status_str]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="item_status_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_16]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[item_status_str]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].Columns[resolved_date_str]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="resolved_date_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_17]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[resolved_date_str]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].Columns[intervention_resolution_reason_str]"
                          cachedDataType="wstr"
                          cachedLength="150"
                          cachedName="intervention_resolution_reason_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_18]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[intervention_resolution_reason_str]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].Columns[intervention_resolution_close_category_str]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="intervention_resolution_close_category_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_19]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[intervention_resolution_close_category_str]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].Columns[closed_by_student_str]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="closed_by_student_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_20]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[closed_by_student_str]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].Columns[DELETE_FLG]"
                          cachedDataType="wstr"
                          cachedLength="1"
                          cachedName="DELETE_FLG"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_21]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[DELETE_FLG]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].Columns[FileImported_str]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="FileImported_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_24]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[FileImported_str]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].Columns[FileCreated_On_str]"
                          cachedDataType="wstr"
                          cachedLength="25"
                          cachedName="FileCreated_On_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_25]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[FileCreated_On_str]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].Columns[FileSize_int]"
                          cachedDataType="i4"
                          cachedName="FileSize_int"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_26]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[FileSize_int]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].Columns[UPDATE_DT]"
                          cachedDataType="date"
                          cachedName="UPDATE_DT"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_22]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\DC-UPDATE_DT.Outputs[Derived Column Output].Columns[UPDATE_DT]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].Columns[ETL_SOURCE_str]"
                          cachedDataType="wstr"
                          cachedLength="15"
                          cachedName="ETL_SOURCE_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_23]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[ETL_SOURCE_str]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].Columns[DEST_Hash_DW]"
                          cachedDataType="wstr"
                          cachedLength="62"
                          cachedName="DEST_Hash_DW"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_27]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Lookup.Outputs[Lookup Match Output].Columns[DEST_Hash_DW]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].Columns[tracking_integration_id_str]"
                          cachedDataType="wstr"
                          cachedLength="62"
                          cachedName="tracking_integration_id_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_28]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[tracking_integration_id_str]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                          dataType="wstr"
                          length="62"
                          name="Param_0">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                          dataType="wstr"
                          length="1000"
                          name="Param_1">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                          dataType="wstr"
                          length="1000"
                          name="Param_2">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                          dataType="wstr"
                          length="1000"
                          name="Param_3">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                          dataType="wstr"
                          length="1000"
                          name="Param_4">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                          dataType="wstr"
                          length="1000"
                          name="Param_5">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                          dataType="wstr"
                          length="1000"
                          name="Param_6">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                          dataType="wstr"
                          length="1000"
                          name="Param_7">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_8]"
                          dataType="wstr"
                          length="1000"
                          name="Param_8">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_9]"
                          dataType="wstr"
                          length="1000"
                          name="Param_9">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_10]"
                          dataType="wstr"
                          length="1000"
                          name="Param_10">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_11]"
                          dataType="wstr"
                          length="10"
                          name="Param_11">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_12]"
                          dataType="wstr"
                          length="10"
                          name="Param_12">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_13]"
                          dataType="wstr"
                          length="10"
                          name="Param_13">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_14]"
                          dataType="wstr"
                          length="10"
                          name="Param_14">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_15]"
                          dataType="wstr"
                          length="1000"
                          name="Param_15">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_16]"
                          dataType="wstr"
                          length="1000"
                          name="Param_16">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_17]"
                          dataType="wstr"
                          length="1000"
                          name="Param_17">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_18]"
                          dataType="wstr"
                          length="1000"
                          name="Param_18">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_19]"
                          dataType="wstr"
                          length="1000"
                          name="Param_19">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_20]"
                          dataType="wstr"
                          length="1000"
                          name="Param_20">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_21]"
                          dataType="wstr"
                          length="1"
                          name="Param_21">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_22]"
                          dataType="dbTimeStamp"
                          name="Param_22">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_23]"
                          dataType="wstr"
                          length="15"
                          name="Param_23">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_24]"
                          dataType="wstr"
                          length="100"
                          name="Param_24">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_25]"
                          dataType="wstr"
                          length="25"
                          name="Param_25">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_26]"
                          dataType="i4"
                          name="Param_26">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_27]"
                          dataType="wstr"
                          length="62"
                          name="Param_27">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input].ExternalColumns[Param_28]"
                          dataType="wstr"
                          length="62"
                          name="Param_28">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Outputs[OLE DB Command Output]"
                      exclusionGroup="1"
                      name="OLE DB Command Output"
                      synchronousInputId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Outputs[OLE DB Command Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Command Error Output"
                      synchronousInputId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Rows Inserted"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Rows Inserted">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::RowsInserted</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Rows Inserted.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Rows Inserted.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Rows Inserted.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Rows Matched"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Rows Matched">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::RowCount_Match</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Rows Matched.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Rows Matched.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Rows Matched.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Script Component Split"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component Split"
                  version="13">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_d4671919edda4645b0f59b4b69bd71c8.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{BEAAA862-713B-43D4-A773-9C1C1D9747EA}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_d4671919edda4645b0f59b4b69bd71c8</RootNamespace>
    <AssemblyName>SC_EC8CF1221F3E4854B7CD6553161A7A2D</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {

        #region COURSE SECTION 
        if (!Row.coursesectionid_IsNull)
        {
            /////21911UGRD17491
            string str = Row.coursesectionid.TrimEnd();
            if (str.Length == 14)
            {
                Row.CLASSTERMCODE = str.Substring(0, 4);
                Row.CLASSSESSIONCODE = str.Substring(4, 1);
                Row.CRSECARCODE = str.Substring(5, 4);
                Row.CLASSNBR = str.Substring(9, 5);
            }
            //21981UGRD4398
            else if (str.Length == 13)
            {
                Row.CLASSTERMCODE = str.Substring(0, 4);
                Row.CLASSSESSIONCODE = str.Substring(4, 1);
                Row.CRSECARCODE = str.Substring(5, 4);
                Row.CLASSNBR = str.Substring(9, 4);
            }
            // 21956W2UGRD7485
            else if (str.Length == 15)
            {
                Row.CLASSTERMCODE = str.Substring(0, 4);
                Row.CLASSSESSIONCODE = str.Substring(4, 3);
                Row.CRSECARCODE = str.Substring(7, 4);
                Row.CLASSNBR = str.Substring(11, 4);
            }

            else if (str.Length == 16)
            {
                Row.CLASSTERMCODE = str.Substring(0, 4);
                Row.CLASSSESSIONCODE = str.Substring(4, 3);
                Row.CRSECARCODE = str.Substring(7, 4);
                Row.CLASSNBR = str.Substring(11, 5);
            }
            #endregion
        }


    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String coursesectionid
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool coursesectionid_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String CLASSTERMCODE
    {
        set
        {
            this[1] = value;
        }
    }
    public bool CLASSTERMCODE_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CLASSSESSIONCODE
    {
        set
        {
            this[2] = value;
        }
    }
    public bool CLASSSESSIONCODE_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CRSECARCODE
    {
        set
        {
            this[3] = value;
        }
    }
    public bool CRSECARCODE_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CLASSNBR
    {
        set
        {
            this[4] = value;
        }
    }
    public bool CLASSNBR_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d4671919edda4645b0f59b4b69bd71c8.Properties.Settings.get_Default():SC_d4671919edda4645b0f59b4b69bd71c8.Properties.Sett" +
    "ings")]

namespace SC_d4671919edda4645b0f59b4b69bd71c8.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 Connection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_d4671919edda4645b0f59b4b69bd71c8</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_d4671919edda4645b0f59b4b69bd71c8</msb:DisplayName>
    <msb:ProjectId>{390AD7BA-ECF4-476D-9098-F81ABDC44E98}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_d4671919edda4645b0f59b4b69bd71c8.csproj" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_d4671919edda4645b0f59b4b69bd71c8")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_d4671919edda4645b0f59b4b69bd71c8")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d4671919edda4645b0f59b4b69bd71c8.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d4671919edda4645b0f59b4b69bd71c8.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d4671919edda4645b0f59b4b69bd71c8.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_d4671919edda4645b0f59b4b69bd71c8.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_d4671919edda4645b0f59b4b69bd71c8.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_EC8CF1221F3E4854B7CD6553161A7A2D.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
RQGEABEBWQiNAKkAeAaTAMkAeAYGAC4ACwAZAS4AEwAiAS4AGwBBAS4AIwBKAS4AKwBzAS4AMwBz
AS4AOwBzAS4AQwBKAS4ASwB5AS4AUwBzAS4AWwCQAUMAYwDaAeEAewDaAeMAawDaAYkBcwBBAakB
cwBBARsAAwABAAUACwAHAAwACAAOAAAACwH9AAAAjQQBAQAAqAD9AAAALQQBAQAAugD9AAAARgQB
AQAAzwD9AAAAYgQBAQAA3wD9AAAAeQQBAQAAMwUFAQAAAQYKAQAAwgEPAQAArAcUAQIABgADAAIA
BwAFAAEACAAHAAEACQAJAAEACgALAAEACwANAAEADAAPAAEADQARAAEADgATAAEADwAVAAIAFwAX
AAIAGgAZAAIAGwAbAAEAHAAbAAIAHQAdAASAAAABAAAAAAAAAAAAAAAAAHgAAAAEAAAAAAAAAAAA
AACbAP4AAAAAABAAAAAAAAAAAAAAAKQA4gcAAAAAEAAAAAAAAAAAAAAApAD/BwAAAAAQAAAAAAAA
AAAAAACkAI0FAAAAAAQAAAAAAAAAAAAAAJsAtQQAAAAAEAAAAAAAAAAAAAAApACwBQAAAAAAAAAA
AQAAAMkGAAAlACYAAAAAAABJRFRTQ29tcG9uZW50TWV0YURhdGExMDAASURUU1J1bnRpbWVDb25u
ZWN0aW9uQ29sbGVjdGlvbjEwMABJRFRTUnVudGltZUNvbm5lY3Rpb24xMDAASURUU0Nvbm5lY3Rp
b25NYW5hZ2VyMTAwADxNb2R1bGU+AFNDX0VDOENGMTIyMUYzRTQ4NTRCN0NENjU1MzE2MUE3QTJE
AElucHV0SUQAc2V0X0NMQVNTVEVSTUNPREUAc2V0X0NMQVNTU0VTU0lPTkNPREUAc2V0X0NSU0VD
QVJDT0RFAHNldF9DTEFTU05CUgBnZXRfQ29tcG9uZW50TWV0YURhdGEAbXNjb3JsaWIAZ2V0X2Nv
dXJzZXNlY3Rpb25pZABUcmltRW5kAGRlZmF1bHRJbnN0YW5jZQBSdW50aW1lVHlwZUhhbmRsZQBH
ZXRUeXBlRnJvbUhhbmRsZQBJbnB1dE5hbWUAR2V0UnVudGltZUNvbm5lY3Rpb25CeU5hbWUATWlj
cm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVy
ZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxl
U3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJp
YnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJs
eVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29y
a0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlw
dGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJv
ZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9u
ZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNv
bXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQB2YWx1ZQBTeXN0ZW0u
UnVudGltZS5WZXJzaW9uaW5nAEdldFN0cmluZwBTdWJzdHJpbmcAZ2V0X0xlbmd0aABTeXN0ZW0u
Q29tcG9uZW50TW9kZWwAU0NfRUM4Q0YxMjIxRjNFNDg1NEI3Q0Q2NTUzMTYxQTdBMkQuZGxsAHNl
dF9DTEFTU1RFUk1DT0RFX0lzTnVsbABzZXRfQ0xBU1NTRVNTSU9OQ09ERV9Jc051bGwAc2V0X0NS
U0VDQVJDT0RFX0lzTnVsbABzZXRfQ0xBU1NOQlJfSXNOdWxsAGdldF9jb3Vyc2VzZWN0aW9uaWRf
SXNOdWxsAFNldE51bGwAc2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lz
dGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24A
Z2V0X1J1bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlvbgBnZXRfQ29ubmVjdGlvbgBJbnZhbGlkT3Bl
cmF0aW9uRXhjZXB0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1h
cABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABNaWNyb3NvZnQu
U3FsU2VydmVyLkRUU1BpcGVsaW5lV3JhcABJbnB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2Ny
aXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0Nvbm5lY3Rpb25NYW5hZ2VyAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0
cy5QaXBlbGluZS5XcmFwcGVyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVt
LlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDX2Q0NjcxOTE5ZWRk
YTQ2NDViMGY1OWI0YjY5YmQ3MWM4LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1
Z2dpbmdNb2RlcwBTQ19kNDY3MTkxOWVkZGE0NjQ1YjBmNTliNGI2OWJkNzFjOC5Qcm9wZXJ0aWVz
AFZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MA
RXF1YWxzAENvbm5lY3Rpb25zAE9iamVjdABFbmRPZlJvd3NldABnZXRfRGVmYXVsdABVc2VyQ29t
cG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQATWljcm9zb2Z0LlNxbFNlcnZl
ci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vz
c0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cATmV4dFJvdwBBcnJheQBnZXRfQXNzZW1ibHkA
RW1wdHkAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIA
ZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1
AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBuAHAA
dQB0ACAAMAAAFUMAbwBuAG4AZQBjAHQAaQBvAG4AAHFTAEMAXwBkADQANgA3ADEAOQAxADkAZQBk
AGQAYQA0ADYANAA1AGIAMABmADUAOQBiADQAYgA2ADkAYgBkADcAMQBjADgALgBQAHIAbwBwAGUA
cgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAARfBMigATSEKOr1Eb/rnRCwAEIAEBCAMg
AAEFIAEBEREEIAEBDgUgAQERXQMHAQ4GEAEAHR4AAwoBAwUgAQ4dAwMgAAgFIAIOCAgJIAMBEj0d
CBJBAwYSPQMGHQgEIAEOCAQgAQIIBSACAQgcAyAAAgYgAgIOEXkFIAEdCAgEIAASfQUgABKAgQYg
ARKAhQ4EIAASTQgAARKAiRGAjQUgABKAkQcgAgEOEoCRCLd6XFYZNOCJCImEXc2AgMyRAwYSFAMG
EhgDBhJFAwYSVQMGElkDBhIgBSABARIMAyAADgQgAQECCSAEAQgOEj0SQQUgAQESRQQAABJVBAAA
ElkFAAEBElkEAAASIAMAAAEDKAAOAygAAgQoABJNBAgAElUECAASWQQIABIgCAEACAAAAAAAHgEA
AQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ19kNDY3MTkxOWVkZGE0
NjQ1YjBmNTliNGI2OWJkNzFjOAAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDI0AABJAQAaLk5F
VEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJh
bWV3b3JrIDQuNwQBAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJj
ZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJs
aWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291
cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAD8NgAAAAAAAAAAAAAWNwAAACAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAACDcAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUA
IAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBDAF8AZAA0ADYANwAxADkAMQA5AGUAZABkAGEANAA2ADQANQBiADAAZgA1ADkAYgA0AGIANgA5
AGIAZAA3ADEAYwA4AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAA
LgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBFAEMAOABDAEYAMQAy
ADIAMQBGADMARQA0ADgANQA0AEIANwBDAEQANgA1ADUAMwAxADYAMQBBADcAQQAyAEQALgBkAGwA
bAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0
ACAAQAAgACAAMgAwADIANAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAA
AAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfAEUAQwA4
AEMARgAxADIAMgAxAEYAMwBFADQAOAA1ADQAQgA3AEMARAA2ADUANQAzADEANgAxAEEANwBBADIA
RAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwBkADQANgA3
ADEAOQAxADkAZQBkAGQAYQA0ADYANAA1AGIAMABmADUAOQBiADQAYgA2ADkAYgBkADcAMQBjADgA
AAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAI
AAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAACg3AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_ec8cf1221f3e4854b7cd6553161a7a2d</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">F4</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Script Component Split.Connections[Connection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.IDR]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.IDR]"
                      name="Connection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Script Component Split.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Script Component Split.Inputs[Input 0].Columns[course_section_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1000"
                          cachedName="course_section_id"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[course_section_id]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Script Component Split.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Script Component Split.Inputs[Input 0]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Script Component Split.Outputs[Output 0].Columns[CLASSTERMCODE]"
                          dataType="wstr"
                          length="10"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Script Component Split.Outputs[Output 0].Columns[CLASSTERMCODE]"
                          name="CLASSTERMCODE" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Script Component Split.Outputs[Output 0].Columns[CLASSSESSIONCODE]"
                          dataType="wstr"
                          length="10"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Script Component Split.Outputs[Output 0].Columns[CLASSSESSIONCODE]"
                          name="CLASSSESSIONCODE" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Script Component Split.Outputs[Output 0].Columns[CRSECARCODE]"
                          dataType="wstr"
                          length="10"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Script Component Split.Outputs[Output 0].Columns[CRSECARCODE]"
                          name="CRSECARCODE" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Script Component Split.Outputs[Output 0].Columns[CLASSNBR]"
                          dataType="wstr"
                          length="10"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Script Component Split.Outputs[Output 0].Columns[CLASSNBR]"
                          name="CLASSNBR" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="SQL Insert starfish-tracking"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[etl].[starfish_tracking]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.IDR]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.IDR]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].Columns[tracking_integration_id_str]"
                          cachedDataType="wstr"
                          cachedLength="62"
                          cachedName="tracking_integration_id_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[tracking_integration_id]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[tracking_integration_id_str]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].Columns[CLASSTERMCODE]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="CLASSTERMCODE"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[class_term_code]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Script Component Split.Outputs[Output 0].Columns[CLASSTERMCODE]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].Columns[CLASSSESSIONCODE]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="CLASSSESSIONCODE"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[class_session_code]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Script Component Split.Outputs[Output 0].Columns[CLASSSESSIONCODE]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].Columns[CRSECARCODE]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="CRSECARCODE"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[crse_car_code]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Script Component Split.Outputs[Output 0].Columns[CRSECARCODE]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].Columns[CLASSNBR]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="CLASSNBR"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[class_nbr]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Script Component Split.Outputs[Output 0].Columns[CLASSNBR]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].Columns[Hash_DW]"
                          cachedDataType="wstr"
                          cachedLength="62"
                          cachedName="Hash_DW"
                          cachedSortKeyPosition="2"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[Hash_DW]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[Hash_DW]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].Columns[student_integration_id_str]"
                          cachedDataType="wstr"
                          cachedLength="150"
                          cachedName="student_integration_id_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[student_integration_id]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[student_integration_id_str]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].Columns[item_ext_id_str]"
                          cachedDataType="wstr"
                          cachedLength="62"
                          cachedName="item_ext_id_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[item_ext_id]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[item_ext_id_str]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].Columns[rule_name_str]"
                          cachedDataType="wstr"
                          cachedLength="150"
                          cachedName="rule_name_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[rule_name]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[rule_name_str]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].Columns[tracking_type_str]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="tracking_type_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[tracking_type]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[tracking_type_str]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].Columns[creator_integration_id_str]"
                          cachedDataType="wstr"
                          cachedLength="150"
                          cachedName="creator_integration_id_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[creator_integration_id]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[creator_integration_id_str]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].Columns[item_origin_str]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="item_origin_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[item_origin]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[item_origin_str]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].Columns[course_section_id_str]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="course_section_id_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[course_section_id]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[course_section_id_str]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].Columns[item_status_str]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="item_status_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[item_status]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[item_status_str]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].Columns[resolved_date_str]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="resolved_date_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[resolved_date]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[resolved_date_str]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].Columns[intervention_resolution_reason_str]"
                          cachedDataType="wstr"
                          cachedLength="150"
                          cachedName="intervention_resolution_reason_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[intervention_resolution_reason]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[intervention_resolution_reason_str]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].Columns[intervention_resolution_close_category_str]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="intervention_resolution_close_category_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[intervention_resolution_close_category]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[intervention_resolution_close_category_str]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].Columns[closed_by_student_str]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="closed_by_student_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[closed_by_student]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[closed_by_student_str]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].Columns[assigned_to_integration_id_str]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="assigned_to_integration_id_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[assigned_to_integration_id]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[assigned_to_integration_id_str]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].Columns[assigned_to_institutional_email_str]"
                          cachedDataType="wstr"
                          cachedLength="150"
                          cachedName="assigned_to_institutional_email_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[assigned_to_institutional_email]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[assigned_to_institutional_email_str]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].Columns[FileImported_str]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="FileImported_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[FileImported]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[FileImported_str]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].Columns[FileCreated_On_str]"
                          cachedDataType="wstr"
                          cachedLength="25"
                          cachedName="FileCreated_On_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[FileCreated_On]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[FileCreated_On_str]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].Columns[FileSize_int]"
                          cachedDataType="i4"
                          cachedName="FileSize_int"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[FileSize]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[FileSize_int]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].Columns[create_date_str]"
                          cachedDataType="wstr"
                          cachedLength="24"
                          cachedName="create_date_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[create_date]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[create_date_str]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].Columns[student_institutional_email_str]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="student_institutional_email_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[student_institutional_email]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[student_institutional_email_str]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].Columns[success_plan_name_str]"
                          cachedDataType="wstr"
                          cachedLength="150"
                          cachedName="success_plan_name_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[success_plan_name]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[success_plan_name_str]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].Columns[INSERT_DT]"
                          cachedDataType="dbTimeStamp"
                          cachedName="INSERT_DT"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[INSERT_DT]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output].Columns[INSERT_DT]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].Columns[UPDATE_DT]"
                          cachedDataType="date"
                          cachedName="UPDATE_DT"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[UPDATE_dtm]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\DC-UPDATE_DT.Outputs[Derived Column Output].Columns[UPDATE_DT]" />
                        <inputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].Columns[ETL_SOURCE_str]"
                          cachedDataType="wstr"
                          cachedLength="15"
                          cachedName="ETL_SOURCE_str"
                          externalMetadataColumnId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[ETL_SOURCE]"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output].Columns[ETL_SOURCE_str]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[DELETE_FLG]"
                          dataType="wstr"
                          length="1"
                          name="DELETE_FLG" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[INSERT_DT]"
                          dataType="dbTimeStamp"
                          name="INSERT_DT" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[ETL_SOURCE]"
                          dataType="wstr"
                          length="15"
                          name="ETL_SOURCE" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[Hash_DW]"
                          dataType="wstr"
                          length="62"
                          name="Hash_DW" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[student_integration_id]"
                          dataType="wstr"
                          length="1000"
                          name="student_integration_id" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[row_id]"
                          dataType="i4"
                          name="row_id" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[tracking_integration_id]"
                          dataType="wstr"
                          length="62"
                          name="tracking_integration_id" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[item_ext_id]"
                          dataType="wstr"
                          length="62"
                          name="item_ext_id" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[rule_name]"
                          dataType="wstr"
                          length="1000"
                          name="rule_name" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[creator_integration_id]"
                          dataType="wstr"
                          length="1000"
                          name="creator_integration_id" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[tracking_type]"
                          dataType="wstr"
                          length="1000"
                          name="tracking_type" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[item_origin]"
                          dataType="wstr"
                          length="1000"
                          name="item_origin" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[course_section_id]"
                          dataType="wstr"
                          length="1000"
                          name="course_section_id" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[item_status]"
                          dataType="wstr"
                          length="1000"
                          name="item_status" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[resolved_date]"
                          dataType="wstr"
                          length="1000"
                          name="resolved_date" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[intervention_resolution_reason]"
                          dataType="wstr"
                          length="1000"
                          name="intervention_resolution_reason" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[intervention_resolution_close_category]"
                          dataType="wstr"
                          length="1000"
                          name="intervention_resolution_close_category" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[create_date]"
                          dataType="wstr"
                          length="1000"
                          name="create_date" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[student_institutional_email]"
                          dataType="wstr"
                          length="1000"
                          name="student_institutional_email" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[success_plan_name]"
                          dataType="wstr"
                          length="1000"
                          name="success_plan_name" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[closed_by_student]"
                          dataType="wstr"
                          length="1000"
                          name="closed_by_student" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[assigned_to_integration_id]"
                          dataType="wstr"
                          length="1000"
                          name="assigned_to_integration_id" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[assigned_to_institutional_email]"
                          dataType="wstr"
                          length="1000"
                          name="assigned_to_institutional_email" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[FileImported]"
                          dataType="wstr"
                          length="100"
                          name="FileImported" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[FileCreated_On]"
                          dataType="wstr"
                          length="25"
                          name="FileCreated_On" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[FileSize]"
                          dataType="i4"
                          name="FileSize" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[class_term_code]"
                          dataType="wstr"
                          length="10"
                          name="class_term_code" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[class_session_code]"
                          dataType="wstr"
                          length="10"
                          name="class_session_code" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[crse_car_code]"
                          dataType="wstr"
                          length="10"
                          name="crse_car_code" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[class_nbr]"
                          dataType="wstr"
                          length="10"
                          name="class_nbr" />
                        <externalMetadataColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input].ExternalColumns[UPDATE_dtm]"
                          dataType="dbTimeStamp"
                          name="UPDATE_dtm" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table.Paths[Data Conversion Output]"
                  endId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Script Component Split.Inputs[Input 0]"
                  name="Data Conversion Output"
                  startId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table.Paths[Derived Column Output]"
                  endId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion.Inputs[Data Conversion Input]"
                  name="Derived Column Output"
                  startId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\DC-UPDATE_DT.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table.Paths[ExistinRecords]"
                  endId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Rows Inserted.Inputs[Row Count Input 1]"
                  name="ExistinRecords"
                  startId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Conditional Split.Outputs[NotMatchedRecords]" />
                <path
                  refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table.Paths[Lookup Match Output]"
                  endId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Conditional Split.Inputs[Conditional Split Input]"
                  name="Lookup Match Output"
                  startId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Lookup.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table.Paths[Lookup No Match Output]"
                  endId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking.Inputs[OLE DB Destination Input]"
                  name="Lookup No Match Output"
                  startId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Lookup.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table.Paths[NotMatched]"
                  endId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Rows Matched.Inputs[Row Count Input 1]"
                  name="NotMatched"
                  startId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Conditional Split.Outputs[Matched]" />
                <path
                  refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table.Paths[OLE DB Source Output]"
                  endId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\DC-UPDATE_DT.Inputs[Derived Column Input]"
                  name="OLE DB Source Output"
                  startId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source.Outputs[OLE DB Source Output]" />
                <path
                  refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table.Paths[Output 0]"
                  endId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Lookup.Inputs[Lookup Input]"
                  name="Output 0"
                  startId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Script Component Split.Outputs[Output 0]" />
                <path
                  refId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table.Paths[Row Count Output 1]"
                  endId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record.Inputs[OLE DB Command Input]"
                  name="Row Count Output 1"
                  startId="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Rows Inserted.Outputs[Row Count Output 1]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Updating Table Tracking on IDR\Successul Transfer Send Mail Task"
          DTS:CreationName="Microsoft.SendMailTask"
          DTS:Description="Send Mail Task"
          DTS:DTSID="{1C6ADC4C-41D5-465C-BAC3-6FB48292D908}"
          DTS:ExecutableType="Microsoft.SendMailTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Successul Transfer Send Mail Task"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:PropertyExpression
            DTS:Name="FromLine">@[User::Email_id_sender]</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="MessageSource">"Starfish importer Inserted  " +  (DT_STR, 10,1252) @[User::RowsInserted] +", Updated "+ (DT_STR, 10,1252)  @[User::RowsUpdated] + " and Removed " +(DT_STR, 10,1252) @[User::RowsDeleted] +"  records " + " on " +  @[System::MachineName] + " !"</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="ToLine">@[User::Email_id_receiver]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SendMailTask:SendMailTaskData
              SendMailTask:SMTPServer="{D389747A-D7EA-4696-8DFC-1A86AD07F963}"
              SendMailTask:From="umg-up.biteam.datawarehouse@pennstateoffice365.onmicrosoft.com"
              SendMailTask:To="L-DWEMAIL@LISTS.PSU.EDU"
              SendMailTask:Subject="Starfish Import Status"
              SendMailTask:MessageSource="Starfish importer Inserted  0, Updated 0 and Removed 0  records  on S8-WHSE-SQL-T01 !" xmlns:SendMailTask="www.microsoft.com/sqlserver/dts/tasks/sendmailtask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Updating Table Tracking on IDR.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{603F729A-FBE5-4C77-A221-A2F709B02694}"
          DTS:From="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Updating Table Tracking on IDR\Successul Transfer Send Mail Task" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{3FD9FFA2-541F-465F-B425-1A0948300EE0}"
      DTS:EvalOp="3"
      DTS:Expression="@[User::IsFound]==true"
      DTS:From="Package\Check for File"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Files is missing Mail"
      DTS:Value="1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{7609D547-EABF-45A5-BD7E-22EED30DA38F}"
      DTS:EvalOp="3"
      DTS:Expression="@[User::IsFound] ==false"
      DTS:From="Package\Check for File"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Loop Trought All Track Files" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{98315707-5E52-4AB3-9494-47272539D7A1}"
      DTS:From="Package\Loop Trought All Track Files"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Updating Table Tracking on IDR" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{F1F99F69-2125-4DE4-9354-FF7AF36D0CC3}"
      DTS:From="Package\Loop Trought All Track Files"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Error Mail"
      DTS:Value="1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{E9B3BEE4-F779-42E4-8C33-938AAD327F9C}"
      DTS:From="Package\Updating Table Tracking on IDR"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Sequence Container" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{58DA7815-0611-4020-BC16-45E74C4048C5}"
      DTS:From="Package\Sequence Container"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Error Mail"
      DTS:Value="1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{953BBF41-9ECB-4BB9-A0D9-5DBB6415BD83}"
      DTS:From="Package\Truncate table sf_tracking"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\Check for File" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 9]"
      DTS:CreationName=""
      DTS:DTSID="{D0942070-6B5A-4894-B65C-F8E6F4F04C2D}"
      DTS:From="Package\Updating Table Tracking on IDR"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 9"
      DTS:To="Package\Error Mail"
      DTS:Value="1" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="139,42"
          Id="Package\Check for File\Get FileSize"
          TopLeft="33,107.5" />
        <NodeLayout
          Size="194,42"
          Id="Package\Check for File\Is tracking*-csv Present"
          TopLeft="5.50000000000001,5.5" />
        <EdgeLayout
          Id="Package\Check for File.PrecedenceConstraints[Constraint]"
          TopLeft="102.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="205,205"
          Size="205,248"
          Id="Package\Check for File"
          TopLeft="729.5,107.5" />
        <NodeLayout
          Size="127,42"
          Id="Package\Error Mail"
          TopLeft="706.5,1252.5" />
        <NodeLayout
          Size="177,42"
          Id="Package\Files is missing Mail"
          TopLeft="481.5,467.5" />
        <NodeLayout
          Size="214,42"
          Id="Package\Loop Trought All Track Files\Importing Tracking to Stage"
          TopLeft="5.5,5.5" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="239,103"
          Size="239,146"
          Id="Package\Loop Trought All Track Files"
          TopLeft="719.5,415.5" />
        <NodeLayout
          Size="137,42"
          Id="Package\Sequence Container\Archive File"
          TopLeft="270,5.49999999999989" />
        <NodeLayout
          Size="193,42"
          Id="Package\Sequence Container\Files  Moved to Archive"
          TopLeft="242,108" />
        <NodeLayout
          Size="202,42"
          Id="Package\Sequence Container\Files Not Moved Problem"
          TopLeft="495.5,108" />
        <NodeLayout
          Size="162,42"
          Id="Package\Sequence Container\Find Junk Files\Delete  Junk Files"
          TopLeft="5.5,5.5" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="False"
          PanelSize="176,103"
          Size="176,43"
          Id="Package\Sequence Container\Find Junk Files"
          TopLeft="5.50000000000006,107.5" />
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint]"
          TopLeft="306.25,47.4999999999999">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-212.75,60.0000000000001"
              Start="0,0"
              End="-212.75,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.763723150358" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.763723150358"
                    Point2="0,20.763723150358"
                    Point3="-4,20.763723150358" />
                  <mssgle:LineSegment
                    End="-208.75,20.763723150358" />
                  <mssgle:CubicBezierSegment
                    Point1="-208.75,20.763723150358"
                    Point2="-212.75,20.763723150358"
                    Point3="-212.75,24.763723150358" />
                  <mssgle:LineSegment
                    End="-212.75,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="338.5,47.4999999999999">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60.5"
              Start="0,0"
              End="0,53">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,53" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="370.75,47.4999999999999">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="225.75,60.5"
              Start="0,0"
              End="225.75,53">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.936754176611" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.936754176611"
                    Point2="0,20.936754176611"
                    Point3="4,20.936754176611" />
                  <mssgle:LineSegment
                    End="221.75,20.936754176611" />
                  <mssgle:CubicBezierSegment
                    Point1="221.75,20.936754176611"
                    Point2="225.75,20.936754176611"
                    Point3="225.75,24.936754176611" />
                  <mssgle:LineSegment
                    End="225.75,53" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="97.63365234375,25.936754176611,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="703,206"
          Size="703,248"
          Id="Package\Sequence Container"
          TopLeft="5.50000000000011,929.5" />
        <NodeLayout
          Size="205,42"
          Id="Package\Truncate table sf_tracking"
          TopLeft="729.5,5.49999999999977" />
        <NodeLayout
          Size="247,42"
          Id="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table"
          TopLeft="15,5.5" />
        <NodeLayout
          Size="252,42"
          Id="Package\Updating Table Tracking on IDR\Successul Transfer Send Mail Task"
          TopLeft="5.50000000000003,107.5" />
        <EdgeLayout
          Id="Package\Updating Table Tracking on IDR.PrecedenceConstraints[Constraint 1]"
          TopLeft="135,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="263,205"
          Size="263,248"
          Id="Package\Updating Table Tracking on IDR"
          TopLeft="507.5,621.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="799.166666666667,355.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-229.166666666667,112"
              Start="0,0"
              End="-229.166666666667,104.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.3204259438528" />
                  <mssgle:CubicBezierSegment
                    Point1="0,41.3204259438528"
                    Point2="0,45.3204259438528"
                    Point3="-4,45.3204259438528" />
                  <mssgle:LineSegment
                    End="-225.166666666667,45.3204259438528" />
                  <mssgle:CubicBezierSegment
                    Point1="-225.166666666667,45.3204259438528"
                    Point2="-229.166666666667,45.3204259438528"
                    Point3="-229.166666666667,49.3204259438528" />
                  <mssgle:LineSegment
                    End="-229.166666666667,104.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-138.693333333333,50.3204259438528,48.22,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="864.833333333333,355.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-8.33333333333326,60"
              Start="0,0"
              End="-8.33333333333326,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.2787996127783" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.2787996127783"
                    Point2="0,24.2787996127783"
                    Point3="-4,24.2787996127783" />
                  <mssgle:LineSegment
                    End="-4.33333333333326,24.2787996127783" />
                  <mssgle:CubicBezierSegment
                    Point1="-4.33333333333326,24.2787996127783"
                    Point2="-8.33333333333326,24.2787996127783"
                    Point3="-8.33333333333326,28.2787996127783" />
                  <mssgle:LineSegment
                    End="-8.33333333333326,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-12.1666666666666,29.2787996127783,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="800.5,561.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-161.5,60"
              Start="0,0"
              End="-161.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.2394014962594" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.2394014962594"
                    Point2="0,24.2394014962594"
                    Point3="-4,24.2394014962594" />
                  <mssgle:LineSegment
                    End="-157.5,24.2394014962594" />
                  <mssgle:CubicBezierSegment
                    Point1="-157.5,24.2394014962594"
                    Point2="-161.5,24.2394014962594"
                    Point3="-161.5,28.2394014962594" />
                  <mssgle:LineSegment
                    End="-161.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="900.833333333333,561.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-101.083333333333,691"
              Start="0,0"
              End="-101.083333333333,683.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,382.947286612687" />
                  <mssgle:CubicBezierSegment
                    Point1="0,382.947286612687"
                    Point2="0,386.947286612687"
                    Point3="-4,386.947286612687" />
                  <mssgle:LineSegment
                    End="-97.0833333333333,386.947286612687" />
                  <mssgle:CubicBezierSegment
                    Point1="-97.0833333333333,386.947286612687"
                    Point2="-101.083333333333,386.947286612687"
                    Point3="-101.083333333333,390.947286612687" />
                  <mssgle:LineSegment
                    End="-101.083333333333,683.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-65.7830143229166,391.947286612687,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="596.5,869.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-239.5,60"
              Start="0,0"
              End="-239.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.2176870748299" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.2176870748299"
                    Point2="0,24.2176870748299"
                    Point3="-4,24.2176870748299" />
                  <mssgle:LineSegment
                    End="-235.5,24.2176870748299" />
                  <mssgle:CubicBezierSegment
                    Point1="-235.5,24.2176870748299"
                    Point2="-239.5,24.2176870748299"
                    Point3="-239.5,28.2176870748299" />
                  <mssgle:LineSegment
                    End="-239.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="357,1177.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="383.25,74.9999999999998"
              Start="0,0"
              End="383.25,67.4999999999998">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.9717223650384" />
                  <mssgle:CubicBezierSegment
                    Point1="0,44.9717223650384"
                    Point2="0,48.9717223650384"
                    Point3="4,48.9717223650384" />
                  <mssgle:LineSegment
                    End="379.25,48.9717223650384" />
                  <mssgle:CubicBezierSegment
                    Point1="379.25,48.9717223650384"
                    Point2="383.25,48.9717223650384"
                    Point3="383.25,52.9717223650384" />
                  <mssgle:LineSegment
                    End="383.25,67.4999999999998" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="176.38365234375,53.9717223650384,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="832,47.4999999999998">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 9]"
          TopLeft="681.5,869.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="88.5,383"
              Start="0,0"
              End="88.5,375.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,150.589569160998" />
                  <mssgle:CubicBezierSegment
                    Point1="0,150.589569160998"
                    Point2="0,154.589569160998"
                    Point3="4,154.589569160998" />
                  <mssgle:LineSegment
                    End="84.5,154.589569160998" />
                  <mssgle:CubicBezierSegment
                    Point1="84.5,154.589569160998"
                    Point2="88.5,154.589569160998"
                    Point3="88.5,158.589569160998" />
                  <mssgle:LineSegment
                    End="88.5,375.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="29.00865234375,159.589569160998,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="Doing cleanup in incoming folder &#xA;and moving files to approprate directories&#xA;tracking"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="252,72"
          Id="e9b3641c-18b3-458d-bf1a-8560bf2f4c66"
          TopLeft="894,1237.5" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package\Error Mail.EventHandlers[OnPreValidate]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\Error Mail.EventHandlers[OnPreValidate]\Send Mail Task"
          TopLeft="NaN,NaN" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\Loop Trought All Track Files\Importing Tracking to Stage">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph" xmlns:mssge="clr-namespace:Microsoft.SqlServer.Graph.Extended;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
        <NodeLayout
          Size="115,42"
          Id="Package\Loop Trought All Track Files\Importing Tracking to Stage\Lookup"
          TopLeft="814,525" />
        <NodeLayout
          Size="151,42"
          Id="Package\Loop Trought All Track Files\Importing Tracking to Stage\Get Single Row"
          TopLeft="799.9,50.4999999999997" />
        <NodeLayout
          Size="165,42"
          Id="Package\Loop Trought All Track Files\Importing Tracking to Stage\SCR _HashValue"
          TopLeft="788,429" />
        <NodeLayout
          Size="147,42"
          Id="Package\Loop Trought All Track Files\Importing Tracking to Stage\Matched rows"
          TopLeft="937,693" />
        <NodeLayout
          Size="283,42"
          Id="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors"
          TopLeft="55.59256838281,238.718520312368" />
        <NodeLayout
          Size="218,42"
          Id="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking"
          TopLeft="478.1,680.7" />
        <NodeLayout
          Size="206,42"
          Id="Package\Loop Trought All Track Files\Importing Tracking to Stage\New Parse Error Columns"
          TopLeft="397,237" />
        <NodeLayout
          Size="185,42"
          Id="Package\Loop Trought All Track Files\Importing Tracking to Stage\Adding New Columns"
          TopLeft="772.1,369.099999999999" />
        <NodeLayout
          Size="180,42"
          Id="Package\Loop Trought All Track Files\Importing Tracking to Stage\Set Script Parameters"
          TopLeft="782.1,121.1" />
        <NodeLayout
          Size="218,42"
          Id="Package\Loop Trought All Track Files\Importing Tracking to Stage\SafeParse Flat File tracking*"
          TopLeft="756.9,232.7" />
        <EdgeLayout
          Id="Package\Loop Trought All Track Files\Importing Tracking to Stage.Paths[OLE DB Source Output]"
          TopLeft="873.75,92.4999999999997">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,28.6000000000003"
              Start="0,0"
              End="0,21.1000000000003">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.1000000000003" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop Trought All Track Files\Importing Tracking to Stage.Paths[Lookup No Match Output]"
          TopLeft="871.5,567">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-284.4,113.7"
              Start="0,0"
              End="-284.4,106.2">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.85" />
                  <mssgle:CubicBezierSegment
                    Point1="0,52.85"
                    Point2="0,56.85"
                    Point3="-4,56.85" />
                  <mssgle:LineSegment
                    End="-280.4,56.85" />
                  <mssgle:CubicBezierSegment
                    Point1="-280.4,56.85"
                    Point2="-284.4,56.85"
                    Point3="-284.4,60.85" />
                  <mssgle:LineSegment
                    End="-284.4,106.2" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-198.00638671875,61.85,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop Trought All Track Files\Importing Tracking to Stage.Paths[Lookup Match Output]"
          TopLeft="889.333333333333,567">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="121.166666666667,126"
              Start="0,0"
              End="121.166666666667,118.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.4373927958833" />
                  <mssgle:CubicBezierSegment
                    Point1="0,47.4373927958833"
                    Point2="0,51.4373927958833"
                    Point3="4,51.4373927958833" />
                  <mssgle:LineSegment
                    End="117.166666666667,51.4373927958833" />
                  <mssgle:CubicBezierSegment
                    Point1="117.166666666667,51.4373927958833"
                    Point2="121.166666666667,51.4373927958833"
                    Point3="121.166666666667,55.4373927958833" />
                  <mssgle:LineSegment
                    End="121.166666666667,118.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="12.3919466145835,56.4373927958833,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop Trought All Track Files\Importing Tracking to Stage.Paths[Derived Column Output2]"
          TopLeft="772.1,390.099999999999">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="15.9,59.900000000001"
              Start="0,0"
              End="8.39999999999998,59.900000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-18.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-18.5,0"
                    Point2="-22.5,0"
                    Point3="-22.5,4" />
                  <mssgle:LineSegment
                    End="-22.5,55.900000000001" />
                  <mssgle:CubicBezierSegment
                    Point1="-22.5,55.900000000001"
                    Point2="-22.5,59.900000000001"
                    Point3="-18.5,59.900000000001" />
                  <mssgle:LineSegment
                    End="8.39999999999998,59.900000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop Trought All Track Files\Importing Tracking to Stage.Paths[Derived Column Output1]"
          TopLeft="397,258.859260156184">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-58.40743161719,0"
              Start="0,0"
              End="-50.90743161719,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-50.90743161719,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop Trought All Track Files\Importing Tracking to Stage.Paths[Derived Column Output]"
          TopLeft="869,163.1">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,69.6"
              Start="0,0"
              End="0,62.1">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,62.1" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop Trought All Track Files\Importing Tracking to Stage.Paths[Output 0]"
          TopLeft="871,471">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,54"
              Start="0,0"
              End="0,46.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop Trought All Track Files\Importing Tracking to Stage.Paths[Output - Record Level Parse Errors]"
          TopLeft="756.9,255.85">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-153.9,0"
              Start="0,0"
              End="-146.4,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-146.4,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-150.70509765625,5,155.0101953125,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop Trought All Track Files\Importing Tracking to Stage.Paths[Output - File Data]"
          TopLeft="865.25,274.7">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,94.399999999999"
              Start="0,0"
              End="0,86.899999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,86.899999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-40.09587890625,37.6453124999995,80.1917578125,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="Calculate checksum value for non-key fields"
          ParentId="Package\Loop Trought All Track Files\Importing Tracking to Stage"
          Size="200,51"
          Id="aeec4707-3b91-489e-ae20-06059405bccc"
          TopLeft="530.5,424.3">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Color="#FF000000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Add FileName and InsertDate"
          ParentId="Package\Loop Trought All Track Files\Importing Tracking to Stage"
          Size="200,37"
          Id="01628568-1bbc-41c1-8450-8a37bcae095d"
          TopLeft="572.5,326.7">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Color="#FF000000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text=" A dummy column is one which has a value of one &#xA;when a categorical event occurs and a zero when it doesn’t occur."
          ParentId="Package\Loop Trought All Track Files\Importing Tracking to Stage"
          Size="350,51"
          Id="6a662e55-0e7c-4d59-a106-aa0fafa6e783"
          TopLeft="364,52">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Color="#FF000000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Loop Trought All Track Files\Importing Tracking to Stage\Lookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Loop Trought All Track Files\Importing Tracking to Stage\Get Single Row">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Loop Trought All Track Files\Importing Tracking to Stage\Push errors to starfish_ETL_Parse_Errors">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Loop Trought All Track Files\Importing Tracking to Stage\DB Insert into idr-sf_tracking">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="147,42"
          Id="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Rows Inserted"
          TopLeft="85.5000000000001,621.5" />
        <NodeLayout
          Size="237,42"
          Id="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source"
          TopLeft="75.5,10.5" />
        <NodeLayout
          Size="164,42"
          Id="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\DC-UPDATE_DT"
          TopLeft="323,111.5" />
        <NodeLayout
          Size="212,42"
          Id="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking"
          TopLeft="472,513.5" />
        <NodeLayout
          Size="191,42"
          Id="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Script Component Split"
          TopLeft="299.5,312.5" />
        <NodeLayout
          Size="115,42"
          Id="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Lookup"
          TopLeft="333.5,417.5" />
        <NodeLayout
          Size="231,42"
          Id="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Update chaged record"
          TopLeft="16,714" />
        <NodeLayout
          Size="152,42"
          Id="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Rows Matched"
          TopLeft="322.5,617.5" />
        <NodeLayout
          Size="159,42"
          Id="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Conditional Split"
          TopLeft="79.5000000000001,519.5" />
        <NodeLayout
          Size="161,42"
          Id="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Data Conversion"
          TopLeft="319,205" />
        <EdgeLayout
          Id="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table.Paths[Row Count Output 1]"
          TopLeft="159,663.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-27.5000000000001,50.5"
              Start="0,0"
              End="-27.5000000000001,43">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.25" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.25"
                    Point2="0,25.25"
                    Point3="-4,25.25" />
                  <mssgle:LineSegment
                    End="-23.5000000000001,25.25" />
                  <mssgle:CubicBezierSegment
                    Point1="-23.5000000000001,25.25"
                    Point2="-27.5000000000001,25.25"
                    Point3="-27.5000000000001,29.25" />
                  <mssgle:LineSegment
                    End="-27.5000000000001,43" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table.Paths[Output 0]"
          TopLeft="393,354.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,63"
              Start="0,0"
              End="0,55.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,55.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table.Paths[OLE DB Source Output]"
          TopLeft="194,52.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="211,59"
              Start="0,0"
              End="211,51.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.5"
                    Point2="0,29.5"
                    Point3="4,29.5" />
                  <mssgle:LineSegment
                    End="207,29.5" />
                  <mssgle:CubicBezierSegment
                    Point1="207,29.5"
                    Point2="211,29.5"
                    Point3="211,33.5" />
                  <mssgle:LineSegment
                    End="211,51.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table.Paths[NotMatched]"
          TopLeft="184.166666666667,561.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="214.333333333333,56"
              Start="0,0"
              End="214.333333333333,48.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.7347447073474" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.7347447073474"
                    Point2="0,22.7347447073474"
                    Point3="4,22.7347447073474" />
                  <mssgle:LineSegment
                    End="210.333333333333,22.7347447073474" />
                  <mssgle:CubicBezierSegment
                    Point1="210.333333333333,22.7347447073474"
                    Point2="214.333333333333,22.7347447073474"
                    Point3="214.333333333333,26.7347447073474" />
                  <mssgle:LineSegment
                    End="214.333333333333,48.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="88.2286783854165,27.7347447073474,37.8759765625,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table.Paths[Lookup No Match Output]"
          TopLeft="408.833333333333,459.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="169.166666666667,54"
              Start="0,0"
              End="169.166666666667,46.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.0445969125214" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.0445969125214"
                    Point2="0,22.0445969125214"
                    Point3="4,22.0445969125214" />
                  <mssgle:LineSegment
                    End="165.166666666667,22.0445969125214" />
                  <mssgle:CubicBezierSegment
                    Point1="165.166666666667,22.0445969125214"
                    Point2="169.166666666667,22.0445969125214"
                    Point3="169.166666666667,26.0445969125214" />
                  <mssgle:LineSegment
                    End="169.166666666667,46.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="28.7769466145835,27.0445969125214,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table.Paths[Lookup Match Output]"
          TopLeft="373.166666666667,459.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-214.166666666667,60"
              Start="0,0"
              End="-214.166666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4939965694683" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4939965694683"
                    Point2="0,24.4939965694683"
                    Point3="-4,24.4939965694683" />
                  <mssgle:LineSegment
                    End="-210.166666666667,24.4939965694683" />
                  <mssgle:CubicBezierSegment
                    Point1="-210.166666666667,24.4939965694683"
                    Point2="-214.166666666667,24.4939965694683"
                    Point3="-214.166666666667,28.4939965694683" />
                  <mssgle:LineSegment
                    End="-214.166666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-155.274720052083,29.4939965694683,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table.Paths[ExistinRecords]"
          TopLeft="133.833333333333,561.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="25.1666666666667,60"
              Start="0,0"
              End="25.1666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3586550435866" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3586550435866"
                    Point2="0,24.3586550435866"
                    Point3="4,24.3586550435866" />
                  <mssgle:LineSegment
                    End="21.1666666666667,24.3586550435866" />
                  <mssgle:CubicBezierSegment
                    Point1="21.1666666666667,24.3586550435866"
                    Point2="25.1666666666667,24.3586550435866"
                    Point3="25.1666666666667,28.3586550435866" />
                  <mssgle:LineSegment
                    End="25.1666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-31.8642447916666,29.3586550435866,88.89515625,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table.Paths[Derived Column Output]"
          TopLeft="402.25,153.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,51.5"
              Start="0,0"
              End="0,44">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table.Paths[Data Conversion Output]"
          TopLeft="397.25,247">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,65.5"
              Start="0,0"
              End="0,58">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,58" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\OLE DB Stage Tracking  Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\SQL Insert starfish-tracking">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Updating Table Tracking on IDR\Incrimental Update Tracking Table\Lookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>