<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/30/2023 2:44:59 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="S8-WHSE-SQL-T01"
  DTS:CreatorName="PSU\jjs7199"
  DTS:DTSID="{20628951-5956-410C-86ED-64853B9D40D3}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5685.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="IDR_SF_Appointments"
  DTS:PackageType="5"
  DTS:VersionBuild="412"
  DTS:VersionGUID="{7F461931-0400-4438-BCC4-407FD5E90000}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DW-SQL.Stage]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{F35176C9-AA0C-4630-AB13-EEC5D53DD737}"
      DTS:ObjectName="DW-SQL.Stage">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=whse_stage;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Auto Translate=False;Application Name=SSIS-Appointments_Update-{F35176C9-AA0C-4630-AB13-EEC5D53DD737}IDW-SQL-local;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.etl]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{5DDEF666-AC3A-4AF6-842A-42738DE50736}"
      DTS:ObjectName="LocalHost.etl">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=etl;Provider=MSOLEDBSQL;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.IDR]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{72A7B027-6E5D-4D5B-A215-9F7DBE682A9E}"
      DTS:ObjectName="LocalHost.IDR">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=IDR;Provider=SQLNCLI11.1;Integrated Security=SSPI;Application Name=SSIS-IDR_SF_Appointments-{72A7B027-6E5D-4D5B-A215-9F7DBE682A9E}LocalHost.IDR;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.whsestage]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{175E2148-5CC4-472E-948E-41EE35A7A837}"
      DTS:ObjectName="LocalHost.whsestage">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=whsestage;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Auto Translate=False;Application Name=SSIS-Appointments_Update-{175E2148-5CC4-472E-948E-41EE35A7A837}LocalHost.whsestage;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SMTP Connection Manager]"
      DTS:CreationName="SMTP"
      DTS:DTSID="{C23A715E-7872-4EBD-9259-328B5690DD1E}"
      DTS:ObjectName="SMTP Connection Manager">
      <DTS:ObjectData>
        <SmtpConnectionManager
          ConnectionString="SmtpServer=smtp.psu.edu;UseWindowsAuthentication=False;EnableSsl=False;"
          ConnectByProxy="False" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AB125FAE-2D40-49E5-8BC9-D3D1092E7726}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ArchiveFolder">
      <DTS:VariableValue
        DTS:DataType="8">E:\dat\Starfish\Starfish_Archive\appointments</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D00927C4-396E-4068-A6F9-F380B3D219CB}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="(DT_WSTR,4)YEAR(GETDATE()) + &quot;-&quot; + (DT_WSTR,4)MONTH(GETDATE()) + &quot;-&quot; + (DT_WSTR,4)DAY(GETDATE())"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DatePart">
      <DTS:VariableValue
        DTS:DataType="8">2025-3-18</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{013F17C4-3B1C-4968-A568-BB83942679A1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DestinationFolder">
      <DTS:VariableValue
        DTS:DataType="8">E:\dat\starfish\Starfish_Archive</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{856E8F58-E9BB-45E6-AB42-1C89CE4B412F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Email_id_receiver">
      <DTS:VariableValue
        DTS:DataType="8">L-DWEMAIL@LISTS.PSU.EDU</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{83FF2E28-3087-48C7-83DD-4E28DAE78F51}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Email_id_sender">
      <DTS:VariableValue
        DTS:DataType="8">umg-up.biteam.datawarehouse@pennstateoffice365.onmicrosoft.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3040E8A9-FECB-4493-8D16-04EEE9DF38F2}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="GETDATE()"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Error_Dttm">
      <DTS:VariableValue
        DTS:DataType="7">3/18/2025 9:50:36 AM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{00ED90C0-61C8-4FB0-A62D-CD43942C7661}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileExists">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{724F1160-93ED-4694-972A-1C8E14DA0D75}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FileExistsFlag">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9F2B97F1-612E-4394-9571-C242020E995A}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[System::MachineName]+&quot; Job Parm-6017 Starfish no Appointment File was received today - &quot;+ @[User::DatePart]+ &quot; !&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileMissingMessage">
      <DTS:VariableValue
        DTS:DataType="8">S8-WHSE-SQL-T01 Job Parm-6017 Starfish no Appointment File was received today - 2025-3-18 !</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E885EE12-0B61-44C7-A16A-37B310F84E64}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[System::MachineName]+&quot; - Appointment files missing - Aborting Import!&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileMissingMsg">
      <DTS:VariableValue
        DTS:DataType="8">S8-WHSE-SQL-T01 - Appointment files missing - Aborting Import!</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D99E163E-9289-4BE0-BA24-E828C79EADF6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{63725DB5-A5B1-48AC-953D-9C03819FE95E}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::SourceFolder]+  &quot;\\&quot;+@[User::FileName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FilePath">
      <DTS:VariableValue
        DTS:DataType="8">E:\Dat\starfish\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BB8CAAC7-7C2D-4C86-84CB-6A0044D738FA}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FileSize">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A7615E13-A52C-4410-8962-2348C72D9BD6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FilesMovedCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B7EC13DC-93CB-4F16-B263-1FC427727BF7}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[System::MachineName]+  &quot; Number of files moved to Archive : &quot; + (DT_WSTR, 3) @[User::FilesMovedCount]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FilesMovedMsg">
      <DTS:VariableValue
        DTS:DataType="8">S8-WHSE-SQL-T01 Number of files moved to Archive : 0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1FDBCD63-CB33-4289-A2C4-C27B2A14A39E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileToArchive">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{ABB7DD0D-ACE8-427F-9919-BDB61FB507A5}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileToSearch">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{67FDC9DE-9145-48AB-9FE1-A20F9FEC9EF1}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="IsFound">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{93EA8986-170D-421F-A721-8D9D08139146}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="NoFilesMoved">
      <DTS:VariableValue
        DTS:DataType="8">No Files were moved tp Archive</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{658FBF0B-DA38-43BB-BA7E-811D9A37D1FC}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="NoMatchRowCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DDD456BC-E469-4BDD-AC20-93896E6907CE}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RowCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C1F77406-AEFE-4B1E-927B-2C9DD9EDE841}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RowCount_Match">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F3B55911-A207-4524-A423-7E43448586ED}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RowCount_Not_Match">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{19438AFC-1D62-4F52-8C02-39A77CE790D3}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RowsDeleted">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AD2B3109-1035-4F51-91E3-113F38EA4113}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RowsInserted">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{47D622A5-F12C-44A6-B46F-B0E0AAF373C4}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RowsUpdated">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{46AE36C5-CE98-4457-B78A-C268D0431580}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SourceFolder">
      <DTS:VariableValue
        DTS:DataType="8">E:\Dat\starfish</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{03E78D9A-71C0-4BBA-8973-9E3A5D6A71E6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strCaseSensitive">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2A91D2D8-0E06-427B-91BA-612E3AA13A57}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[System::MachineName]==&quot;S8-WHSE-SQL-T01&quot;?&quot;S8-WHSE-SQL-T01&quot;:&#xA;@[System::MachineName]==&quot;S8-WHSE-SQL-A01&quot;?&quot;s8-whse-lst-A01&quot;:&#xA;@[System::MachineName]==&quot;S8-WHSE-SQL-A02&quot;?&quot;s8-whse-lst-A01&quot;:&#xA;@[System::MachineName]==&quot;S8-WHSE-SQL-P01&quot;?&quot;S8-WHSE-LST-P01&quot;:&#xA;@[System::MachineName]==&quot;S8-WHSE-SQL-F01&quot;?&quot;S8-WHSE-LST-P01&quot;: &quot;COUND NOT DETERMINE SERVER&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strServer">
      <DTS:VariableValue
        DTS:DataType="8">S8-WHSE-SQL-T01</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F6C884B0-CDAD-46B1-B552-F10B06D766C3}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::ArchiveFolder] +&quot;\\&quot;+ Replace(Replace(Replace(Replace( @[User::FileName],&quot;.&quot;,&quot;_&quot;+Substring((DT_WSTR,50) GETDATE(),1,19)+&quot;.&quot;),&quot;-&quot;,&quot;&quot;),&quot;:&quot;,&quot;&quot;),&quot; &quot;,&quot;_&quot;)"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VarArchiveFullPath">
      <DTS:VariableValue
        DTS:DataType="8">E:\dat\Starfish\Starfish_Archive\appointments\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EC28D9B8-08C0-409B-B9D5-95D6EFD3E584}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::SourceFolder]+&quot;\\&quot;+ @[User::FileName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VarSourceFullPath">
      <DTS:VariableValue
        DTS:DataType="8">E:\Dat\starfish\</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="2">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">1,7,OnError</DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Check for File"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{9E173FBE-1707-4C37-B221-3B9A19FBD35D}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Check for File">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{9FCC91DD-3340-4205-BA7E-BEC78CCCE2DE}"
        DTS:ObjectName="{9FCC91DD-3340-4205-BA7E-BEC78CCCE2DE}">
        <DTS:PropertyExpression
          DTS:Name="Directory">@[User::SourceFolder]</DTS:PropertyExpression>
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="E:\Dat\starfish" />
            <FEFEProperty
              FileSpec="appo*.csv" />
            <FEFEProperty
              FileNameRetrievalType="1" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Check for File\Get File Size"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{F1C18F25-A3D1-4588-A03F-7E72C4D16A34}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get File Size"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_89c7c45608f1449ca73161f88fa5c69f"
              VSTAMajorVersion="16"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::FilePath"
              ReadWriteVariables="User::FileSize">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_a2d83dd7284c4e118f0128f879486c14
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
        {// Specify the file path
            string filePath = Dts.Variables["User::FilePath"].Value.ToString();

            // Initialize file size variable
            long fileSize = 0;

            // Check if the file exists and get the file size
            if (File.Exists(filePath))
            {
                FileInfo fileInfo = new FileInfo(filePath);
                fileSize = fileInfo.Length; // File size in bytes
            }
            else
            {
                // Handle the case where the file does not exist
                Dts.Events.FireError(0, "Script Task", "File not found: " + filePath, "", 0);
            }

            // Store the file size in the variable
            Dts.Variables["User::FileSize"].Value = fileSize;

            // Indicate success
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_89c7c45608f1449ca73161f88fa5c69f.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{551c4e0e-3cbd-4c29-9906-2285864e6af5}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_a2d83dd7284c4e118f0128f879486c14</RootNamespace>
    <AssemblyName>ST_89c7c45608f1449ca73161f88fa5c69f</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_89c7c45608f1449ca73161f88fa5c69f</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_89c7c45608f1449ca73161f88fa5c69f</msb:DisplayName>
    <msb:ProjectId>{9B601ED3-2703-4680-B2ED-5FA23EAE5EE4}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_89c7c45608f1449ca73161f88fa5c69f.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a2d83dd7284c4e118f0128f879486c14.Properties.Settings.get_Default():ST_a2d83dd7284c4e118f0128f879486c14.Properties.Sett" +
    "ings")]

namespace ST_a2d83dd7284c4e118f0128f879486c14.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a2d83dd7284c4e118f0128f879486c14")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_a2d83dd7284c4e118f0128f879486c14")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a2d83dd7284c4e118f0128f879486c14.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a2d83dd7284c4e118f0128f879486c14.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a2d83dd7284c4e118f0128f879486c14.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a2d83dd7284c4e118f0128f879486c14.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a2d83dd7284c4e118f0128f879486c14.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_89c7c45608f1449ca73161f88fa5c69f.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAGlc7GYAAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAPi8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOwuAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAARA8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAg
LwAAAAAAAEgAAAACAAUAUCEAAOQMAAABAAAAAAAAADQuAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBgCOAAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKFmoLBigVAAAKLA4GcxYAAApvFwAACgsrKAIoEAAACm8YAAAKFnIfAABwcjcAAHAG
KBkAAApyWQAAcBZvGgAACiYCKBAAAApvEQAACnJbAABwbxIAAAoHjB8AAAFvGwAACgIoEAAAChZv
HAAACioeAigdAAAKKh4CKB4AAAoqrn4BAAAELR5yeQAAcNADAAACKB8AAApvIAAACnMhAAAKgAEA
AAR+AQAABCoafgIAAAQqHgKAAgAABCoafgMAAAQqHgIoIgAACioucwgAAAaAAwAABCpCU0pCAQAB
AAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAEBAAAI34AAHAEAADsBQAAI1N0cmluZ3MAAAAA
XAoAAOwAAAAjVVMASAsAABAAAAAjR1VJRAAAAFgLAACMAQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJ
AwAAAPoBMwAWAAABAAAAIgAAAAUAAAAGAAAACQAAAAEAAAAiAAAAAgAAABAAAAABAAAAAgAAAAMA
AAAEAAAAAQAAAAQAAAABAAAAAQAAAAAAwwMBAAAAAAAGADoCugQGAMkCugQGAIYBpwQPAC4FAAAG
ALMBQQQGAB0CQQQGAP4BQQQGALACQQQGAFoCQQQGAHMCQQQGAMoBQQQGAOUBJQMKAI4CcgMKAAUB
cgMGAPsD9AMGAGkBpwQGALoF9AMGAGwE2gQGAFwELAQOADkBrQMOAJoBrQMOACEBFwQGAE4BugQK
AJsDcgMSAHAFsAASAH4AsAAGAKsANAAGAFMENAAKAHwEcgMGAEED9AMGACUA9AMGANAA9AMGAIcA
9AMGAOAFQQQAAAAAKwAAAAAAAQABAAEAEAAMBAEAOQABAAEAAAAQAOEEPQVFAAEAAwAAARAAegU9
BVkAAwAHAAMBAACTBQAAPQAEAAoAEQAABI0AEQD1AJEAEQBuAJUABgZdAJkAVoCDBZwAVoDVAJwA
UCAAAAAAhgASBAYAAQDqIAAAAACGGJoEBgABAPIgAAAAAIMYmgQGAAEA+iAAAAAAkwhoBKAAAQAm
IQAAAACTCN0ApQABAC0hAAAAAJMI6QCqAAEANSEAAAAAlgjBBbAAAgA8IQAAAACGGJoEBgACAEQh
AAAAAJEYoAS1AAIAAAABAPsCCQCaBAEAEQCaBAYAGQCaBAoAKQCaBBAAMQCaBBAAOQCaBBAAQQCa
BBAASQCaBBAAUQCaBBAAWQCaBBAAYQCaBBAAaQCaBAYAgQCaBAYAqQCaBBUAuQCaBAYAcQCLBSAA
wQBsBSUAyQDrAyoA0QDnAjAAiQA/AzQA2QCsBTgA4QCaBBAA4QBIAz0AwQChBUEA8QCzBUYA6QCQ
BEwA0QDxAlUAwQDNBQEAcQCaBAYAiQCaBAYAAQGZAFoAAQHcBWMAkQCaBGkAsQCaBAYACAAUAIMA
CAAYAIgAKQBzAPAALgALAMgALgATANEALgAbAPAALgAjAPkALgArACIBLgAzACIBLgA7ACIBLgBD
APkALgBLACgBLgBTACIBLgBbAD8BQwBjAIgASQBzAPAAYQB7AIgAYwBrAIgAGwADAAEABAADAAAA
bAS5AAAA/QC+AAAAxQXDAAIABAADAAIABQAFAAEABgAFAAIABwAHAASAAAABAAAARCNUXQAAAAAA
AAEDAAAEAAAAAAAAAAAAAABxAGUAAAAAABAAAAAAAAAAAAAAAHoAUwMAAAAABAAAAAAAAAAAAAAA
cQD0AwAAAAAQAAAAAAAAAAAAAAB6AD4AAAAAAAAAAAABAAAA6wQAAAUAAgAAAABTVF9hMmQ4M2Rk
NzI4NGM0ZTExOGYwMTI4Zjg3OTQ4NmMxNABJbnQ2NAA8TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9z
b2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNl
AFZhcmlhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEZpbGUATWljcm9z
b2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1
bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNh
dGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0
dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUA
RWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlU
cmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmln
dXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9u
UmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29w
eXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJs
eUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVl
AHNldF9WYWx1ZQB2YWx1ZQBTVF84OWM3YzQ1NjA4ZjE0NDljYTczMTYxZjg4ZmE1YzY5ZgBTeXN0
ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAGdldF9MZW5ndGgATWljcm9zb2Z0LlNxbFNl
cnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sA
U2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUXzg5YzdjNDU2MDhmMTQ0
OWNhNzMxNjFmODhmYTVjNjlmLmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBT
Y3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3Rl
bS5SZWZsZWN0aW9uAEZpbGVJbmZvAEN1bHR1cmVJbmZvAGdldF9SZXNvdXJjZU1hbmFnZXIARXZl
bnRzT2JqZWN0V3JhcHBlcgBGaXJlRXJyb3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGlj
cwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfYTJk
ODNkZDcyODRjNGUxMThmMDEyOGY4Nzk0ODZjMTQuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3Vy
Y2VzAERlYnVnZ2luZ01vZGVzAFNUX2EyZDgzZGQ3Mjg0YzRlMTE4ZjAxMjhmODc5NDg2YzE0LlBy
b3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0aW5ncwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVz
dWx0cwBnZXRfRXZlbnRzAEV4aXN0cwBDb25jYXQAT2JqZWN0AGdldF9EZWZhdWx0AHNldF9UYXNr
UmVzdWx0AGdldF9Bc3NlbWJseQAAAAAAHVUAcwBlAHIAOgA6AEYAaQBsAGUAUABhAHQAaAAAF1MA
YwByAGkAcAB0ACAAVABhAHMAawAAIUYAaQBsAGUAIABuAG8AdAAgAGYAbwB1AG4AZAA6ACAAAAEA
HVUAcwBlAHIAOgA6AEYAaQBsAGUAUwBpAHoAZQAAcVMAVABfAGEAMgBkADgAMwBkAGQANwAyADgA
NABjADQAZQAxADEAOABmADAAMQAyADgAZgA4ADcAOQA0ADgANgBjADEANAAuAFAAcgBvAHAAZQBy
AHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAADbzpCimHNRCk1/t5Rnsp7UABCABAQgDIAAB
BSABARERBCABAQ4FIAEBEVEEBwIOCgQgABJhBCAAEmUFIAESaRwDIAAcAyAADgQAAQIOAyAACgQg
ABJ1BQACDg4OCCAFAggODg4IBCABARwIAAESgIERgIUFIAASgIkHIAIBDhKAiQi3elxWGTTgiQiJ
hF3NgIDMkQQAAAAABAEAAAADBhJJAwYSTQMGEhACBggDBhEUBAAAEkkEAAASTQUAAQESTQQAABIQ
AwAAAQQIABJJBAgAEk0ECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93
cwEIAQACAAAAAAAoAQAjU1RfYTJkODNkZDcyODRjNGUxMThmMDEyOGY4Nzk0ODZjMTQAAAUBAAAA
ABYBABFDb3B5cmlnaHQgQCAgMjAyNAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBU
DhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcAAAC0AAAAzsrvvgEAAACR
AAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQu
MC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNT
eXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA
FC8AAAAAAAAAAAAALi8AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAvAAAAAAAAAAAAAAAAX0Nv
ckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQBUXUQjAAABAFRdRCM/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfAGEAMgBkADgAMwBkAGQANwAyADgANABjADQAZQAxADEAOABmADAAMQAyADgAZgA4
ADcAOQA0ADgANgBjADEANAAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA5ADAAMgA4AC4AMgAzADgAOQAyAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfADgAOQBjADcAYwA0ADUANgAwADgAZgAxADQANAA5AGMAYQA3ADMAMQA2ADEAZgA4ADgA
ZgBhADUAYwA2ADkAZgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgA0AAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8AOAA5AGMANwBjADQANQA2ADAAOABmADEANAA0ADkAYwBhADcAMwAxADYA
MQBmADgAOABmAGEANQBjADYAOQBmAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfAGEAMgBkADgAMwBkAGQANwAyADgANABjADQAZQAxADEAOABmADAAMQAyADgA
ZgA4ADcAOQA0ADgANgBjADEANAAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4AOQAwADIAOAAuADIAMwA4ADkAMgAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOQAwADIAOAAuADIAMwA4ADkAMgAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAABAPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Check for File\Is Appontment*-csv Present"
          DTS:CreationName="Microsoft.ExpressionTask"
          DTS:Description="Expression Task"
          DTS:DTSID="{34AB65EB-4F73-466A-A5B6-F6533A5D3C0A}"
          DTS:ExecutableType="Microsoft.ExpressionTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Is Appontment*-csv Present"
          DTS:TaskContact="Expression Task;Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <ExpressionTask
              Expression="@[User::IsFound] =  @[User::FileName]  == @[User::FileToSearch] ? TRUE : FALSE" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Check for File.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{56602693-095F-40E9-B3B6-072B2532CBD8}"
          DTS:From="Package\Check for File\Is Appontment*-csv Present"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Check for File\Get File Size" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{1AF4A4F9-8A93-423E-BB99-D4537E11DC99}"
          DTS:ObjectName="{1AF4A4F9-8A93-423E-BB99-D4537E11DC99}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::FileName" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Error Mail"
      DTS:CreationName="Microsoft.SendMailTask"
      DTS:Description="Send Mail Task"
      DTS:DTSID="{7F6FA2D3-5C42-4835-9AEF-E112C1B49E63}"
      DTS:ExecutableType="Microsoft.SendMailTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Error Mail"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:PropertyExpression
        DTS:Name="FromLine">@[User::Email_id_sender]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="MessageSource">"Failure -  Starfish ETL Importer Failed " +  @[System::MachineName] + " !"</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ToLine">@[User::Email_id_receiver]</DTS:PropertyExpression>
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Error Mail.EventHandlers[OnPreValidate]"
          DTS:CreationName="OnPreValidate"
          DTS:DTSID="{432E9CE6-9FE6-48F7-BB2D-C0B62FAC16F3}"
          DTS:EventID="0"
          DTS:EventName="OnPreValidate"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{6C405376-F6F8-498D-86A4-D7ACA4D26210}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables />
        </DTS:EventHandler>
      </DTS:EventHandlers>
      <DTS:ObjectData>
        <SendMailTask:SendMailTaskData
          SendMailTask:SMTPServer="{C23A715E-7872-4EBD-9259-328B5690DD1E}"
          SendMailTask:From="umg-up.biteam.datawarehouse@pennstateoffice365.onmicrosoft.com"
          SendMailTask:To="L-DWEMAIL@LISTS.PSU.EDU"
          SendMailTask:Subject="Failure Starfish ETL Failed"
          SendMailTask:Priority="High"
          SendMailTask:MessageSource="Failure -  Starfish ETL Importer Failed S8-WHSE-SQL-T01 !" xmlns:SendMailTask="www.microsoft.com/sqlserver/dts/tasks/sendmailtask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Files is missing Mail"
      DTS:CreationName="Microsoft.SendMailTask"
      DTS:Description="Send Mail Task"
      DTS:DTSID="{DAB987EE-A94D-404B-AE4A-8A40A4F099A2}"
      DTS:ExecutableType="Microsoft.SendMailTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Files is missing Mail"
      DTS:TaskContact="Send Mail Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:PropertyExpression
        DTS:Name="FromLine">@[User::Email_id_sender]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="MessageSource">@[User::FileMissingMessage]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="Subject">@[User::FileMissingMsg]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ToLine">@[User::Email_id_receiver]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <SendMailTask:SendMailTaskData
          SendMailTask:SMTPServer="{C23A715E-7872-4EBD-9259-328B5690DD1E}"
          SendMailTask:From="umg-up.biteam.datawarehouse@pennstateoffice365.onmicrosoft.com"
          SendMailTask:To="L-DWEMAIL@LISTS.PSU.EDU"
          SendMailTask:CC="sarakaj@psu.edu"
          SendMailTask:Subject="S8-WHSE-SQL-T01 - Appointment files missing - Aborting Import!"
          SendMailTask:MessageSource="S8-WHSE-SQL-T01 Job Parm-6017 Starfish no Appointment File was received today - 2025-3-18 !" xmlns:SendMailTask="www.microsoft.com/sqlserver/dts/tasks/sendmailtask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Loop Trought All Appointment Files"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{53CD0DB7-22EC-4968-8E0E-B0CD5755CA2F}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Loop Trought All Appointment Files">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{87D3A6BD-2E76-4E70-9054-EE5E4F5967E3}"
        DTS:ObjectName="{D1AD99D4-524B-49F5-9E7F-301E545F0144}">
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="E:\dat\Starfish" />
            <FEFEProperty
              FileSpec="appo*_*.csv" />
            <FEFEProperty
              FileNameRetrievalType="1" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{A46E6E51-1505-4BCF-B03F-57E74B2F806D}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Importing Appointments to Stage"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <pipeline
              autoAdjustBufferSize="true"
              BLOBTempStoragePath="F:\Dat\starfish\Logs"
              bufferTempStoragePath=""
              defaultBufferMaxRows="1000"
              defaultBufferSize="104857600"
              version="1">
              <components>
                <component
                  refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Adding New Columns"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Adding New Columns"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Adding New Columns.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Adding New Columns.Inputs[Derived Column Input].Columns[appointment_ext_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="appointment_ext_id"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_ext_id]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Adding New Columns.Inputs[Derived Column Input].Columns[participant_integration_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="10"
                          cachedName="participant_integration_id"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[participant_integration_id]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Adding New Columns.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Adding New Columns.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[InsertDate]"
                          dataType="date"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[InsertDate]"
                          name="InsertDate"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_DATE)[GETDATE]()</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_DATE)GETDATE()</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[FileName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[FileName]"
                          name="FileName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,50,1252)@[User::FileName]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,50,1252)@[User::FileName]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[Integration_ID_SOURCE]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="62"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[Integration_ID_SOURCE]"
                          name="Integration_ID_SOURCE"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,62,1252)(#{Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_ext_id]} + #{Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[participant_integration_id]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,62,1252)(appointment_ext_id + participant_integration_id)</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[File_Created_On]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="15"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[File_Created_On]"
                          name="File_Created_On"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,15,1252)[RIGHT](@[User::FileName],[FINDSTRING]([REVERSE](@[User::FileName]),"_",1) - 1)</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,15,1252)RIGHT(@[User::FileName],FINDSTRING(REVERSE(@[User::FileName]),"_",1) - 1)</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[FileSize]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[FileSize]"
                          name="FileSize"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_I4)@[User::FileSize]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_I4)@[User::FileSize]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[ETL_Source]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="15"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[ETL_Source]"
                          name="ETL_Source"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,15,1252)"STARFISH"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,15,1252)"STARFISH"</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Adding New Columns.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Adding New Columns.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Adding New Columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Adding New Columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Adding New Columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Adding New Columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Check NULL in Arrival_Time"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Check NULL in Arrival_Time"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Check NULL in Arrival_Time.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Check NULL in Arrival_Time.Inputs[Derived Column Input].Columns[arrival_time]"
                          cachedDataType="date"
                          cachedName="arrival_time"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[arrival_time]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Check NULL in Arrival_Time.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Check NULL in Arrival_Time.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Check NULL in Arrival_Time.Outputs[Derived Column Output].Columns[ARRIVAL_TIME_NEW]"
                          dataType="dbTimeStamp2"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Check NULL in Arrival_Time.Outputs[Derived Column Output].Columns[ARRIVAL_TIME_NEW]"
                          name="ARRIVAL_TIME_NEW"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[ISNULL](#{Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[arrival_time]}) ? (DT_DBDATE)"1900-01-01" : #{Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[arrival_time]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(arrival_time) ? (DT_DBDATE)"1900-01-01" : arrival_time</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Check NULL in Arrival_Time.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Check NULL in Arrival_Time.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Check NULL in Arrival_Time.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Check NULL in Arrival_Time.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Check NULL in Arrival_Time.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Check NULL in Arrival_Time.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue"
                  componentClassID="Microsoft.OLEDBCommand"
                  contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                  name="CMD Update existing HashValue"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">UPDATE[idr].[sf_appointments] SET[appointment_ext_id]= ?
,[calendar_owner_integration_id]= ?
,[calendar_owner_userid]= ?
,[calendar_owner_first_name]= ?
,[calendar_owner_last_name]= ?
,[calendar_owner_institutional_email]= ?
,[participant_integration_id]= ?
,[participant_userid]= ?
,[participant_first_name]= ?
,[participant_last_name]= ?
,[participant_institutional_email]= ?
,[participant_alternate_email]= ?
,[appointment_type_reason]= ?
,[appointment_start_date]= ?
,[appointment_end_date]= ?
,[appointment_location]= ?
,[appointment_description]= ?
,[appointment_comment]= ?
,[canceled_date]= ?
,[course_section_id]= ?
,[no_show]= ?
,[appointment_type]= ?
,[arrival_time]= ?
,[wait_time]= ?
,[actual_start_date]= ?
,[actual_end_date]= ?
,[actual_duration]= ?
,[scheduled_duration]= ?
,[scheduled]= ?
,[waiting_room_status]= ?
,[activities]= ?
,[UPDATE_DT]= ?
,[ETL_SOURCE]= ?
,[FileImported]= ?
,[FileCreated_On]= ?
,[FileSize]= ?
,[Hash_DW]= ?
WHERE INTEGRATION_ID = ?	</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[DW-SQL.Stage]"
                      connectionManagerRefId="Package.ConnectionManagers[DW-SQL.Stage]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input]"
                      errorOrTruncationOperation="Command Execution"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Command Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].Columns[appointment_ext_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="appointment_ext_id"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_ext_id]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].Columns[calendar_owner_integration_id]"
                          cachedDataType="i4"
                          cachedName="calendar_owner_integration_id"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[calendar_owner_integration_id]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].Columns[calendar_owner_userid]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="calendar_owner_userid"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[calendar_owner_userid]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].Columns[calendar_owner_first_name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="calendar_owner_first_name"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[calendar_owner_first_name]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].Columns[calendar_owner_last_name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="calendar_owner_last_name"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[calendar_owner_last_name]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].Columns[calendar_owner_institutional_email]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="150"
                          cachedName="calendar_owner_institutional_email"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[calendar_owner_institutional_email]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].Columns[participant_integration_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="10"
                          cachedName="participant_integration_id"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[participant_integration_id]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].Columns[participant_userid]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="participant_userid"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[participant_userid]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].Columns[participant_first_name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="participant_first_name"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_8]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[participant_first_name]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].Columns[participant_last_name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="participant_last_name"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_9]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[participant_last_name]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].Columns[participant_institutional_email]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="150"
                          cachedName="participant_institutional_email"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_10]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[participant_institutional_email]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].Columns[participant_alternate_email]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="150"
                          cachedName="participant_alternate_email"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_11]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[participant_alternate_email]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].Columns[appointment_type_reason]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="150"
                          cachedName="appointment_type_reason"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_12]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_type_reason]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].Columns[appointment_start_date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="20"
                          cachedName="appointment_start_date"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_13]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_start_date]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].Columns[appointment_end_date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="20"
                          cachedName="appointment_end_date"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_14]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_end_date]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].Columns[appointment_location]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="appointment_location"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_15]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_location]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].Columns[appointment_description]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1000"
                          cachedName="appointment_description"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_16]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_description]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].Columns[appointment_comment]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="4000"
                          cachedName="appointment_comment"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_17]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_comment]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].Columns[canceled_date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="20"
                          cachedName="canceled_date"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_18]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[canceled_date]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].Columns[course_section_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="course_section_id"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_19]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[course_section_id]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].Columns[no_show]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="10"
                          cachedName="no_show"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_20]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[no_show]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].Columns[appointment_type]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="256"
                          cachedName="appointment_type"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_21]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_type]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].Columns[arrival_time]"
                          cachedDataType="date"
                          cachedName="arrival_time"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_22]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[arrival_time]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].Columns[wait_time]"
                          cachedDataType="i4"
                          cachedName="wait_time"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_23]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[wait_time]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].Columns[actual_start_date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="20"
                          cachedName="actual_start_date"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_24]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[actual_start_date]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].Columns[actual_end_date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="20"
                          cachedName="actual_end_date"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_25]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[actual_end_date]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].Columns[actual_duration]"
                          cachedDataType="i4"
                          cachedName="actual_duration"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_26]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[actual_duration]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].Columns[scheduled_duration]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="10"
                          cachedName="scheduled_duration"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_27]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[scheduled_duration]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].Columns[scheduled]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="10"
                          cachedName="scheduled"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_28]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[scheduled]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].Columns[waiting_room_status]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="waiting_room_status"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_29]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[waiting_room_status]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].Columns[activities]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="4000"
                          cachedName="activities"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_30]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[activities]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].Columns[InsertDate]"
                          cachedDataType="date"
                          cachedName="InsertDate"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_31]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[InsertDate]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].Columns[ETL_Source]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="15"
                          cachedName="ETL_Source"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_32]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[ETL_Source]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].Columns[Input_File_Name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Input_File_Name"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_33]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[Input_File_Name]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].Columns[File_Created_On]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="15"
                          cachedName="File_Created_On"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_34]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[File_Created_On]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].Columns[FileSize]"
                          cachedDataType="i4"
                          cachedName="FileSize"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_35]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[FileSize]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].Columns[New_Hash]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="62"
                          cachedName="New_Hash"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_36]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Outputs[Output 0].Columns[New_Hash]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].Columns[Integration_ID_SOURCE]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="62"
                          cachedName="Integration_ID_SOURCE"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_37]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[Integration_ID_SOURCE]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Param_0">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                          codePage="1252"
                          dataType="str"
                          length="65"
                          name="Param_1">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Param_2">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Param_3">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Param_4">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                          codePage="1252"
                          dataType="str"
                          length="150"
                          name="Param_5">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Param_6">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Param_7">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_8]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Param_8">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_9]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Param_9">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_10]"
                          codePage="1252"
                          dataType="str"
                          length="150"
                          name="Param_10">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_11]"
                          codePage="1252"
                          dataType="str"
                          length="150"
                          name="Param_11">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_12]"
                          codePage="1252"
                          dataType="str"
                          length="4000"
                          name="Param_12">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_13]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          name="Param_13">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_14]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          name="Param_14">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_15]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Param_15">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_16]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          name="Param_16">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_17]"
                          codePage="1252"
                          dataType="str"
                          length="4000"
                          name="Param_17">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_18]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          name="Param_18">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_19]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Param_19">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_20]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          name="Param_20">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_21]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="Param_21">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_22]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Param_22">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_23]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          name="Param_23">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_24]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          name="Param_24">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_25]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          name="Param_25">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_26]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          name="Param_26">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_27]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          name="Param_27">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_28]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          name="Param_28">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_29]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Param_29">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_30]"
                          codePage="1252"
                          dataType="str"
                          length="4000"
                          name="Param_30">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_31]"
                          dataType="dbTimeStamp"
                          name="Param_31">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_32]"
                          codePage="1252"
                          dataType="str"
                          length="15"
                          name="Param_32">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_33]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Param_33">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_34]"
                          codePage="1252"
                          dataType="str"
                          length="25"
                          name="Param_34">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_35]"
                          dataType="i4"
                          name="Param_35">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_36]"
                          codePage="1252"
                          dataType="str"
                          length="62"
                          name="Param_36">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input].ExternalColumns[Param_37]"
                          codePage="1252"
                          dataType="str"
                          length="62"
                          name="Param_37">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Outputs[OLE DB Command Output]"
                      exclusionGroup="1"
                      name="OLE DB Command Output"
                      synchronousInputId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Outputs[OLE DB Command Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Command Error Output"
                      synchronousInputId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Conditional Split Check Hash"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Conditional Split Check Hash"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Conditional Split Check Hash.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Conditional Split Check Hash.Inputs[Conditional Split Input].Columns[New_Hash]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="62"
                          cachedName="New_Hash"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Outputs[Output 0].Columns[New_Hash]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Conditional Split Check Hash.Inputs[Conditional Split Input].Columns[LK_Hash_DW]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="62"
                          cachedName="LK_Hash_DW"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Lookup.Outputs[Lookup Match Output].Columns[LK_Hash_DW]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Conditional Split Check Hash.Outputs[Matched]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Matched"
                      synchronousInputId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Conditional Split Check Hash.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">#{Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Outputs[Output 0].Columns[New_Hash]} == #{Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Lookup.Outputs[Lookup Match Output].Columns[LK_Hash_DW]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">New_Hash == LK_Hash_DW</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Conditional Split Check Hash.Outputs[CheckumNotEqual]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="CheckumNotEqual"
                      synchronousInputId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Conditional Split Check Hash.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Conditional Split Check Hash.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Conditional Split Check Hash.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Conditional Split Check Hash.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Conditional Split Check Hash.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Conditional Split Check Hash.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Conditional Split Check Hash.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="DB Insert into idr-sf_appointments"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[idr].[sf_appointments]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">CHECK_CONSTRAINTS,ROWS_PER_BATCH = 1000</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[DW-SQL.Stage]"
                      connectionManagerRefId="Package.ConnectionManagers[DW-SQL.Stage]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].Columns[ARRIVAL_TIME_NEW]"
                          cachedDataType="dbTimeStamp2"
                          cachedName="ARRIVAL_TIME_NEW"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[arrival_time]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Check NULL in Arrival_Time.Outputs[Derived Column Output].Columns[ARRIVAL_TIME_NEW]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].Columns[appointment_ext_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="appointment_ext_id"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[appointment_ext_id]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_ext_id]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].Columns[calendar_owner_integration_id]"
                          cachedDataType="i4"
                          cachedName="calendar_owner_integration_id"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[calendar_owner_integration_id]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[calendar_owner_integration_id]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].Columns[calendar_owner_userid]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="calendar_owner_userid"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[calendar_owner_userid]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[calendar_owner_userid]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].Columns[calendar_owner_first_name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="calendar_owner_first_name"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[calendar_owner_first_name]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[calendar_owner_first_name]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].Columns[calendar_owner_last_name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="calendar_owner_last_name"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[calendar_owner_last_name]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[calendar_owner_last_name]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].Columns[calendar_owner_institutional_email]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="150"
                          cachedName="calendar_owner_institutional_email"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[calendar_owner_institutional_email]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[calendar_owner_institutional_email]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].Columns[participant_userid]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="participant_userid"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[participant_userid]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[participant_userid]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].Columns[participant_first_name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="participant_first_name"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[participant_first_name]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[participant_first_name]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].Columns[participant_last_name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="participant_last_name"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[participant_last_name]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[participant_last_name]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].Columns[participant_institutional_email]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="150"
                          cachedName="participant_institutional_email"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[participant_institutional_email]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[participant_institutional_email]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].Columns[participant_alternate_email]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="150"
                          cachedName="participant_alternate_email"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[participant_alternate_email]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[participant_alternate_email]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].Columns[appointment_type_reason]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="150"
                          cachedName="appointment_type_reason"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[appointment_type_reason]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_type_reason]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].Columns[appointment_start_date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="20"
                          cachedName="appointment_start_date"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[appointment_start_date]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_start_date]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].Columns[appointment_end_date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="20"
                          cachedName="appointment_end_date"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[appointment_end_date]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_end_date]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].Columns[appointment_location]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="appointment_location"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[appointment_location]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_location]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].Columns[appointment_description]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1000"
                          cachedName="appointment_description"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[appointment_description]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_description]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].Columns[appointment_comment]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="4000"
                          cachedName="appointment_comment"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[appointment_comment]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_comment]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].Columns[canceled_date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="20"
                          cachedName="canceled_date"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[canceled_date]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[canceled_date]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].Columns[course_section_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="course_section_id"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[course_section_id]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[course_section_id]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].Columns[no_show]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="10"
                          cachedName="no_show"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[no_show]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[no_show]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].Columns[appointment_type]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="256"
                          cachedName="appointment_type"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[appointment_type]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_type]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].Columns[wait_time]"
                          cachedDataType="i4"
                          cachedName="wait_time"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[wait_time]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[wait_time]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].Columns[actual_start_date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="20"
                          cachedName="actual_start_date"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[actual_start_date]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[actual_start_date]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].Columns[actual_end_date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="20"
                          cachedName="actual_end_date"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[actual_end_date]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[actual_end_date]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].Columns[actual_duration]"
                          cachedDataType="i4"
                          cachedName="actual_duration"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[actual_duration]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[actual_duration]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].Columns[scheduled_duration]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="10"
                          cachedName="scheduled_duration"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[scheduled_duration]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[scheduled_duration]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].Columns[scheduled]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="10"
                          cachedName="scheduled"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[scheduled]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[scheduled]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].Columns[waiting_room_status]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="waiting_room_status"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[waiting_room_status]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[waiting_room_status]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].Columns[activities]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="4000"
                          cachedName="activities"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[activities]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[activities]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].Columns[InsertDate]"
                          cachedDataType="date"
                          cachedName="InsertDate"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[INSERT_DT]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[InsertDate]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].Columns[New_Hash]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="62"
                          cachedName="New_Hash"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[Hash_DW]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Outputs[Output 0].Columns[New_Hash]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].Columns[FileName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="FileName"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[FileImported]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[FileName]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].Columns[File_Created_On]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="15"
                          cachedName="File_Created_On"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[FileCreated_On]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[File_Created_On]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].Columns[FileSize]"
                          cachedDataType="i4"
                          cachedName="FileSize"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[FileSize]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[FileSize]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].Columns[Integration_ID_SOURCE]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="62"
                          cachedName="Integration_ID_SOURCE"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[INTEGRATION_ID]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[Integration_ID_SOURCE]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].Columns[participant_integration_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="10"
                          cachedName="participant_integration_id"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[participant_integration_id]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[participant_integration_id]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].Columns[ETL_Source]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="15"
                          cachedName="ETL_Source"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[ETL_SOURCE]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[ETL_Source]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[appointment_ext_id]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="appointment_ext_id" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[calendar_owner_integration_id]"
                          codePage="1252"
                          dataType="str"
                          length="65"
                          name="calendar_owner_integration_id" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[calendar_owner_userid]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="calendar_owner_userid" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[calendar_owner_first_name]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="calendar_owner_first_name" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[calendar_owner_last_name]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="calendar_owner_last_name" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[calendar_owner_institutional_email]"
                          codePage="1252"
                          dataType="str"
                          length="150"
                          name="calendar_owner_institutional_email" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[participant_integration_id]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="participant_integration_id" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[participant_userid]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="participant_userid" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[participant_first_name]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="participant_first_name" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[participant_last_name]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="participant_last_name" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[participant_institutional_email]"
                          codePage="1252"
                          dataType="str"
                          length="150"
                          name="participant_institutional_email" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[participant_alternate_email]"
                          codePage="1252"
                          dataType="str"
                          length="150"
                          name="participant_alternate_email" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[appointment_type_reason]"
                          codePage="1252"
                          dataType="str"
                          length="4000"
                          name="appointment_type_reason" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[appointment_start_date]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          name="appointment_start_date" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[appointment_end_date]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          name="appointment_end_date" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[appointment_location]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="appointment_location" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[appointment_description]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          name="appointment_description" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[appointment_comment]"
                          codePage="1252"
                          dataType="str"
                          length="4000"
                          name="appointment_comment" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[canceled_date]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          name="canceled_date" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[course_section_id]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="course_section_id" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[no_show]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          name="no_show" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[appointment_type]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="appointment_type" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[arrival_time]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="arrival_time" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[wait_time]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          name="wait_time" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[actual_start_date]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          name="actual_start_date" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[actual_end_date]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          name="actual_end_date" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[actual_duration]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          name="actual_duration" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[scheduled_duration]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          name="scheduled_duration" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[scheduled]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          name="scheduled" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[waiting_room_status]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="waiting_room_status" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[activities]"
                          codePage="1252"
                          dataType="str"
                          length="4000"
                          name="activities" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[INSERT_DT]"
                          dataType="dbTimeStamp"
                          name="INSERT_DT" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[UPDATE_DT]"
                          dataType="dbTimeStamp"
                          name="UPDATE_DT" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[ETL_SOURCE]"
                          codePage="1252"
                          dataType="str"
                          length="15"
                          name="ETL_SOURCE" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[Hash_DW]"
                          codePage="1252"
                          dataType="str"
                          length="62"
                          name="Hash_DW" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[FileImported]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="FileImported" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[FileCreated_On]"
                          codePage="1252"
                          dataType="str"
                          length="25"
                          name="FileCreated_On" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[FileSize]"
                          dataType="i4"
                          name="FileSize" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[INTEGRATION_ID]"
                          codePage="1252"
                          dataType="str"
                          length="62"
                          name="INTEGRATION_ID" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input].ExternalColumns[RowID]"
                          dataType="i4"
                          name="RowID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Get Single Row"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="Get Single Row"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT 1 AS DUMMY</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Get Single Row.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.etl]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.etl]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Get Single Row.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Get Single Row.Outputs[OLE DB Source Output].Columns[DUMMY]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Get Single Row.Outputs[OLE DB Source Output].ExternalColumns[DUMMY]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Get Single Row.Outputs[OLE DB Source Output].Columns[DUMMY]"
                          name="DUMMY"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Get Single Row.Outputs[OLE DB Source Output].ExternalColumns[DUMMY]"
                          dataType="i4"
                          name="DUMMY" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Get Single Row.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Get Single Row.Outputs[OLE DB Source Error Output].Columns[DUMMY]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Get Single Row.Outputs[OLE DB Source Error Output].Columns[DUMMY]"
                          name="DUMMY" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Get Single Row.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Get Single Row.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Get Single Row.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Get Single Row.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Lookup"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select [INTEGRATION_ID],[Hash_DW]
from [whse_stage].[idr].[sf_appointments]
where INTEGRATION_ID is not null</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select [INTEGRATION_ID],[Hash_DW]
from [whse_stage].[idr].[sf_appointments]
where INTEGRATION_ID is not null) [refTable]
where [refTable].[INTEGRATION_ID] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="INTEGRATION_ID" dataType="DT_STR" length="62" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Hash_DW" dataType="DT_STR" length="62" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[Integration_ID_SOURCE]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Lookup.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[DW-SQL.Stage]"
                      connectionManagerRefId="Package.ConnectionManagers[DW-SQL.Stage]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Lookup.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Lookup.Inputs[Lookup Input].Columns[Integration_ID_SOURCE]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="62"
                          cachedName="Integration_ID_SOURCE"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Adding New Columns.Outputs[Derived Column Output].Columns[Integration_ID_SOURCE]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">INTEGRATION_ID</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Lookup.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Lookup.Outputs[Lookup Match Output].Columns[LK_INTEGRATION_ID]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="62"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Lookup.Outputs[Lookup Match Output].Columns[LK_INTEGRATION_ID]"
                          name="LK_INTEGRATION_ID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">INTEGRATION_ID</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Lookup.Outputs[Lookup Match Output].Columns[LK_Hash_DW]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="62"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Lookup.Outputs[Lookup Match Output].Columns[LK_Hash_DW]"
                          name="LK_Hash_DW"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">Hash_DW</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Lookup.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Lookup.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\MachedRecords"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="MachedRecords">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::RowCount_Match</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\MachedRecords.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\MachedRecords.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\MachedRecords.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\New Parse Error Columns"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="New Parse Error Columns"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\New Parse Error Columns.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\New Parse Error Columns.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\New Parse Error Columns.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\New Parse Error Columns.Outputs[Derived Column Output].Columns[Created_Dttm]"
                          dataType="date"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\New Parse Error Columns.Outputs[Derived Column Output].Columns[Created_Dttm]"
                          name="Created_Dttm"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::Error_Dttm]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::Error_Dttm]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\New Parse Error Columns.Outputs[Derived Column Output].Columns[TaskName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="32"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\New Parse Error Columns.Outputs[Derived Column Output].Columns[TaskName]"
                          name="TaskName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,32,1252)@[System::TaskName]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,32,1252)@[System::TaskName]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\New Parse Error Columns.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\New Parse Error Columns.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\New Parse Error Columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\New Parse Error Columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\New Parse Error Columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\New Parse Error Columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Push errors to starfish_ETL_Parse_Errors"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[starfish].[starfish_ETL_Parse_Errors]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">true</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[DW-SQL.Stage]"
                      connectionManagerRefId="Package.ConnectionManagers[DW-SQL.Stage]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].Columns[Created_Dttm]"
                          cachedDataType="date"
                          cachedName="Created_Dttm"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Created_Dttm]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\New Parse Error Columns.Outputs[Derived Column Output].Columns[Created_Dttm]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].Columns[TaskName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="32"
                          cachedName="TaskName"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Task_Name]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\New Parse Error Columns.Outputs[Derived Column Output].Columns[TaskName]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].Columns[Failed_Line_Text]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="Failed_Line_Text"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Parse_Source_Line_Text]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Record Level Parse Errors].Columns[Failed_Line_Text]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].Columns[Message]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="5000"
                          cachedName="Message"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Parse_Error_Message]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Record Level Parse Errors].Columns[Message]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].Columns[ErrorColumn]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ErrorColumn"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Target_Field_Name]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Record Level Parse Errors].Columns[ErrorColumn]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].Columns[File_Name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="File_Name"
                          externalMetadataColumnId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Parse_Source_File]"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Record Level Parse Errors].Columns[File_Name]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Error_Seq]"
                          dataType="i8"
                          name="Error_Seq" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Task_Name]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Task_Name" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Parse_Control_ID]"
                          dataType="i4"
                          name="Parse_Control_ID" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Parse_Source_File]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="Parse_Source_File" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Parse_Source_Line_Text]"
                          dataType="wstr"
                          length="4000"
                          name="Parse_Source_Line_Text" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Parse_Source_Line_Offset]"
                          dataType="i4"
                          name="Parse_Source_Line_Offset" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Target_Field_Number]"
                          dataType="i4"
                          name="Target_Field_Number" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Target_Field_Name]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Target_Field_Name" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Target_Field_DataType]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Target_Field_DataType" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Target_Field_Nullable]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          name="Target_Field_Nullable" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Parse_Field_Text]"
                          dataType="wstr"
                          length="4000"
                          name="Parse_Field_Text" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Parse_PassFail_Result]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          name="Parse_PassFail_Result" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Parse_Truncation_Error]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          name="Parse_Truncation_Error" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Parse_Nullability_Error]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          name="Parse_Nullability_Error" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Parse_DataType_Error]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          name="Parse_DataType_Error" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Parse_FieldCount_Error]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          name="Parse_FieldCount_Error" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Parse_Format_Error]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          name="Parse_Format_Error" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Parse_Other_Error]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          name="Parse_Other_Error" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Parse_Error_Message]"
                          codePage="1252"
                          dataType="text"
                          name="Parse_Error_Message" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Created_Dttm]"
                          dataType="dbTimeStamp"
                          name="Created_Dttm" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Lastupd_Dttm]"
                          dataType="dbTimeStamp"
                          name="Lastupd_Dttm" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Batch_Sid]"
                          dataType="i4"
                          name="Batch_Sid" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Delete_Flag]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          name="Delete_Flag" />
                        <externalMetadataColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input].ExternalColumns[Src_Sys_Id]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          name="Src_Sys_Id" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Row Count"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Row Count">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::RowCount</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Row Count.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Row Count.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Row Count.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="SafeParse Flat File appointments"
                  version="13">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_6d69f28d6f704f998cd82fa2b2d3f760.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{9F9EFE2F-CF8A-4C6C-9396-51399A9FC7FB}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_6d69f28d6f704f998cd82fa2b2d3f760</RootNamespace>
    <AssemblyName>SC_0E8B4E4774024C04A3081ADD15F981F7</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <PlatformTarget>x64</PlatformTarget>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.VisualBasic" />
    <Reference Include="Microsoft.VisualBasic.Compatibility" />
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[
#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Collections.Generic;
using System.Text.RegularExpressions;
using Microsoft.VisualBasic.FileIO;
using System.Reflection;
using System.Diagnostics;
using Microsoft.SqlServer.Dts.Pipeline;
using System.Globalization;
#endregion


[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    //Variables to hold values of parameters passed in through other SSIS pipeline components:
    private string fileLocation = "";                    //path to file
    private string fileName = "";                        //Mandatory: must contain the name of a file in folder pointed to by fileLocation
    private string fileFullPath = "";                    //Contains the full path to the input file (i.e. location\name)
    private string fileNameOutputColumn = "";            //Name of the output column expected to receive the file name (MUST BE AT AND OF RECORDSET!!!)
    private string recordTextOutputColumn = "";          //Name of the output column expected to receive the text of the input line (MUST BE AT AND OF RECORDSET!!!)
    private int headerLineCount = 1;                     //If > 0, the number of input lines to skip before reading data
    private int columnHeaderLine = 1;                    //If > 0, the input line where column headings are expected (first line = 1)
    private string columnHeaderList = "";                //If non-empty, overrides columnHeaderLine with comma-separated list of column headings
    private int maxLinesToProcess = -1;                  //If > -1, the number of data lines to process (does not count header lines)
    private int maxErrorsToIgnore = 100;                 //If > -1, the number errors to encounter before throwing an exception
    private int maxEventsToLog = 100;                    //If > -1, the number of parse errors to log (allows for more errors to be ignored, without logging every one)
    private string parseLogLevel = "E";                  //If E: Errors only.  A: All parse events (warning, can result in LARGE log tables).
    private string allowExtraColumnsYN = "Y";            //If Y, columns not in the output recordset will be ignored
    private string allowMissingColumnsYN = "Y";          //If Y, columns not in the input recordset will be output as NULL
    private string failOnExtraColumnYN = "N";            //If Y, and allowExtraColumnsYN = "N", script will throw an exception instead of skipping the file
    private string failOnMissingColumnYN = "N";          //If Y, and allowMissingColumnsYN = "N", script will throw an exception instead of skipping the file
    private string failOnMissingMandatoryColumnInHeaderYN = "N"; //If Y, and allowMissingColumnsYN = "Y" but a column in mandatoryColumns is missing in the header, script will throw an exception instead of skipping the file
    private string failOnMissingMandatoryColumnInLineYN = "N"; //If Y, and allowMissingColumnsYN = "Y" but a column in mandatoryColumns is missing in an input line, script will throw an exception instead of skipping the file
    private string columnNamesCaseSensitive = "Y";       //If Y, column names are case sensitive
    private string truncateStringValuesYN = "Y";         //If Y, columns with length > output field will be truncated
    private string stripUnicodeFromNonUnicodeYN = "N";   //If Y, strings with Unicode characters destined for non-Unicode columns will have those characters stripped from the string.
    private string convertThreeCharTzsToOffsetYN = "N";    //If Y, date values with "EST,EDT,PST,PDT,etc." will be converted to offset from GMT 
    private string fixDateValuesYN = "Y";                //If Y, unparseable dates and dates with Year < earliestAllowableYear will be set to NULL
    private int earliestAllowableYear = 0;               //if fixDateValuesYN == "Y" then dates with earlier Years will be set to NULL (NOTE: For SQL Server tables with DATETIME columns this should be set to 1753. DATETIME2 columns can be as early as CE 1)
    private string allowableDateFormats = "";            //A comma-separated set of date formats (compatible with .Net DateTime class's "ParseExact" function.  Use backslas-style escapes for embedded commas
    private string convertToTimeZone = "";               //The name of the timezone to convert dates with TZ offets to when a DT_DATE or DT_DATETIME is the target field.
    private string workdayIDColumn = "";                 //Contains the name of the column in the source file that has the Workday ID
    private string lookupValueColumn = "";               //Contains the name of the column in the source file that will provide lookup information
    private string additionalDataColumn = "";            //Contains the name of the column in the source file that provides any additional information
    private string notNullColumns = "";                  //A comma-separated set of column names that are considered a parse error if NULL (i.e. empty string in input file)
    private string mandatoryColumns = "";                //A comma-separated set of column names that MUST be in the input file.  If all are not found, parsing will not continue.
    private string nonTruncateableColumns = "";          //A comma-separated set of column names that MAY NOT be truncated.  Ignored if truncateStringValuesYN = "N" (not needed because all columns would be considered non-truncateable).
    private string columnRegexPatterns = "";             //A set of column names and associated regex patterns.  Format is colname:pattern;  Use backslash-style escapes for embedded : and ;
                                                         //If the value in the input file does NOT match the pattern for a column, it is considered an error
    private Dictionary<string, string> tz3ToOffset = new Dictionary<string, string>(); //A hard-coded lookup from three-character timezoned to their GMT offsets (e.g. EST -> -05:00, EDT -> -04:00)


    //Set up misc. variables
    //colCaseSensitivity governs how column names are compared and looked up.
    //it defaults to OrdinalIgnoreCase (column names are NOT case sensitive)
    //but could be set to Ordinal if input parameter ColumnNamesCaseSensitiveYN == "Y"
    private StringComparer colCaseSensitivity = StringComparer.OrdinalIgnoreCase;

    //Variables related to the output recordset:
    private Dictionary<string, IDTSOutputColumn100> mainOutputColumnsByName = new Dictionary<string, IDTSOutputColumn100>(StringComparer.OrdinalIgnoreCase);
    private Dictionary<int, string> mainOutputColumnNamesByPosition = new Dictionary<int, string>();
    private PipelineBuffer mainOutputBuffer = null;
    //private PipelineBuffer errorDetailBuffer = null;
    //private PipelineBuffer errorSummaryBuffer = null;

    //Variables related to the flatfile recordset:
    private Dictionary<string, int> flatfileColumnsByName = new Dictionary<string, int>(StringComparer.OrdinalIgnoreCase);
    private Dictionary<int, string> flatfileColumnsByPosition = new Dictionary<int, string>();

    //Variables controlling how parsing is done:
    private bool readyToParse = false; //Assume column headings are not as desired.
    private HashSet<string> mandatoryColumnList = new HashSet<string>(StringComparer.OrdinalIgnoreCase);
    private HashSet<string> notNullColumnList = new HashSet<string>(StringComparer.OrdinalIgnoreCase);
    private HashSet<string> nonTruncateableColumnList = new HashSet<string>(StringComparer.OrdinalIgnoreCase);
    private Dictionary<string, Regex> columnRegexPatternMap = new Dictionary<string, Regex>(StringComparer.OrdinalIgnoreCase);
    private string[] dateFormatArray = { }; //empty string array
    private TimeZoneInfo convertToTimeZoneInfo = TimeZoneInfo.Local;

    //Variables related to parsing events
    private int totalParseEventsLogged = 0;         //Counter for # of parsing events performed
    private int totalLinesParsed = 0;               //Counter for # of lines parsed
    private int totalLineErrors = 0;                //Counter for # of lines with errors encountered
    private int totalFieldsParsed = 0;              //Counter for # of fields parsed
    private int totalFieldErrors = 0;               //Counter for # of fields with errors encountered
    private int totalTruncationErrors = 0;          //Counter for # of fields with truncation errors encountered
    private int totalNullabilityErrors = 0;         //Counter for # of fields with nullability errors encountered
    private int totalDataTypeErrors = 0;            //Counter for # of fields with data type errors encountered
    private int totalFieldCountErrors = 0;          //Counter for # of fields with field count errors encountered
    private int totalFormatErrors = 0;              //Counter for # of fields with format errors encountered
    private int totalOtherErrors = 0;               //Counter for # of fields or lines with other errors encountered

    public override void PreExecute()
    {
        base.PreExecute();

        //Get output column list:
        //Script sends data to the first output not named "Error Detail Output" or "Error Summary Output"
        foreach (IDTSOutput100 mo in ComponentMetaData.OutputCollection)
        {
            if (mo.Name.Equals("Output - File Data"))
            {
                //If an output not named Error Detail Output or Error Summary Output, gather a list of 
                foreach (IDTSOutputColumn100 outputColumn in mo.OutputColumnCollection)
                {
                    //Add the column to mainOutputColumns so it can be looked up by name
                    mainOutputColumnsByName.Add(outputColumn.Name, outputColumn);
                    mainOutputColumnNamesByPosition.Add(mainOutputColumnNamesByPosition.Count, outputColumn.Name);
                }
                break;
            }
        }
    }

    //Save off a copy of the output buffer (and associated objects)
    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
        base.PrimeOutput(Outputs, OutputIDs, Buffers, OutputMap);

        for (int Idx = 0; Idx < Outputs; Idx++)
        {
            if (OutputIDs[Idx] == GetOutputID(OutputMap, @"Output - File Data"))
            {
                mainOutputBuffer = Buffers[Idx];
            }
        }
    }

    private void AddFieldLevelParseLog(int parseControlID, string parseSourceFile, string parseSourceLineText, int parseSourceLineOffset,
                               int targetFieldNumber, string targetFieldName, string targetFieldDataType,
                               string targetFieldNullable, string parseFieldText, string parsePassFailResult, string parseTruncationError,
                               string parseNullabilityError, string parseDataTypeError, string parseFieldCountError,
                               string parseFormatError, string parseOtherError, string parseErrorMessage)
    {
        if (parseLogLevel == "E" && parsePassFailResult == "PASS")
            return; //Bail if we're set to ignore fields where parsing is successful
        if (totalParseEventsLogged > maxEventsToLog + 1 && maxEventsToLog != -1)
            return; //Bail if we've already logged as many events as we are allowed to

        OutputFieldLevelParseLoggingBuffer.AddRow();
        OutputFieldLevelParseLoggingBuffer.ParseControlID = parseControlID;
        OutputFieldLevelParseLoggingBuffer.ParseSourceFile = parseSourceFile;
        OutputFieldLevelParseLoggingBuffer.ParseSourceLineText = parseSourceLineText.Substring(0, Math.Min(parseSourceLineText.Length, 4000));
        OutputFieldLevelParseLoggingBuffer.ParseSourceLineOffset = parseSourceLineOffset;
        OutputFieldLevelParseLoggingBuffer.TargetFieldNumber = targetFieldNumber;
        OutputFieldLevelParseLoggingBuffer.TargetFieldName = targetFieldName;
        OutputFieldLevelParseLoggingBuffer.TargetFieldDataType = targetFieldDataType;
        OutputFieldLevelParseLoggingBuffer.TargetFieldNullable = targetFieldNullable;
        OutputFieldLevelParseLoggingBuffer.ParseFieldText = parseFieldText.Substring(0, Math.Min(parseFieldText.Length, 4000));
        OutputFieldLevelParseLoggingBuffer.ParsePassFailResult = parsePassFailResult;
        OutputFieldLevelParseLoggingBuffer.ParseTruncationError = parseTruncationError;
        OutputFieldLevelParseLoggingBuffer.ParseNullabilityError = parseNullabilityError;
        OutputFieldLevelParseLoggingBuffer.ParseDataTypeError = parseDataTypeError;
        OutputFieldLevelParseLoggingBuffer.ParseFieldCountError = parseFieldCountError;
        OutputFieldLevelParseLoggingBuffer.ParseFormatError = parseFormatError;
        OutputFieldLevelParseLoggingBuffer.ParseOtherError = parseOtherError;
        OutputFieldLevelParseLoggingBuffer.ParseErrorMessage = parseErrorMessage;

        totalParseEventsLogged++;
    }

    private void AddRecordLevelParsingError(string FailedLineText, string LookupWorkdayID, string LookupValue, string AdditionalData, string ErrorCode, string ErrorColumn, string Message)
    {
        if (totalParseEventsLogged > maxEventsToLog + 1 && maxEventsToLog != -1)
            return; //Bail if we've already logged as many events as we are allowed to
        OutputRecordLevelParseErrorsBuffer.AddRow();
        OutputRecordLevelParseErrorsBuffer.FileName = fileFullPath.Substring(0, Math.Min(fileFullPath.Length, 4000));
        OutputRecordLevelParseErrorsBuffer.FailedLineText = FailedLineText.Substring(0, Math.Min(FailedLineText.Length, 8000));
        OutputRecordLevelParseErrorsBuffer.LookupWorkdayID = LookupWorkdayID.Substring(0, Math.Min(LookupWorkdayID.Length, 255));
        OutputRecordLevelParseErrorsBuffer.LookupValue = LookupValue.Substring(0, Math.Min(LookupValue.Length, 255));
        OutputRecordLevelParseErrorsBuffer.AdditionalData = AdditionalData.Substring(0, Math.Min(AdditionalData.Length, 8000));
        OutputRecordLevelParseErrorsBuffer.ErrorCode = ErrorCode.Substring(0, Math.Min(ErrorCode.Length, 255));
        OutputRecordLevelParseErrorsBuffer.ErrorColumn = ErrorColumn.Substring(0, Math.Min(ErrorColumn.Length, 255));
        OutputRecordLevelParseErrorsBuffer.Message = Message.Substring(0, Math.Min(Message.Length, 5000));
        totalParseEventsLogged++;
    }

    private void AddFileLevelParseLog()
    {
        OutputFileLevelParseLoggingBuffer.AddRow();
        OutputFileLevelParseLoggingBuffer.ParseSourceFile = fileFullPath.Substring(0, Math.Min(fileFullPath.Length, 1000));
        OutputFileLevelParseLoggingBuffer.TotalLinesParsed = totalLinesParsed;
        OutputFileLevelParseLoggingBuffer.TotalLinesPassed = totalLinesParsed - totalLineErrors;
        OutputFileLevelParseLoggingBuffer.TotalLinesFailed = totalLineErrors;
        OutputFileLevelParseLoggingBuffer.TotalFieldsParsed = totalFieldsParsed;
        OutputFileLevelParseLoggingBuffer.TotalFieldsPassed = totalFieldsParsed - totalFieldErrors;
        OutputFileLevelParseLoggingBuffer.TotalFieldsFailed = totalFieldErrors;
        OutputFileLevelParseLoggingBuffer.TotalTruncationErrors = totalTruncationErrors;
        OutputFileLevelParseLoggingBuffer.TotalNullabilityErrors = totalNullabilityErrors;
        OutputFileLevelParseLoggingBuffer.TotalDataTypeErrors = totalDataTypeErrors;
        OutputFileLevelParseLoggingBuffer.TotalFieldCountErrors = totalFieldCountErrors;
        OutputFileLevelParseLoggingBuffer.TotalFormatErrors = totalFormatErrors;
        OutputFileLevelParseLoggingBuffer.TotalOtherErrors = totalOtherErrors;
    }


    private void ParseFlatFile()
    {

        //Get full file path and name
        fileFullPath = fileLocation.Trim();
        if (!Regex.IsMatch(fileFullPath, "^.*\\$"))
            fileFullPath = fileFullPath + "\\";
        fileFullPath = fileFullPath + fileName.Trim();

        //Set up the dictionary object to hold the 
        tz3ToOffset.Add("EDT", "-04:00");
        tz3ToOffset.Add("EST", "-05:00");
        tz3ToOffset.Add("CDT", "-05:00");
        tz3ToOffset.Add("CST", "-06:00");
        tz3ToOffset.Add("MDT", "-06:00");
        tz3ToOffset.Add("MST", "-07:00");
        tz3ToOffset.Add("PDT", "-07:00");
        tz3ToOffset.Add("PST", "-08:00");
        tz3ToOffset.Add("AKDT", "-08:00");
        tz3ToOffset.Add("AKST", "-09:00");
        tz3ToOffset.Add("HDT", "-09:00");
        tz3ToOffset.Add("HST", "-10:00");       


        //Set up the text field parser object
        TextFieldParser parser;
        try
        {
            parser = new TextFieldParser(fileFullPath);
            parser.SetDelimiters(",");
            parser.HasFieldsEnclosedInQuotes = true;
        }
        catch (Exception ex)
        {
            totalOtherErrors++;
            AddFileLevelParseLog();
            throw ex;
        }

        string[] curFields = { };   //the set of fields parsed out of an input line
        int curline = 0;            //Starting at line 
        Boolean abortParse = false;

        //Read to end of file or limit on lines to process is reached:
        while (!abortParse && !parser.EndOfData && (curline <= maxLinesToProcess || maxLinesToProcess == -1))
        {
            //Peek ahead to get the full text of the current line
            string curLineText = parser.PeekChars(8000);

            //read a line from the file, chopping it into individual strings
            curline++;
            try
            {
                curFields = parser.ReadFields();
            }
            catch (MalformedLineException ex)
            {
                totalOtherErrors++;
                totalLineErrors++;
                AddRecordLevelParsingError(curLineText, "N/A", "N/A", "N/A", "N/A", "N/A", "Unable to parse line " + curline.ToString() + " of file. [" + ex.Message + "]");
                if (totalLineErrors > maxErrorsToIgnore && maxErrorsToIgnore != -1)
                    break; //Quit reading from the file (i.e. exit from the "while(!parser.EndOfData)" loop).
                else
                    continue; //Don't bother parsing this line, just move on to the next one.
            }

            //Process header lines
            if (curline <= headerLineCount) //Line is a header line
            {
                if (curline == columnHeaderLine && columnHeaderList.Trim().Equals(""))  //Current line is the header (and the headers are not overriden by specifying the 
                {
                    //Set up some variables for column presence checking
                    bool mandatoryHeadersOK = true; //assume all mandatory columns are found
                    bool specialHeadersOK = true;   //assume Workday ID, Lookup Value and Additional Data columns are found (if requested)
                    bool expectedHeadersOK = true;  //assume all expected columns are found
                    bool extraHeadersOK = true;     //assume no extra columns are found
                    bool duplicateHeadersOK = true; //assume no duplicate headers are found

                    foreach (string colname in curFields)
                    {
                        if (flatfileColumnsByName.ContainsKey(colname))
                        {
                            AddFieldLevelParseLog(-1, fileFullPath, curLineText, curline, -1, colname, "N/A", "N/A", "", "FAIL", "N", "N", "N", "Y", "N", "N", "Duplicate column name found in input recordset.");
                            duplicateHeadersOK = false;
                        }
                        else
                        {
                            flatfileColumnsByName.Add(colname, flatfileColumnsByName.Count);
                            flatfileColumnsByPosition.Add(flatfileColumnsByPosition.Count, colname);
                        }
                    }

                    //Check against the list of columns in mandatoryColumnList
                    foreach (string colname in mandatoryColumnList)
                    {
                        if (!flatfileColumnsByName.ContainsKey(colname))
                        {
                            totalFieldCountErrors++;
                            mandatoryHeadersOK = false;
                            AddFieldLevelParseLog(-1, fileFullPath, curLineText, curline, -1, colname, "N/A", "N/A", "", "FAIL", "N", "N", "N", "Y", "N", "N", "Mandatory column missing from input recordset.");
                        }
                    }
                    //Check the "special" column list (workday ID, lookup value, and additional data)
                    if (workdayIDColumn != "" && !flatfileColumnsByName.ContainsKey(workdayIDColumn))
                    {
                        totalFieldCountErrors++;
                        specialHeadersOK = false;
                        AddFieldLevelParseLog(-1, fileFullPath, curLineText, curline, -1, workdayIDColumn, "N/A", "N/A", "", "FAIL", "N", "N", "N", "Y", "N", "N", "Workday ID column requested but missing from input recordset.");
                    }
                    if (lookupValueColumn != "" && !flatfileColumnsByName.ContainsKey(lookupValueColumn))
                    {
                        totalFieldCountErrors++;
                        specialHeadersOK = false;
                        AddFieldLevelParseLog(-1, fileFullPath, curLineText, curline, -1, lookupValueColumn, "N/A", "N/A", "", "FAIL", "N", "N", "N", "Y", "N", "N", "Lookup Value column requested but missing from input recordset.");
                    }
                    if (additionalDataColumn != "" && !flatfileColumnsByName.ContainsKey(additionalDataColumn))
                    {
                        totalFieldCountErrors++;
                        specialHeadersOK = false;
                        AddFieldLevelParseLog(-1, fileFullPath, curLineText, curline, -1, additionalDataColumn, "N/A", "N/A", "", "FAIL", "N", "N", "N", "Y", "N", "N", "Additional Data column requested but missing from input recordset.");
                    }
                    //Check expected output column list and see if they are on the input
                    foreach (string colname in mainOutputColumnsByName.Keys)
                    {
                        if (!flatfileColumnsByName.ContainsKey(colname))
                        {
                            if (colname != recordTextOutputColumn && colname != fileNameOutputColumn)
                            {
                                totalFieldCountErrors++;
                                expectedHeadersOK = false;
                                AddFieldLevelParseLog(-1, fileFullPath, curLineText, curline, -1, colname, "N/A", "N/A", "", "FAIL", "N", "N", "N", "Y", "N", "N", "Column on output recordset but missing from input recordset.");
                            }
                        }
                    }
                    //Check actual columns in file to see if all are on the output
                    foreach (string colname in flatfileColumnsByName.Keys)
                    {
                        if (!mainOutputColumnsByName.ContainsKey(colname))
                        {
                            totalFieldCountErrors++;
                            extraHeadersOK = false;
                            AddFieldLevelParseLog(-1, fileFullPath, curLineText, curline, -1, colname, "N/A", "N/A", "", "FAIL", "N", "N", "N", "Y", "N", "N", "Extra column found on input recordset.");
                        }
                    }

                    //If a mandatory column was missing, then fail package or quit
                    if (!mandatoryHeadersOK)
                    {
                        if (failOnMissingMandatoryColumnInHeaderYN == "Y")
                        {
                            bool t = true;
                            this.ComponentMetaData.FireError(-1, ComponentMetaData.Name, "Mandatory Column Missing from Input File", null, 0, out t);
                        }
                        return;
                    }
                    //If Workday ID, Lookup Value or Additional Data columns are missing (if requested), then just quit.  Don't fail package.
                    if (!specialHeadersOK)
                        return;
                    //If expected columns are missing and "Allow Missing Columns" is not "Y" then fail package or quit
                    if (!expectedHeadersOK && allowMissingColumnsYN != "Y")
                    {
                        if (failOnMissingColumnYN == "Y")
                        {
                            bool t = true;
                            this.ComponentMetaData.FireError(-1, ComponentMetaData.Name, "Expected Column Missing from Input File", null, 0, out t);
                        }
                        return;
                    }
                    //If an extra column was found and "Allow Extra Columns" is not "Y" then fail package or quit
                    if (!extraHeadersOK && allowExtraColumnsYN != "Y")
                    {
                        if (failOnExtraColumnYN == "Y")
                        {
                            bool t = true;
                            this.ComponentMetaData.FireError(-1, ComponentMetaData.Name, "Unexpected Column Found in Input File", null, 0, out t);
                        }
                        return;
                    };
                    //If a duplicate column was found then just quit
                    if (!duplicateHeadersOK)
                        return;
                }
            }
            else //Line is a data line
            {
                //Try to get the workday ID, lookup value, and additional columns:
                string workdayIDValue = "";
                string lookupValueValue = "";
                string additionalDataValue = "";
                if (flatfileColumnsByName.ContainsKey(workdayIDColumn) && flatfileColumnsByName[workdayIDColumn] < curFields.Length)
                {
                    workdayIDValue = curFields[flatfileColumnsByName[workdayIDColumn]];
                }
                if (flatfileColumnsByName.ContainsKey(lookupValueColumn) && flatfileColumnsByName[lookupValueColumn] < curFields.Length)
                {
                    lookupValueValue = curFields[flatfileColumnsByName[lookupValueColumn]];
                }
                if (flatfileColumnsByName.ContainsKey(additionalDataColumn) && flatfileColumnsByName[additionalDataColumn] < curFields.Length)
                {
                    additionalDataValue = curFields[flatfileColumnsByName[additionalDataColumn]];
                }

                //Create a new output row for the mainOutputRowBuffer 
                mainOutputBuffer.AddRow();
                //Assume all fields will parse correctly
                bool allFieldsParsedOK = true;
                string failedFields = "";

                //Iterate over the set of expected output columns (retrieved earlier in the PreExecute() method):
                for (int outColPos = 0; outColPos < mainOutputColumnNamesByPosition.Count; outColPos++)
                {
                    //Break out of the for loop if abortParse == true
                    if (abortParse)
                        break;
                    //String to hold value of the input field
                    string inColVal = "";
                    //Get the current output column name: 
                    string outColName = mainOutputColumnNamesByPosition[outColPos];
                    //Get the current output column definition:
                    IDTSOutputColumn100 outCol = mainOutputColumnsByName[outColName];
                    //String to hold the type name
                    string outColTypeName = "";
                    //String to hold the nullability
                    string outColNullable = "";

                    //Set up variables to record if/what type of errors were encountered:
                    string parseTruncationError = "N";
                    string parseNullabilityError = "N";
                    string parseDataTypeError = "N";
                    string parseFieldCountError = "N";
                    string parseFormatError = "N";
                    string parseOtherError = "N";
                    string parseUnicodeError = "N";
                    string parseDateYearError = "N";
                    string errorText = "";
                    string fieldPassFailResult = "PASS"; //Default status to "PASS"

                    //Get column type name
                    outColTypeName = outCol.DataType.ToString();
                    if (Regex.IsMatch(outColTypeName, "DT_BYTES|DT_STR|DT_WSTR"))
                    {
                        outColTypeName = outColTypeName + "(" + outCol.Length.ToString() + ")";
                    }
                    if (Regex.IsMatch(outColTypeName, "DT_DECIMAL|DT_NUMERIC"))
                    {
                        outColTypeName = outColTypeName + "(" + outCol.Precision.ToString();
                        if (outCol.Scale != 0)
                            outColTypeName = outColTypeName + "," + outCol.Scale.ToString();
                        outColTypeName = outColTypeName + ")";

                    }
                    //Get column nullability
                    if (notNullColumnList.Contains(outColName))
                        outColNullable = "NOT NULL";
                    else
                        outColNullable = "NULL";

                    //Look for the column in the set of fields on the input record:

                    if (flatfileColumnsByName.ContainsKey(outColName))
                    { //The column was found
                        //Retrieve the column's position
                        int inColPos = flatfileColumnsByName[outColName];

                        //Check to see if the array containing the current line's parsed fields
                        //is long enough to have contained the output column
                        //NOTE 1: there's no way to know if a field is "shifted left" due to a formatting error within 
                        //        the line (other than to see if the header count == field count)
                        //        e.g. Headers say to expect fields A,B,C,D,E but line had four fields.  
                        //        Were they A,B,D,E? B,C,D,E? A,B,C,E? A,B,C,D?  It's impossible to tell.
                        //NOTE 2: Since it's possible to configure the script to allow extra columns, 
                        //        There's no point in checking to see if the parsed array has more fields than expected
                        if (flatfileColumnsByName[outColName] >= curFields.Length)
                        {
                            if (allowMissingColumnsYN != "N") //allowMissingColumnsYN == "Y" or Blank
                            {
                                parseFieldCountError = "Y";
                                errorText = "Expected Column Missing from Input File";
                                mainOutputBuffer.SetNull(outColPos);
                                fieldPassFailResult = "FAIL";
                                if (mandatoryColumnList.Contains(outColName) && failOnMissingMandatoryColumnInLineYN == "Y")
                                {
                                    errorText = "Mandatory Column Missing from Input File";
                                    bool t = true;
                                    this.ComponentMetaData.FireError(-1, ComponentMetaData.Name, "Mandatory Column Missing from Input File", null, 0, out t);
                                    mainOutputBuffer.RemoveRow(); //Remove the current row from the output buffer
                                    abortParse = true; //abort parsing
                                }
                            }
                            else //allowMissingColumnsYN == "N"
                            {
                                if (failOnMissingColumnYN == "Y")
                                {
                                    bool t = true;
                                    this.ComponentMetaData.FireError(-1, ComponentMetaData.Name, "Expected Column Missing from Input File", null, 0, out t);
                                    mainOutputBuffer.RemoveRow(); //Remove the current row from the output buffer
                                    abortParse = true; //abort parsing
                                }
                                if (mandatoryColumnList.Contains(outColName) && failOnMissingMandatoryColumnInLineYN == "Y")
                                {
                                    bool t = true;
                                    this.ComponentMetaData.FireError(-1, ComponentMetaData.Name, "Mandatory Column Missing from Input File", null, 0, out t);
                                    mainOutputBuffer.RemoveRow(); //Remove the current row from the output buffer
                                    abortParse = true; //abort parsing
                                }
                            }
                        }
                        else
                        {
                            //Retrieve the text of the column from the current parsed input record
                            inColVal = curFields[inColPos];

                            //If the string is empty, consider it NULL
                            if (inColVal.Equals(""))
                            {
                                if (notNullColumnList.Contains(outColName))
                                {
                                    allFieldsParsedOK = false;
                                    parseNullabilityError = "Y";
                                    failedFields = failedFields + outColName + ",";
                                }
                                mainOutputBuffer.SetNull(outColPos);
                            }
                            else //Parse the fields
                            {
                                //Pick the right parser/setter based on the desired output data type
                                switch (outCol.DataType)
                                {
                                    #region Type Cases for Parsing
                                    case DataType.DT_BOOL:
                                        {
                                            try //try to cast to System.Boolean and add to row with SetBoolean()
                                            {
                                                System.Boolean v;
                                                v = System.Boolean.Parse(inColVal);
                                                mainOutputBuffer.SetBoolean(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    //DataType DT_BYTES Not Supported
                                    //case DataType.DT_BYTES:
                                    //    {
                                    //        try //try to cast to Array of System.Byte and add to row with SetBytes()
                                    //        {
                                    //           Array of System.Byte v;
                                    //           v = Array of System.Byte.Parse(inColVal);
                                    //           mainOutputBuffer.SetBytes(outColPos,v);
                                    //        } catch(Exception ex) {
                                    //           //handleerrors
                                    //           parseDataTypeError = "Y";
                                    //           errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                    //           mainOutputBuffer.SetNull(outColPos);
                                    //           fieldPassFailResult = "FAIL";
                                    //        }
                                    //        break;
                                    //    }
                                    case DataType.DT_CY:
                                        {
                                            try //try to cast to System.Decimal and add to row with SetDecimal()
                                            {
                                                System.Decimal v;
                                                v = System.Decimal.Parse(inColVal);
                                                mainOutputBuffer.SetDecimal(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_DATE:
                                        {
                                            try //try to cast to System.DateTime and add to row with SetDateTime()
                                            {
                                                if(convertThreeCharTzsToOffsetYN == "Y")
                                                {
                                                    foreach(KeyValuePair<string,string> kvp in this.tz3ToOffset)
                                                    {
                                                        inColVal = Regex.Replace(inColVal, kvp.Key, kvp.Value);
                                                    }
                                                }
                                                System.DateTimeOffset v;
                                                if (dateFormatArray.Length > 0)
                                                    v = System.DateTimeOffset.ParseExact(inColVal, dateFormatArray, CultureInfo.InvariantCulture, DateTimeStyles.None);
                                                else
                                                    v = System.DateTimeOffset.Parse(inColVal);
                                                v = v.ToUniversalTime();
                                                v = TimeZoneInfo.ConvertTime(v, convertToTimeZoneInfo);

                                                //Check for dates with invalid year (less than earliestAllowableYear)
                                                if (fixDateValuesYN.Equals("Y") && v.Year < earliestAllowableYear)
                                                {
                                                    parseDataTypeError = "Y"; //Consider an improper date a data type error
                                                    fieldPassFailResult = "FAIL";
                                                    parseDateYearError = "Y";
                                                    errorText = "Date with Year < " + earliestAllowableYear.ToString();
                                                    mainOutputBuffer.SetNull(outColPos);
                                                }
                                                else
                                                {
                                                    mainOutputBuffer.SetDateTime(outColPos, new DateTime(v.Year, v.Month, v.Day, v.Hour, v.Minute, v.Second, v.Millisecond));
                                                }
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_DBDATE:
                                        {
                                            try //try to cast to System.DateTimeOffset and add to row with SetDate()
                                            {
                                                System.DateTimeOffset v;
                                                if (dateFormatArray.Length > 0)
                                                    v = System.DateTimeOffset.ParseExact(inColVal, dateFormatArray, CultureInfo.InvariantCulture, DateTimeStyles.None);
                                                else
                                                    v = System.DateTimeOffset.Parse(inColVal);
                                                v = v.ToUniversalTime();
                                                v = TimeZoneInfo.ConvertTime(v, convertToTimeZoneInfo);

                                                //Check for dates with invalid year (less than earliestAllowableYear)
                                                if (fixDateValuesYN.Equals("Y") && v.Year < earliestAllowableYear)
                                                {
                                                    parseDataTypeError = "Y"; //Consider an improper date a data type error
                                                    fieldPassFailResult = "FAIL";
                                                    parseDateYearError = "Y";
                                                    errorText = "Date with Year < " + earliestAllowableYear.ToString();
                                                    mainOutputBuffer.SetNull(outColPos);
                                                }
                                                else
                                                {
                                                    mainOutputBuffer.SetDateTime(outColPos, new DateTime(v.Year, v.Month, v.Day, v.Hour, v.Minute, v.Second, v.Millisecond));
                                                }
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_DBTIME:
                                        {
                                            try //try to cast to System.TimeSpan and add to row with SetTime()
                                            {
                                                System.TimeSpan v;
                                                v = System.TimeSpan.Parse(inColVal);
                                                mainOutputBuffer.SetTime(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_DBTIME2:
                                        {
                                            try //try to cast to System.TimeSpan and add to row with SetTime()
                                            {
                                                System.TimeSpan v;
                                                v = System.TimeSpan.Parse(inColVal);
                                                mainOutputBuffer.SetTime(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_DBTIMESTAMP:
                                        {
                                            try //try to cast to System.DateTime and add to row with SetDateTime()
                                            {
                                                System.DateTimeOffset v;
                                                if (dateFormatArray.Length > 0)
                                                    v = System.DateTimeOffset.ParseExact(inColVal, dateFormatArray, CultureInfo.InvariantCulture, DateTimeStyles.None);
                                                else
                                                    v = System.DateTimeOffset.Parse(inColVal);
                                                v = v.ToUniversalTime();
                                                v = TimeZoneInfo.ConvertTime(v, convertToTimeZoneInfo);

                                                //Check for dates with invalid year (less than earliestAllowableYear)
                                                if (fixDateValuesYN.Equals("Y") && v.Year < earliestAllowableYear)
                                                {
                                                    parseDataTypeError = "Y"; //Consider an improper date a data type error
                                                    fieldPassFailResult = "FAIL";
                                                    parseDateYearError = "Y";
                                                    errorText = "Date with Year < " + earliestAllowableYear.ToString();
                                                    mainOutputBuffer.SetNull(outColPos);
                                                }
                                                else
                                                {
                                                    mainOutputBuffer.SetDateTime(outColPos, new DateTime(v.Year, v.Month, v.Day, v.Hour, v.Minute, v.Second, v.Millisecond));
                                                }
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_DBTIMESTAMP2:
                                        {
                                            try //try to cast to System.DateTime and add to row with SetDateTime()
                                            {
                                                System.DateTimeOffset v;
                                                if (dateFormatArray.Length > 0)
                                                    v = System.DateTimeOffset.ParseExact(inColVal, dateFormatArray, CultureInfo.InvariantCulture, DateTimeStyles.None);
                                                else
                                                    v = System.DateTimeOffset.Parse(inColVal);
                                                v = v.ToUniversalTime();
                                                v = TimeZoneInfo.ConvertTime(v, convertToTimeZoneInfo);

                                                //Check for dates with invalid year (less than earliestAllowableYear)
                                                if (fixDateValuesYN.Equals("Y") && v.Year < earliestAllowableYear)
                                                {
                                                    parseDataTypeError = "Y"; //Consider an improper date a data type error
                                                    fieldPassFailResult = "FAIL";
                                                    parseDateYearError = "Y";
                                                    errorText = "Date with Year < " + earliestAllowableYear.ToString();
                                                    mainOutputBuffer.SetNull(outColPos);
                                                }
                                                else
                                                {
                                                    mainOutputBuffer.SetDateTime(outColPos, new DateTime(v.Year, v.Month, v.Day, v.Hour, v.Minute, v.Second, v.Millisecond));
                                                }
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_DBTIMESTAMPOFFSET:
                                        {
                                            try //try to cast to System.DateTimeOffset and add to row with SetDateTimeOffset()
                                            {
                                                System.DateTimeOffset v;
                                                v = System.DateTimeOffset.Parse(inColVal);
                                                //Check for dates with invalid year (less than earliestAllowableYear)

                                                if (fixDateValuesYN.Equals("Y") && v.Year < earliestAllowableYear)
                                                {
                                                    parseDataTypeError = "Y"; //Consider an improper date a data type error
                                                    fieldPassFailResult = "FAIL";
                                                    parseDateYearError = "Y";
                                                    errorText = "Date with Year < " + earliestAllowableYear.ToString();
                                                    mainOutputBuffer.SetNull(outColPos);
                                                }
                                                else
                                                {
                                                    mainOutputBuffer.SetDateTimeOffset(outColPos, v);
                                                }
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_DECIMAL:
                                        {
                                            try //try to cast to System.Decimal and add to row with SetDecimal()
                                            {
                                                System.Decimal v;
                                                v = System.Decimal.Parse(inColVal);
                                                mainOutputBuffer.SetDecimal(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_FILETIME:
                                        {
                                            try //try to cast to System.DateTime and add to row with SetDateTime()
                                            {
                                                System.DateTimeOffset v;
                                                if (dateFormatArray.Length > 0)
                                                    v = System.DateTimeOffset.ParseExact(inColVal, dateFormatArray, CultureInfo.InvariantCulture, DateTimeStyles.None);
                                                else
                                                    v = System.DateTimeOffset.Parse(inColVal);
                                                v = v.ToUniversalTime();
                                                v = TimeZoneInfo.ConvertTime(v, convertToTimeZoneInfo);

                                                //Check for dates with invalid year (less than earliestAllowableYear)
                                                if (fixDateValuesYN.Equals("Y") && v.Year < earliestAllowableYear)
                                                {
                                                    parseDataTypeError = "Y"; //Consider an improper date a data type error
                                                    fieldPassFailResult = "FAIL";
                                                    parseDateYearError = "Y";
                                                    errorText = "Date with Year < " + earliestAllowableYear.ToString();
                                                    mainOutputBuffer.SetNull(outColPos);
                                                }
                                                else
                                                {
                                                    mainOutputBuffer.SetDateTime(outColPos, new DateTime(v.Year, v.Month, v.Day, v.Hour, v.Minute, v.Second, v.Millisecond));
                                                }
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_GUID:
                                        {
                                            try //try to cast to System.Guid and add to row with SetGuid()
                                            {
                                                System.Guid v;
                                                v = System.Guid.Parse(inColVal);
                                                mainOutputBuffer.SetGuid(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_I1:
                                        {
                                            try //try to cast to System.SByte and add to row with SetSByte()
                                            {
                                                System.SByte v;
                                                v = System.SByte.Parse(inColVal);
                                                mainOutputBuffer.SetSByte(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_I2:
                                        {
                                            try //try to cast to System.Int16 and add to row with SetInt16()
                                            {
                                                System.Int16 v;
                                                v = System.Int16.Parse(inColVal);
                                                mainOutputBuffer.SetInt16(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_I4:
                                        {
                                            try //try to cast to System.Int32 and add to row with SetInt32()
                                            {
                                                System.Int32 v;
                                                v = System.Int32.Parse(inColVal);
                                                mainOutputBuffer.SetInt32(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_I8:
                                        {
                                            try //try to cast to System.Int64 and add to row with SetInt64()
                                            {
                                                System.Int64 v;
                                                v = System.Int64.Parse(inColVal);
                                                mainOutputBuffer.SetInt64(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    //DataType DT_IMAGE Not Supported
                                    //case DataType.DT_IMAGE:
                                    //    {
                                    //        try //try to cast to N/A and add to row with AddBlobData or AddBlobData()
                                    //        {
                                    //           N/A v;
                                    //           v = N/A.Parse(inColVal);
                                    //           mainOutputBuffer.AddBlobData or AddBlobData(outColPos,v);
                                    //        } catch(Exception ex) {
                                    //           //handleerrors
                                    //           parseDataTypeError = "Y";
                                    //           errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                    //           mainOutputBuffer.SetNull(outColPos);
                                    //           fieldPassFailResult = "FAIL";
                                    //        }
                                    //        break;
                                    //    }
                                    case DataType.DT_NTEXT:
                                        {
                                            try //try to cast to System.String and add to row with SetString()
                                            {
                                                string v = inColVal;
                                                //Truncate strings longer than allowable size
                                                if (inColVal.Length > outCol.Length)
                                                {
                                                    parseTruncationError = "Y";
                                                    fieldPassFailResult = "FAIL";
                                                    errorText = "String would be truncated";
                                                    if (truncateStringValuesYN.Equals("Y"))
                                                    {
                                                        if (nonTruncateableColumnList.Contains(outColName))
                                                            v = null;
                                                        else
                                                            v = inColVal.Substring(0, outCol.Length);
                                                    }
                                                }
                                                if (columnRegexPatternMap.ContainsKey(outColName))
                                                {
                                                    if (!columnRegexPatternMap[outColName].IsMatch(inColVal))
                                                    {
                                                        fieldPassFailResult = "FAIL";
                                                        if (errorText != "") errorText = errorText + " and ";
                                                        errorText = errorText + "String value failed to match regular expression pattern";
                                                        parseFormatError = "Y";
                                                    }
                                                }
                                                mainOutputBuffer.SetString(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    //DataType DT_NULL Not Supported
                                    //case DataType.DT_NULL:
                                    //    {
                                    //        try //try to cast to N/A and add to row with SetNull()
                                    //        {
                                    //           N/A v;
                                    //           v = N/A.Parse(inColVal);
                                    //           mainOutputBuffer.SetNull(outColPos,v);
                                    //        } catch(Exception ex) {
                                    //           //handleerrors
                                    //           parseDataTypeError = "Y";
                                    //           errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                    //           mainOutputBuffer.SetNull(outColPos);
                                    //           fieldPassFailResult = "FAIL";
                                    //        }
                                    //        break;
                                    //    }
                                    case DataType.DT_NUMERIC:
                                        {
                                            try //try to cast to System.Decimal and add to row with SetDecimal()
                                            {
                                                System.Decimal v;
                                                v = System.Decimal.Parse(inColVal);
                                                mainOutputBuffer.SetDecimal(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_R4:
                                        {
                                            try //try to cast to System.Single and add to row with SetSingle()
                                            {
                                                System.Single v;
                                                v = System.Single.Parse(inColVal);
                                                mainOutputBuffer.SetSingle(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_R8:
                                        {
                                            try //try to cast to System.Double and add to row with SetDouble()
                                            {
                                                System.Double v;
                                                v = System.Double.Parse(inColVal);
                                                mainOutputBuffer.SetDouble(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_STR:
                                        {
                                            try //try to cast to System.String and add to row with SetString()
                                            {
                                                //Strip Unicode characters from non-unicode target columns if requested
                                                if (this.stripUnicodeFromNonUnicodeYN == "Y")
                                                {
                                                    inColVal = Regex.Replace(inColVal, @"[^\u0000-\u007F]+", string.Empty);
                                                }
                                                string v = inColVal;
                                                //Truncate strings longer than allowable size
                                                if (inColVal.Length > outCol.Length)
                                                {
                                                    parseTruncationError = "Y";
                                                    fieldPassFailResult = "FAIL";
                                                    errorText = "String would be truncated";
                                                    if (truncateStringValuesYN.Equals("Y"))
                                                    {
                                                        if (nonTruncateableColumnList.Contains(outColName))
                                                            v = null;
                                                        else
                                                            v = inColVal.Substring(0, outCol.Length);
                                                    }
                                                }
                                                //Check for Unicode input with non-Unicode target column
                                                if (Regex.IsMatch(inColVal, "[^\x00-\x7F]"))
                                                {
                                                    fieldPassFailResult = "FAIL";
                                                    if (errorText != "") errorText = errorText + " and ";
                                                    errorText = errorText + "Unicode character found for non-unicode target column";
                                                    parseUnicodeError = "Y";
                                                    parseFormatError = "Y";
                                                }
                                                if (columnRegexPatternMap.ContainsKey(outColName))
                                                {
                                                    if (!columnRegexPatternMap[outColName].IsMatch(inColVal))
                                                    {
                                                        fieldPassFailResult = "FAIL";
                                                        if (errorText != "") errorText = errorText + " and ";
                                                        errorText = errorText + "String value failed to match regular expression pattern";
                                                        parseFormatError = "Y";
                                                    }
                                                }
                                                mainOutputBuffer.SetString(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_TEXT:
                                        {
                                            try //try to cast to System.String and add to row with SetString()
                                            {
                                                string v = inColVal;
                                                //Truncate strings longer than allowable size
                                                if (inColVal.Length > outCol.Length)
                                                {
                                                    parseTruncationError = "Y";
                                                    fieldPassFailResult = "FAIL";
                                                    errorText = "String would be truncated";
                                                    if (truncateStringValuesYN.Equals("Y"))
                                                        if (truncateStringValuesYN.Equals("Y"))
                                                        {
                                                            if (nonTruncateableColumnList.Contains(outColName))
                                                                v = null;
                                                            else
                                                                v = inColVal.Substring(0, outCol.Length);
                                                        }
                                                }
                                                //Check for Unicode input with non-Unicode target column
                                                if (Regex.IsMatch(inColVal, "[^\x00-\x7F]"))
                                                {
                                                    fieldPassFailResult = "FAIL";
                                                    if (errorText != "") errorText = errorText + " and ";
                                                    errorText = errorText + "Unicode character found for non-unicode target column";
                                                    parseUnicodeError = "Y";
                                                    parseFormatError = "Y";
                                                }
                                                if (columnRegexPatternMap.ContainsKey(outColName))
                                                {
                                                    if (!columnRegexPatternMap[outColName].IsMatch(inColVal))
                                                    {
                                                        fieldPassFailResult = "FAIL";
                                                        if (errorText != "") errorText = errorText + " and ";
                                                        errorText = errorText + "String value failed to match regular expression pattern";
                                                        parseFormatError = "Y";
                                                    }
                                                }
                                                mainOutputBuffer.SetString(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_UI1:
                                        {
                                            try //try to cast to System.Byte and add to row with SetByte()
                                            {
                                                System.Byte v;
                                                v = System.Byte.Parse(inColVal);
                                                mainOutputBuffer.SetByte(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_UI2:
                                        {
                                            try //try to cast to System.UInt16 and add to row with SetUInt16()
                                            {
                                                System.UInt16 v;
                                                v = System.UInt16.Parse(inColVal);
                                                mainOutputBuffer.SetUInt16(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_UI4:
                                        {
                                            try //try to cast to System.UInt32 and add to row with SetUInt32()
                                            {
                                                System.UInt32 v;
                                                v = System.UInt32.Parse(inColVal);
                                                mainOutputBuffer.SetUInt32(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_UI8:
                                        {
                                            try //try to cast to System.UInt64 and add to row with SetUInt64()
                                            {
                                                System.UInt64 v;
                                                v = System.UInt64.Parse(inColVal);
                                                mainOutputBuffer.SetUInt64(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                    case DataType.DT_WSTR:
                                        {
                                            try //try to cast to System.String and add to row with SetString()
                                            {
                                                string v = inColVal;
                                                //Truncate strings longer than allowable size
                                                if (inColVal.Length > outCol.Length)
                                                {
                                                    parseTruncationError = "Y";
                                                    fieldPassFailResult = "FAIL";
                                                    errorText = "String would be truncated";
                                                    if (truncateStringValuesYN.Equals("Y"))
                                                    {
                                                        if (nonTruncateableColumnList.Contains(outColName))
                                                            v = null;
                                                        else
                                                            v = inColVal.Substring(0, outCol.Length);
                                                    }
                                                }
                                                if (columnRegexPatternMap.ContainsKey(outColName))
                                                {
                                                    if (!columnRegexPatternMap[outColName].IsMatch(inColVal))
                                                    {
                                                        fieldPassFailResult = "FAIL";
                                                        if (errorText != "") errorText = errorText + " and ";
                                                        errorText = errorText + "String value failed to match regular expression pattern";
                                                        parseFormatError = "Y";
                                                    }
                                                }
                                                mainOutputBuffer.SetString(outColPos, v);
                                            }
                                            catch (Exception ex)
                                            {
                                                //handleerrors
                                                parseDataTypeError = "Y";
                                                errorText = "Unable to convert to target data type [" + ex.Message + "]";
                                                mainOutputBuffer.SetNull(outColPos);
                                                fieldPassFailResult = "FAIL";
                                            }
                                            break;
                                        }
                                        #endregion
                                }
                            }
                        }
                        totalFieldsParsed++; //Increment the count of fields parsed
                        //Write a field-level log entry:
                        AddFieldLevelParseLog(-1, fileFullPath, curLineText, curline, outColPos, outColName, outColTypeName, outColNullable, inColVal, fieldPassFailResult, parseTruncationError, parseNullabilityError, parseDataTypeError, parseFieldCountError, parseFormatError, parseOtherError, errorText);
                    } //End of processing where the expected column was found in the input recordset
                    else //The expected column was not found in the input recordset.
                    {
                        //It might be the column the user has chosen to hold the file name (account for case senstivity here)
                        if (columnNamesCaseSensitive == "Y" && outColName == fileNameOutputColumn || columnNamesCaseSensitive != "Y" && outColName.ToUpper() == fileNameOutputColumn.ToUpper())
                        {
                            mainOutputBuffer.SetString(outColPos, fileFullPath);
                        }
                        //It might be the column the user has chosen to hold the text of the input line (account for case senstivity here)
                        else if (columnNamesCaseSensitive == "Y" && outColName == recordTextOutputColumn || columnNamesCaseSensitive != "Y" && outColName.ToUpper() == recordTextOutputColumn.ToUpper())
                        {
                            mainOutputBuffer.SetString(outColPos, curLineText.Substring(0, Math.Min(4000, curLineText.Length)));
                        }
                        else //If it's not the file name or record text column, it truly is missing...It's actually a column missing from the input recordset
                        {
                            //An exception would have been thrown by now if allowMissingColumnsYN was "N" or the column is in the mandatory column list
                            //So just add a NULL:
                            fieldPassFailResult = "FAIL";
                            parseFieldCountError = "Y";
                            mainOutputBuffer.SetNull(outColPos);
                            //Uncomment the line below if writing a field-level "missing input field" log entry for every record:
                            //  AddFieldLevelParseLog(-1, fileFullPath, curLineText, curline, outColPos, outColName, outColTypeName, outColNullable, inColVal, fieldPassFailResult, "N", "N", "N", "Y", "N", "N", "Field missing from input record set.");
                        }
                    }
                    //Perform post-parse error handling at the field level:
                    if (fieldPassFailResult == "FAIL")
                    {
                        failedFields = failedFields + outColName + ",";
                        totalFieldErrors++;
                        if (parseTruncationError == "Y")
                        {
                            totalTruncationErrors++;
                            if (truncateStringValuesYN != "Y" || nonTruncateableColumnList.Contains(outColName))
                                allFieldsParsedOK = false;
                        }
                        if (parseNullabilityError == "Y")
                        {
                            totalNullabilityErrors++;
                            if (notNullColumnList.Contains(outColName))
                                allFieldsParsedOK = false;
                        }
                        if (parseDataTypeError == "Y")
                        {
                            totalDataTypeErrors++;
                            if (parseDateYearError != "Y" || fixDateValuesYN != "Y") //Allow a data type error to slide if it's also a bad-year and fixing dates is allowable
                                allFieldsParsedOK = false;
                        }
                        if (parseFieldCountError == "Y")
                            totalFieldCountErrors++;
                        if (parseFormatError == "Y" || parseUnicodeError == "Y")
                            totalFormatErrors++;
                        if (parseDateYearError == "Y" && fixDateValuesYN != "Y")
                            allFieldsParsedOK = false;
                        if (parseOtherError == "Y")
                            totalOtherErrors++;
                    } //End of post-parse error handling at the field level
                }

                //Increment the count of lines parsed
                totalLinesParsed++;
                //Check to see if a parsing exception has been caught:
                if (!allFieldsParsedOK)
                {
                    mainOutputBuffer.RemoveRow(); //Get rid of the output buffer
                    totalLineErrors++; ; //increment error line counter
                    if (totalLineErrors <= maxErrorsToIgnore || maxErrorsToIgnore == -1)
                    {
                        AddRecordLevelParsingError(curLineText, workdayIDValue, lookupValueValue, additionalDataValue, "", failedFields.Substring(0, Math.Min(failedFields.Length, 255)), "The following columns failed to parse: " + failedFields.Substring(0, failedFields.Length - 1));
                    }
                    if (totalLineErrors > maxErrorsToIgnore && maxErrorsToIgnore != -1)
                    {
                        AddRecordLevelParsingError(curLineText, workdayIDValue, lookupValueValue, additionalDataValue, "", failedFields.Substring(0, Math.Min(failedFields.Length, 255)), "The following columns failed to parse: " + failedFields.Substring(0, failedFields.Length - 1));
                        bool cancel = true;
                        ComponentMetaData.FireError(-1, "Custom Flat File Parser", "Maximum Number of Error Lines to Ignore (" + maxErrorsToIgnore.ToString() + ") exceeded in file \"" + fileFullPath + "\".", "", 0, out cancel);
                        parser.ReadToEnd(); //Don't bother reading the rest of the input records.
                    }
                }
                //Create a new output record buffer:
                mainOutputBuffer.NextRow();
            }
        }
        parser.Close(); //Release the file.

    }


    public override void InputConfigurationParameter_ProcessInput(InputConfigurationParameterBuffer Buffer)
    {
        bool alreadyProcessedInput = false; //Only actually process one record.

        //Process the input variables from the FIRST ROW ENCOUNTERED ONLY!!!
        // (user can pipe in through a SQL query or other means, but only the first file encountered will be parsed)
        while (Buffer.NextRow())
        {
            if (!alreadyProcessedInput)
            {
                InputConfigurationParameter_ProcessInputRow(Buffer);
                alreadyProcessedInput = true;
            }
        }

        //After the last record in the last buffer segment is reached, 
        if (Buffer.EndOfRowset())
        {
            //Check value of readyToParse before actually parsing file.  It could be set to false if
            //the headers were provided as an input string (instead of being picked up from a header line in the file)
            //but there were issues with the headers (e.g. a missing mandatory field, missing field where not allowed, etc.)
            if (readyToParse)
                ParseFlatFile();
            //Log a file-level entry with the results of the parsing (if any was performed)
            AddFileLevelParseLog();
        }

    }

    //Read input records.  By design, the script should only get one input 
    //record, which it only needs so that the data in the Derived Column that holds
    //parameters can be retrieved.  However, it should be noted that if Input0 gets multiple 
    //rows ONLY THE FIRST ROW will be used.   
    public override void InputConfigurationParameter_ProcessInputRow(InputConfigurationParameterBuffer Row)
    {
        //Set variables to the values in the input row (or defaults where the corresponding input column "_IsNull" value is true)
        fileLocation = !Row.FileLocation_IsNull ? Row.FileLocation : "";
        fileName = !(Row.FileName_IsNull) ? Row.FileName : "";
        headerLineCount = !(Row.HeaderLineCount_IsNull) ? Row.HeaderLineCount : 1;
        columnHeaderLine = !(Row.ColumnHeaderLine_IsNull) ? Row.ColumnHeaderLine : 1;
        columnHeaderList = !(Row.ColumnHeaderList_IsNull) ? Row.ColumnHeaderList : "";
        maxLinesToProcess = !(Row.MaxLinesToProcess_IsNull) ? Row.MaxLinesToProcess : -1;
        maxErrorsToIgnore = !(Row.MaxErrorsToIgnore_IsNull) ? Row.MaxErrorsToIgnore : 100;
        maxEventsToLog = !(Row.MaxEventsToLog_IsNull) ? Row.MaxEventsToLog : 100;
        parseLogLevel = !(Row.ParseLogLevelAEAllorErrorsOnly_IsNull) ? Row.ParseLogLevelAEAllorErrorsOnly : "E";
        allowExtraColumnsYN = !(Row.AllowExtraColumnsYN_IsNull) ? Row.AllowExtraColumnsYN : "";
        allowMissingColumnsYN = !(Row.AllowMissingColumnsYN_IsNull) ? Row.AllowMissingColumnsYN : "";
        columnNamesCaseSensitive = !(Row.ColumnNamesCaseSensitiveYN_IsNull) ? Row.ColumnNamesCaseSensitiveYN : "N";
        truncateStringValuesYN = !(Row.TruncateStringValuesYN_IsNull) ? Row.TruncateStringValuesYN : "Y";
        stripUnicodeFromNonUnicodeYN = !(Row.StripUnicodefromNonUnicodeYN_IsNull) ? Row.StripUnicodefromNonUnicodeYN : "N";
        convertThreeCharTzsToOffsetYN = !(Row.ConvertThreeCharTimezonedtoOffsetsYN_IsNull) ? Row.ConvertThreeCharTimezonedtoOffsetsYN : "N";
        fixDateValuesYN = !(Row.FixDateValuesYN_IsNull) ? Row.FixDateValuesYN : "Y";
        earliestAllowableYear = !(Row.EarliestAllowableYear_IsNull) ? Row.EarliestAllowableYear : 0;
        allowableDateFormats = !(Row.AllowableDateFormats_IsNull) ? Row.AllowableDateFormats : ":";
        convertToTimeZone = !(Row.ConverttoTimeZone_IsNull) ? Row.ConverttoTimeZone : "";
        workdayIDColumn = !(Row.WorkdayIDColumn_IsNull) ? Row.WorkdayIDColumn : "";
        lookupValueColumn = !(Row.LookupValueColumn_IsNull) ? Row.LookupValueColumn : "";
        additionalDataColumn = !(Row.AdditionalDataColumn_IsNull) ? Row.AdditionalDataColumn : "";
        notNullColumns = !(Row.NotNullColumns_IsNull) ? Row.NotNullColumns : "";
        mandatoryColumns = !(Row.MandatoryColumns_IsNull) ? Row.MandatoryColumns : "";
        nonTruncateableColumns = !(Row.NonTruncateableColumns_IsNull) ? Row.NonTruncateableColumns : "";
        columnRegexPatterns = !(Row.ColumnRegexPatterns_IsNull) ? Row.ColumnRegexPatterns : "";
        fileNameOutputColumn = !(Row.FileNameOutputColumn_IsNull) ? Row.FileNameOutputColumn : "";
        recordTextOutputColumn = !(Row.RecordTextOutputColumn_IsNull) ? Row.RecordTextOutputColumn : "";

        failOnExtraColumnYN = !(Row.FailOnExtraColumnYN_IsNull) ? Row.FailOnExtraColumnYN : "N";
        failOnMissingColumnYN = !(Row.FailOnMissingColumnYN_IsNull) ? Row.FailOnMissingColumnYN : "N";
        failOnMissingMandatoryColumnInHeaderYN = !(Row.FailOnMissingMandatoryColumnInHeaderYN_IsNull) ? Row.FailOnMissingMandatoryColumnInHeaderYN : "N";
        failOnMissingMandatoryColumnInLineYN = !(Row.FailOnMissingMandatoryColumnInLineYN_IsNull) ? Row.FailOnMissingMandatoryColumnInLineYN : "N";

        //Only make column names case sensitive if input variable ColumnNamesCaseSensitiveYN is "Y"
        if (columnNamesCaseSensitive == "Y")
        {
            //set the comparer to Ordinal (i.e. case sensitive)
            this.colCaseSensitivity = StringComparer.Ordinal;

            //Re-add the IDTSOutputColumn100 objects to a new case-sensitive version of mainOutputColumnsByName 
            Dictionary<string, IDTSOutputColumn100> tmpMainOutputColumnsByName = new Dictionary<string, IDTSOutputColumn100>();
            foreach (string k in mainOutputColumnsByName.Keys)
            {
                tmpMainOutputColumnsByName.Add(k, mainOutputColumnsByName[k]);
            }
            mainOutputColumnsByName = tmpMainOutputColumnsByName;
            //Re-create the other column name Dictionary and HashSet objects as case-sensitive versions
            flatfileColumnsByName = new Dictionary<string, int>();
            columnRegexPatternMap = new Dictionary<string, Regex>();
        }

        //Process input variables that are lists (not-null columns, mandatory columns, date formats, and regex patterns for columns)
        mandatoryColumnList.Clear();
        if (mandatoryColumns != "")
            mandatoryColumnList = new HashSet<string>(mandatoryColumns.Split(','), colCaseSensitivity);
        notNullColumnList.Clear();
        if (notNullColumns != "")
            notNullColumnList = new HashSet<string>(this.notNullColumns.Split(','), colCaseSensitivity);
        nonTruncateableColumnList.Clear();
        if (nonTruncateableColumns != "")
            nonTruncateableColumnList = new HashSet<string>(this.nonTruncateableColumns.Split(','), colCaseSensitivity);
        if (allowableDateFormats != "")
            dateFormatArray = Regex.Split(allowableDateFormats, @"(?<!($|[^\\])(\\\\)*?\\)\,");
        columnRegexPatternMap.Clear();
        if (columnRegexPatterns != "")
        {
            //Split the string into substrings on the semi-colon
            foreach (string colpat in Regex.Split(columnRegexPatterns, @"(?<!($|[^\\])(\\\\)*?\\)\;"))
            {
                //Split the column:pattern entry into individual parts
                string[] splitpat = Regex.Split(colpat, @"(?<!($|[^\\])(\\\\)*?\\)\:");
                //If it looks like a valid entry, attempt to add it to the map
                if (splitpat.Length == 2 && splitpat[0] != "" && splitpat[1] != "")
                {
                    try
                    {
                        //Try to create a new Regex object
                        Regex newpattern = new Regex(splitpat[1]);
                        columnRegexPatternMap.Add(splitpat[0], newpattern);
                    }
                    catch
                    {
                        //Do nothing - fail gently if user formats the ColumnRegexPatterns input variable incorrectly
                    }
                }
            }

        }

        //Process the column header list (if one is given)
        if (!columnHeaderList.Trim().Equals(""))
        {
            //Set up some variables for column presence checking
            bool mandatoryHeadersOK = true; //assume all mandatory columns are found
            bool specialHeadersOK = true;   //assume Workday ID, Lookup Value and Additional Data columns are found (if requested)
            bool expectedHeadersOK = true;  //assume all expected columns are found
            bool extraHeadersOK = true;     //assume no extra columns are found
            bool duplicateHeadersOK = true; //assume no duplicate headers are found

            foreach (string colname in columnHeaderList.Trim().Split(','))
            {
                if (flatfileColumnsByName.ContainsKey(colname))
                {
                    AddFieldLevelParseLog(-1, fileFullPath, columnHeaderList, -1, -1, colname, "N/A", "N/A", "", "FAIL", "N", "N", "N", "Y", "N", "N", "Duplicate column name found in input recordset.");
                    duplicateHeadersOK = false;
                }
                else
                {
                    flatfileColumnsByName.Add(colname, flatfileColumnsByName.Count);
                    flatfileColumnsByPosition.Add(flatfileColumnsByPosition.Count, colname);
                }
            }

            //Check against the list of columns in mandatoryColumnList
            foreach (string colname in mandatoryColumnList)
            {
                if (!flatfileColumnsByName.ContainsKey(colname))
                {
                    totalFieldCountErrors++;
                    mandatoryHeadersOK = false;
                    AddFieldLevelParseLog(-1, fileFullPath, "N/A", -1, -1, colname, "N/A", "N/A", "", "FAIL", "N", "N", "N", "Y", "N", "N", "Mandatory column missing from input recordset.");
                }
            }
            if (workdayIDColumn != "" && !flatfileColumnsByName.ContainsKey(workdayIDColumn))
            {
                totalFieldCountErrors++;
                specialHeadersOK = false;
                AddFieldLevelParseLog(-1, fileFullPath, "N/A", -1, -1, workdayIDColumn, "N/A", "N/A", "", "FAIL", "N", "N", "N", "Y", "N", "N", "Workday ID column requested but missing from input recordset.");
            }
            if (lookupValueColumn != "" && !flatfileColumnsByName.ContainsKey(lookupValueColumn))
            {
                totalFieldCountErrors++;
                specialHeadersOK = false;
                AddFieldLevelParseLog(-1, fileFullPath, "N/A", -1, -1, lookupValueColumn, "N/A", "N/A", "", "FAIL", "N", "N", "N", "Y", "N", "N", "Lookup Value column requested but missing from input recordset.");
            }
            if (additionalDataColumn != "" && !flatfileColumnsByName.ContainsKey(additionalDataColumn))
            {
                totalFieldCountErrors++;
                specialHeadersOK = false;
                AddFieldLevelParseLog(-1, fileFullPath, "N/A", -1, -1, additionalDataColumn, "N/A", "N/A", "", "FAIL", "N", "N", "N", "Y", "N", "N", "Additional Data column requested but missing from input recordset.");
            }
            //Check expected output column list and see if they are on the input
            foreach (string colname in mainOutputColumnsByName.Keys)
            {
                if (!flatfileColumnsByName.ContainsKey(colname))
                {
                    totalFieldCountErrors++;
                    expectedHeadersOK = false;
                    AddFieldLevelParseLog(-1, fileFullPath, "N/A", -1, -1, colname, "N/A", "N/A", "", "FAIL", "N", "N", "N", "Y", "N", "N", "Column on output recordset but missing from input recordset.");
                }
            }
            //Check actual columns in file to see if all are on the output
            foreach (string colname in flatfileColumnsByName.Keys)
            {
                if (!mainOutputColumnsByName.ContainsKey(colname))
                {
                    totalFieldCountErrors++;
                    extraHeadersOK = false;
                    AddFieldLevelParseLog(-1, fileFullPath, "N/A", -1, -1, colname, "N/A", "N/A", "", "FAIL", "N", "N", "N", "Y", "N", "N", "Extra column found on input recordset.");
                }
            }

            //If a mandatory column was missing, then fail package or quit
            if (!mandatoryHeadersOK)
            {
                if (failOnMissingMandatoryColumnInHeaderYN == "Y")
                {
                    bool t = true;
                    this.ComponentMetaData.FireError(-1, ComponentMetaData.Name, "Mandatory Column Missing from Input File", null, 0, out t);
                }
                return;
            }
            //If Workday ID, Lookup Value or Additional Data columns are missing (if requested), then just quit.  Don't fail package.
            if (!specialHeadersOK)
                return;
            //If expected columns are missing and "Allow Missing Columns" is not "Y" then fail package or quit
            if (!expectedHeadersOK && allowMissingColumnsYN != "Y")
            {
                if (failOnMissingColumnYN == "Y")
                {
                    bool t = true;
                    this.ComponentMetaData.FireError(-1, ComponentMetaData.Name, "Expected Column Missing from Input File", null, 0, out t);
                }
                return;
            }
            //If an extra column was found and "Allow Extra Columns" is not "Y" then fail package or quit
            if (!extraHeadersOK && allowExtraColumnsYN != "Y")
            {
                if (failOnExtraColumnYN == "Y")
                {
                    bool t = true;
                    this.ComponentMetaData.FireError(-1, ComponentMetaData.Name, "Unexpected Column Found in Input File", null, 0, out t);
                }
                return;
            };
            //If a duplicate column was found then just quit
            if (!duplicateHeadersOK)
                return;


            //Process the desired convert-to timezone:
            if (convertToTimeZone != "")
            {
                //Attempt to create a new TimeZoneInfo object based on the string the user passed in
                //The convertToTimeZoneInfo object is already instantiated at declaration time as 
                //TimeZoneInfo.Local()
                //  NOTE: If this fails, the component will throw an exception.  This is the proper
                //  action, as it would not be good to load data at this point.
                convertToTimeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById(convertToTimeZone);
            }
        }

        readyToParse = true; //If we reached this point, the parser may read the file.

    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class InputConfigurationParameterBuffer: ScriptBuffer

{
    public InputConfigurationParameterBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String FileLocation
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool FileLocation_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String FileName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool FileName_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Int32 HeaderLineCount
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[2]);
        }
    }
    public bool HeaderLineCount_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Int32 ColumnHeaderLine
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[3]);
        }
    }
    public bool ColumnHeaderLine_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String ColumnHeaderList
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool ColumnHeaderList_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public Int32 MaxLinesToProcess
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[5]);
        }
    }
    public bool MaxLinesToProcess_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public Int32 MaxErrorsToIgnore
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[6]);
        }
    }
    public bool MaxErrorsToIgnore_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public Int32 MaxEventsToLog
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[7]);
        }
    }
    public bool MaxEventsToLog_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    public String ParseLogLevelAEAllorErrorsOnly
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[8]);
        }
    }
    public bool ParseLogLevelAEAllorErrorsOnly_IsNull
    {
        get
        {
            return IsNull(8);
        }
    }

    public String AllowMissingColumnsYN
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[9]);
        }
    }
    public bool AllowMissingColumnsYN_IsNull
    {
        get
        {
            return IsNull(9);
        }
    }

    public String AllowExtraColumnsYN
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[10]);
        }
    }
    public bool AllowExtraColumnsYN_IsNull
    {
        get
        {
            return IsNull(10);
        }
    }

    public String TruncateStringValuesYN
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[11]);
        }
    }
    public bool TruncateStringValuesYN_IsNull
    {
        get
        {
            return IsNull(11);
        }
    }

    public String FixDateValuesYN
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[12]);
        }
    }
    public bool FixDateValuesYN_IsNull
    {
        get
        {
            return IsNull(12);
        }
    }

    public String AllowableDateFormats
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[13]);
        }
    }
    public bool AllowableDateFormats_IsNull
    {
        get
        {
            return IsNull(13);
        }
    }

    public String ConverttoTimeZone
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[14]);
        }
    }
    public bool ConverttoTimeZone_IsNull
    {
        get
        {
            return IsNull(14);
        }
    }

    public String WorkdayIDColumn
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[15]);
        }
    }
    public bool WorkdayIDColumn_IsNull
    {
        get
        {
            return IsNull(15);
        }
    }

    public String LookupValueColumn
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[16]);
        }
    }
    public bool LookupValueColumn_IsNull
    {
        get
        {
            return IsNull(16);
        }
    }

    public String AdditionalDataColumn
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[17]);
        }
    }
    public bool AdditionalDataColumn_IsNull
    {
        get
        {
            return IsNull(17);
        }
    }

    public String NotNullColumns
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[18]);
        }
    }
    public bool NotNullColumns_IsNull
    {
        get
        {
            return IsNull(18);
        }
    }

    public String MandatoryColumns
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[19]);
        }
    }
    public bool MandatoryColumns_IsNull
    {
        get
        {
            return IsNull(19);
        }
    }

    public String ColumnRegexPatterns
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[20]);
        }
    }
    public bool ColumnRegexPatterns_IsNull
    {
        get
        {
            return IsNull(20);
        }
    }

    public String FileNameOutputColumn
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[21]);
        }
    }
    public bool FileNameOutputColumn_IsNull
    {
        get
        {
            return IsNull(21);
        }
    }

    public String RecordTextOutputColumn
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[22]);
        }
    }
    public bool RecordTextOutputColumn_IsNull
    {
        get
        {
            return IsNull(22);
        }
    }

    public Int32 EarliestAllowableYear
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[23]);
        }
    }
    public bool EarliestAllowableYear_IsNull
    {
        get
        {
            return IsNull(23);
        }
    }

    public String NonTruncateableColumns
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[24]);
        }
    }
    public bool NonTruncateableColumns_IsNull
    {
        get
        {
            return IsNull(24);
        }
    }

    public String ColumnNamesCaseSensitiveYN
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[25]);
        }
    }
    public bool ColumnNamesCaseSensitiveYN_IsNull
    {
        get
        {
            return IsNull(25);
        }
    }

    public String FailOnExtraColumnYN
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[26]);
        }
    }
    public bool FailOnExtraColumnYN_IsNull
    {
        get
        {
            return IsNull(26);
        }
    }

    public String FailOnMissingColumnYN
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[27]);
        }
    }
    public bool FailOnMissingColumnYN_IsNull
    {
        get
        {
            return IsNull(27);
        }
    }

    public String FailOnMissingMandatoryColumnInHeaderYN
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[28]);
        }
    }
    public bool FailOnMissingMandatoryColumnInHeaderYN_IsNull
    {
        get
        {
            return IsNull(28);
        }
    }

    public String FailOnMissingMandatoryColumnInLineYN
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[29]);
        }
    }
    public bool FailOnMissingMandatoryColumnInLineYN_IsNull
    {
        get
        {
            return IsNull(29);
        }
    }

    public String StripUnicodefromNonUnicodeYN
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[30]);
        }
    }
    public bool StripUnicodefromNonUnicodeYN_IsNull
    {
        get
        {
            return IsNull(30);
        }
    }

    public String ConvertThreeCharTimezonedtoOffsetsYN
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[31]);
        }
    }
    public bool ConvertThreeCharTimezonedtoOffsetsYN_IsNull
    {
        get
        {
            return IsNull(31);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class OutputFileDataBuffer: ScriptBuffer

{
    public OutputFileDataBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String appointmentextid
    {
        set
        {
            this[0] = value;
        }
    }
    public bool appointmentextid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 calendarownerintegrationid
    {
        set
        {
            this[1] = value;
        }
    }
    public bool calendarownerintegrationid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String calendarowneruserid
    {
        set
        {
            this[2] = value;
        }
    }
    public bool calendarowneruserid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String calendarownerfirstname
    {
        set
        {
            this[3] = value;
        }
    }
    public bool calendarownerfirstname_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String calendarownerlastname
    {
        set
        {
            this[4] = value;
        }
    }
    public bool calendarownerlastname_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String calendarownerinstitutionalemail
    {
        set
        {
            this[5] = value;
        }
    }
    public bool calendarownerinstitutionalemail_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String participantintegrationid
    {
        set
        {
            this[6] = value;
        }
    }
    public bool participantintegrationid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String participantuserid
    {
        set
        {
            this[7] = value;
        }
    }
    public bool participantuserid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String participantfirstname
    {
        set
        {
            this[8] = value;
        }
    }
    public bool participantfirstname_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String participantlastname
    {
        set
        {
            this[9] = value;
        }
    }
    public bool participantlastname_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String participantinstitutionalemail
    {
        set
        {
            this[10] = value;
        }
    }
    public bool participantinstitutionalemail_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String participantalternateemail
    {
        set
        {
            this[11] = value;
        }
    }
    public bool participantalternateemail_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String appointmenttypereason
    {
        set
        {
            this[12] = value;
        }
    }
    public bool appointmenttypereason_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String appointmentstartdate
    {
        set
        {
            this[13] = value;
        }
    }
    public bool appointmentstartdate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String appointmentenddate
    {
        set
        {
            this[14] = value;
        }
    }
    public bool appointmentenddate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String appointmentlocation
    {
        set
        {
            this[15] = value;
        }
    }
    public bool appointmentlocation_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String appointmentdescription
    {
        set
        {
            this[16] = value;
        }
    }
    public bool appointmentdescription_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String appointmentcomment
    {
        set
        {
            this[17] = value;
        }
    }
    public bool appointmentcomment_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(17);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String canceleddate
    {
        set
        {
            this[18] = value;
        }
    }
    public bool canceleddate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(18);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String coursesectionid
    {
        set
        {
            this[19] = value;
        }
    }
    public bool coursesectionid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(19);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String noshow
    {
        set
        {
            this[20] = value;
        }
    }
    public bool noshow_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(20);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String appointmenttype
    {
        set
        {
            this[21] = value;
        }
    }
    public bool appointmenttype_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(21);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime arrivaltime
    {
        set
        {
            this[22] = value;
        }
    }
    public bool arrivaltime_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(22);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 waittime
    {
        set
        {
            this[23] = value;
        }
    }
    public bool waittime_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(23);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String actualstartdate
    {
        set
        {
            this[24] = value;
        }
    }
    public bool actualstartdate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(24);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String actualenddate
    {
        set
        {
            this[25] = value;
        }
    }
    public bool actualenddate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(25);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 actualduration
    {
        set
        {
            this[26] = value;
        }
    }
    public bool actualduration_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(26);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String scheduledduration
    {
        set
        {
            this[27] = value;
        }
    }
    public bool scheduledduration_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(27);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String scheduled
    {
        set
        {
            this[28] = value;
        }
    }
    public bool scheduled_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(28);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String waitingroomstatus
    {
        set
        {
            this[29] = value;
        }
    }
    public bool waitingroomstatus_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(29);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String activities
    {
        set
        {
            this[30] = value;
        }
    }
    public bool activities_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(30);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String InputFileName
    {
        set
        {
            this[31] = value;
        }
    }
    public bool InputFileName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(31);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String InputLineText
    {
        set
        {
            this[32] = value;
        }
    }
    public bool InputLineText_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(32);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class OutputRecordLevelParseErrorsBuffer: ScriptBuffer

{
    public OutputRecordLevelParseErrorsBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String FileName
    {
        set
        {
            this[0] = value;
        }
    }
    public bool FileName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FailedLineText
    {
        set
        {
            this[1] = value;
        }
    }
    public bool FailedLineText_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String LookupWorkdayID
    {
        set
        {
            this[2] = value;
        }
    }
    public bool LookupWorkdayID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String LookupValue
    {
        set
        {
            this[3] = value;
        }
    }
    public bool LookupValue_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String AdditionalData
    {
        set
        {
            this[4] = value;
        }
    }
    public bool AdditionalData_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ErrorCode
    {
        set
        {
            this[5] = value;
        }
    }
    public bool ErrorCode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ErrorColumn
    {
        set
        {
            this[6] = value;
        }
    }
    public bool ErrorColumn_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Message
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Message_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class OutputFieldLevelParseLoggingBuffer: ScriptBuffer

{
    public OutputFieldLevelParseLoggingBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 ParseControlID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ParseControlID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ParseSourceFile
    {
        set
        {
            this[1] = value;
        }
    }
    public bool ParseSourceFile_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ParseSourceLineText
    {
        set
        {
            this[2] = value;
        }
    }
    public bool ParseSourceLineText_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 ParseSourceLineOffset
    {
        set
        {
            this[3] = value;
        }
    }
    public bool ParseSourceLineOffset_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 TargetFieldNumber
    {
        set
        {
            this[4] = value;
        }
    }
    public bool TargetFieldNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TargetFieldName
    {
        set
        {
            this[5] = value;
        }
    }
    public bool TargetFieldName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TargetFieldDataType
    {
        set
        {
            this[6] = value;
        }
    }
    public bool TargetFieldDataType_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TargetFieldNullable
    {
        set
        {
            this[7] = value;
        }
    }
    public bool TargetFieldNullable_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ParseFieldText
    {
        set
        {
            this[8] = value;
        }
    }
    public bool ParseFieldText_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ParsePassFailResult
    {
        set
        {
            this[9] = value;
        }
    }
    public bool ParsePassFailResult_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ParseTruncationError
    {
        set
        {
            this[10] = value;
        }
    }
    public bool ParseTruncationError_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ParseNullabilityError
    {
        set
        {
            this[11] = value;
        }
    }
    public bool ParseNullabilityError_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ParseDataTypeError
    {
        set
        {
            this[12] = value;
        }
    }
    public bool ParseDataTypeError_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ParseFieldCountError
    {
        set
        {
            this[13] = value;
        }
    }
    public bool ParseFieldCountError_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ParseFormatError
    {
        set
        {
            this[14] = value;
        }
    }
    public bool ParseFormatError_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ParseOtherError
    {
        set
        {
            this[15] = value;
        }
    }
    public bool ParseOtherError_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ParseErrorMessage
    {
        set
        {
            this[16] = value;
        }
    }
    public bool ParseErrorMessage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class OutputFileLevelParseLoggingBuffer: ScriptBuffer

{
    public OutputFileLevelParseLoggingBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String ParseSourceFile
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ParseSourceFile_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 TotalLinesParsed
    {
        set
        {
            this[1] = value;
        }
    }
    public bool TotalLinesParsed_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 TotalLinesPassed
    {
        set
        {
            this[2] = value;
        }
    }
    public bool TotalLinesPassed_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 TotalLinesFailed
    {
        set
        {
            this[3] = value;
        }
    }
    public bool TotalLinesFailed_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 TotalFieldsParsed
    {
        set
        {
            this[4] = value;
        }
    }
    public bool TotalFieldsParsed_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 TotalFieldsPassed
    {
        set
        {
            this[5] = value;
        }
    }
    public bool TotalFieldsPassed_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 TotalFieldsFailed
    {
        set
        {
            this[6] = value;
        }
    }
    public bool TotalFieldsFailed_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 TotalTruncationErrors
    {
        set
        {
            this[7] = value;
        }
    }
    public bool TotalTruncationErrors_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 TotalNullabilityErrors
    {
        set
        {
            this[8] = value;
        }
    }
    public bool TotalNullabilityErrors_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 TotalDataTypeErrors
    {
        set
        {
            this[9] = value;
        }
    }
    public bool TotalDataTypeErrors_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 TotalFieldCountErrors
    {
        set
        {
            this[10] = value;
        }
    }
    public bool TotalFieldCountErrors_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 TotalFormatErrors
    {
        set
        {
            this[11] = value;
        }
    }
    public bool TotalFormatErrors_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 TotalOtherErrors
    {
        set
        {
            this[12] = value;
        }
    }
    public bool TotalOtherErrors_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public OutputFileDataBuffer OutputFileDataBuffer;

    public OutputRecordLevelParseErrorsBuffer OutputRecordLevelParseErrorsBuffer;

    public OutputFieldLevelParseLoggingBuffer OutputFieldLevelParseLoggingBuffer;

    public OutputFileLevelParseLoggingBuffer OutputFileLevelParseLoggingBuffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input - Configuration Parameter", StringComparison.Ordinal))
        {
            InputConfigurationParameter_ProcessInput(new InputConfigurationParameterBuffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != OutputFileDataBuffer)
        {
            OutputFileDataBuffer.SetEndOfRowset();
            OutputFileDataBuffer = null;
        }

        if (null != OutputRecordLevelParseErrorsBuffer)
        {
            OutputRecordLevelParseErrorsBuffer.SetEndOfRowset();
            OutputRecordLevelParseErrorsBuffer = null;
        }

        if (null != OutputFieldLevelParseLoggingBuffer)
        {
            OutputFieldLevelParseLoggingBuffer.SetEndOfRowset();
            OutputFieldLevelParseLoggingBuffer = null;
        }

        if (null != OutputFileLevelParseLoggingBuffer)
        {
            OutputFileLevelParseLoggingBuffer.SetEndOfRowset();
            OutputFileLevelParseLoggingBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output - File Data"))
            {
                OutputFileDataBuffer = new OutputFileDataBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output - Record Level Parse Errors"))
            {
                OutputRecordLevelParseErrorsBuffer = new OutputRecordLevelParseErrorsBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output - Field Level Parse Logging"))
            {
                OutputFieldLevelParseLoggingBuffer = new OutputFieldLevelParseLoggingBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output - File Level Parse Logging"))
            {
                OutputFileLevelParseLoggingBuffer = new OutputFileLevelParseLoggingBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void InputConfigurationParameter_ProcessInput(InputConfigurationParameterBuffer Buffer)
    {
        while (Buffer.NextRow())
        {
            InputConfigurationParameter_ProcessInputRow(Buffer);
        }
    }

    public virtual void InputConfigurationParameter_ProcessInputRow(InputConfigurationParameterBuffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_6d69f28d6f704f998cd82fa2b2d3f760.Properties.Settings.get_Default():SC_6d69f28d6f704f998cd82fa2b2d3f760.Properties.Sett" +
    "ings")]

namespace SC_6d69f28d6f704f998cd82fa2b2d3f760.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_6d69f28d6f704f998cd82fa2b2d3f760</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_6d69f28d6f704f998cd82fa2b2d3f760</msb:DisplayName>
    <msb:ProjectId>{63134B62-6950-45F6-9C33-AAAB9892D9C8}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_6d69f28d6f704f998cd82fa2b2d3f760.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_6d69f28d6f704f998cd82fa2b2d3f760")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_6d69f28d6f704f998cd82fa2b2d3f760")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_6d69f28d6f704f998cd82fa2b2d3f760.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_6d69f28d6f704f998cd82fa2b2d3f760.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_6d69f28d6f704f998cd82fa2b2d3f760.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_6d69f28d6f704f998cd82fa2b2d3f760.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_6d69f28d6f704f998cd82fa2b2d3f760.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_0E8B4E4774024C04A3081ADD15F981F7.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAOD+tWYAAAAAAAAAAOAAIiALATAAAKYAAAAIAAAAAAAA7sQA
AAAgAAAA4AAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAAAgAQAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJzEAABPAAAAAOAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAAABAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA9KQAAAAgAAAApgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAA4AAAAAYAAACoAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAAABAAACAAAArgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADQ
xAAAAAAAAEgAAAACAAUA6GMAAPxfAAABAAAAAAAAAOTDAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAwDCAAAAAQAAEQIoEAAACgIoEQAACm8SAAAKbxMAAAoK
OIQAAAAGbxQAAAp0FgAAAQsHbxUAAApyAQAAcG8WAAAKLGYHbxcAAApvGAAACgwrOghvFAAACnQQ
AAABDQJ7JAAABAlvGQAACglvGgAACgJ7JQAABAJ7JQAABG8bAAAKCW8ZAAAKbxwAAAoIbx0AAAot
vt41CHUXAAABEwQRBCwHEQRvHgAACtwGbx0AAAo6cf///94UBnUXAAABEwQRBCwHEQRvHgAACtwq
AAABHAAAAgBGAEaMABQAAAAAAgAXAJatABQAAAAAEzAFADIAAAACAAARAgMEBQ4EKO8AAAYWCise
BAaUDgRyAQAAcCgfAAAKMwkCBQaafSYAAAQGF1gKBgMy3ioAABMwBQBcAQAAAAAAAAJ7DAAABHIn
AABwKCAAAAosDw4KcisAAHAoIAAACiwBKgJ7MAAABAJ7CwAABBdYMQoCewsAAAQVLgEqAns/AAAE
b8oAAAYCez8AAAQDb6gAAAYCez8AAAQEb6oAAAYCez8AAAQFFgVvIQAACiCgDwAAKCIAAApvIwAA
Cm+sAAAGAns/AAAEDgRvrgAABgJ7PwAABA4Fb7AAAAYCez8AAAQOBm+yAAAGAns/AAAEDgdvtAAA
BgJ7PwAABA4Ib7YAAAYCez8AAAQOCRYOCW8hAAAKIKAPAAAoIgAACm8jAAAKb7gAAAYCez8AAAQO
Cm+6AAAGAns/AAAEDgtvvAAABgJ7PwAABA4Mb74AAAYCez8AAAQODW/AAAAGAns/AAAEDg5vwgAA
BgJ7PwAABA4Pb8QAAAYCez8AAAQOEG/GAAAGAns/AAAEDhFvyAAABgICezAAAAQXWH0wAAAEKhMw
BQBWAQAAAAAAAAJ7MAAABAJ7CwAABBdYMQoCewsAAAQVLgEqAns+AAAEb6QAAAYCez4AAAQCewMA
AAQWAnsDAAAEbyEAAAogoA8AACgiAAAKbyMAAApvlAAABgJ7PgAABAMWA28hAAAKIEAfAAAoIgAA
Cm8jAAAKb5YAAAYCez4AAAQEFgRvIQAACiD/AAAAKCIAAApvIwAACm+YAAAGAns+AAAEBRYFbyEA
AAog/wAAACgiAAAKbyMAAApvmgAABgJ7PgAABA4EFg4EbyEAAAogQB8AACgiAAAKbyMAAApvnAAA
BgJ7PgAABA4FFg4FbyEAAAog/wAAACgiAAAKbyMAAApvngAABgJ7PgAABA4GFg4GbyEAAAog/wAA
ACgiAAAKbyMAAApvoAAABgJ7PgAABA4HFg4HbyEAAAogiBMAACgiAAAKbyMAAApvogAABgICezAA
AAQXWH0wAAAEKgAAEzAFABIBAAAAAAAAAntAAAAEb+gAAAYCe0AAAAQCewMAAAQWAnsDAAAEbyEA
AAog6AMAACgiAAAKbyMAAApvzgAABgJ7QAAABAJ7MQAABG/QAAAGAntAAAAEAnsxAAAEAnsyAAAE
WW/SAAAGAntAAAAEAnsyAAAEb9QAAAYCe0AAAAQCezMAAARv1gAABgJ7QAAABAJ7MwAABAJ7NAAA
BFlv2AAABgJ7QAAABAJ7NAAABG/aAAAGAntAAAAEAns1AAAEb9wAAAYCe0AAAAQCezYAAARv3gAA
BgJ7QAAABAJ7NwAABG/gAAAGAntAAAAEAns4AAAEb+IAAAYCe0AAAAQCezkAAARv5AAABgJ7QAAA
BAJ7OgAABG/mAAAGKgAAGzASADkiAAADAAARAgJ7AQAABG8kAAAKfQMAAAQCewMAAARyNQAAcCgl
AAAKLRYCAnsDAAAEckEAAHAoJgAACn0DAAAEAgJ7AwAABAJ7AgAABG8kAAAKKCYAAAp9AwAABAJ7
IgAABHJFAABwck0AAHBvJwAACgJ7IgAABHJbAABwcmMAAHBvJwAACgJ7IgAABHJxAABwcmMAAHBv
JwAACgJ7IgAABHJ5AABwcoEAAHBvJwAACgJ7IgAABHKPAABwcoEAAHBvJwAACgJ7IgAABHKXAABw
cp8AAHBvJwAACgJ7IgAABHKtAABwcp8AAHBvJwAACgJ7IgAABHK1AABwcr0AAHBvJwAACgJ7IgAA
BHLLAABwcr0AAHBvJwAACgJ7IgAABHLVAABwct8AAHBvJwAACgJ7IgAABHLtAABwct8AAHBvJwAA
CgJ7IgAABHL1AABwcv0AAHBvJwAACgJ7AwAABHMoAAAKCgYXjTMAAAElFnILAQBwom8pAAAKBhdv
KgAACt4VAgJ7OgAABBdYfToAAAQCKAUAAAZ6Fo0zAAABCxYMFg04cCAAAAYgQB8AAG8rAAAKEwQI
F1gMBm8sAAAKC92XAAAAEwUCAns6AAAEF1h9OgAABAICezIAAAQXWH0yAAAEAhEEcg8BAHByDwEA
cHIPAQBwcg8BAHByDwEAcBuNMwAAASUWchcBAHCiJRcSAigtAAAKoiUYckMBAHCiJRkRBW8uAAAK
oiUaclsBAHCiKC8AAAooBAAABgJ7MgAABAJ7CgAABDEOAnsKAAAEFS4F3eQfAADdvB8AAAgCewYA
AAQ9UAUAAAgCewcAAARApB8AAAJ7CAAABG8kAAAKcl8BAHBvFgAACjmKHwAAFxMGFxMHFxMIFxMJ
FxMKBxMLFhMMOJsAAAARCxEMmhMNAnsnAAAEEQ1vMAAACixPAhUCewMAAAQRBAgVEQ1yDwEAcHIP
AQBwcl8BAHByYQEAcHJrAQBwcmsBAHByawEAcHJvAQBwcmsBAHByawEAcHJzAQBwKAMAAAYWEwor
MAJ7JwAABBENAnsnAAAEbzEAAApvMgAACgJ7KAAABAJ7KAAABG8bAAAKEQ1vHAAAChEMF1gTDBEM
EQuOaT9a////AnsqAAAEbzMAAAoTDitzEg4oNAAAChMPAnsnAAAEEQ9vMAAACi1bAgJ7OAAABBdY
fTgAAAQWEwYCFQJ7AwAABBEECBURD3IPAQBwcg8BAHByXwEAcHJhAQBwcmsBAHByawEAcHJrAQBw
cm8BAHByawEAcHJrAQBwctMBAHAoAwAABhIOKDUAAAothN4OEg7+FgYAABtvHgAACtwCexsAAARy
XwEAcCg2AAAKLHICeycAAAQCexsAAARvMAAACi1fAgJ7OAAABBdYfTgAAAQWEwcCFQJ7AwAABBEE
CBUCexsAAARyDwEAcHIPAQBwcl8BAHByYQEAcHJrAQBwcmsBAHByawEAcHJvAQBwcmsBAHByawEA
cHIxAgBwKAMAAAYCexwAAARyXwEAcCg2AAAKLHICeycAAAQCexwAAARvMAAACi1fAgJ7OAAABBdY
fTgAAAQWEwcCFQJ7AwAABBEECBUCexwAAARyDwEAcHIPAQBwcl8BAHByYQEAcHJrAQBwcmsBAHBy
awEAcHJvAQBwcmsBAHByawEAcHKtAgBwKAMAAAYCex0AAARyXwEAcCg2AAAKLHICeycAAAQCex0A
AARvMAAACi1fAgJ7OAAABBdYfTgAAAQWEwcCFQJ7AwAABBEECBUCex0AAARyDwEAcHIPAQBwcl8B
AHByYQEAcHJrAQBwcmsBAHByawEAcHJvAQBwcmsBAHByawEAcHItAwBwKAMAAAYCeyQAAARvNwAA
Cm84AAAKExA4kQAAABIQKDkAAAoTEQJ7JwAABBERbzAAAAoteRERAnsFAAAEKDYAAAosahERAnsE
AAAEKDYAAAosWwICezgAAAQXWH04AAAEFhMIAhUCewMAAAQRBAgVERFyDwEAcHIPAQBwcl8BAHBy
YQEAcHJrAQBwcmsBAHByawEAcHJvAQBwcmsBAHByawEAcHK0AwBwKAMAAAYSECg6AAAKOmP////e
DhIQ/hYIAAAbbx4AAArcAnsnAAAEbzsAAApvPAAAChMSK3MSEig9AAAKExMCeyQAAAQRE28+AAAK
LVsCAns4AAAEF1h9OAAABBYTCQIVAnsDAAAEEQQIFRETcg8BAHByDwEAcHJfAQBwcmEBAHByawEA
cHJrAQBwcmsBAHBybwEAcHJrAQBwcmsBAHByLgQAcCgDAAAGEhIoPwAACi2E3g4SEv4WCgAAG28e
AAAK3BEGLTYCexEAAARybwEAcCggAAAKLCMXExQCKBEAAAoVAigRAAAKb0AAAApyfAQAcBQWEhRv
QQAACioRBy0BKhEILUgCew4AAARybwEAcCg2AAAKLDYCexAAAARybwEAcCggAAAKLCMXExUCKBEA
AAoVAigRAAAKb0AAAApyzgQAcBQWEhVvQQAACioRCS1IAnsNAAAEcm8BAHAoNgAACiw2AnsPAAAE
cm8BAHAoIAAACiwjFxMWAigRAAAKFQIoEQAACm9AAAAKch4FAHAUFhIWb0EAAAoqEQo6YRoAACpy
XwEAcBMXcl8BAHATGHJfAQBwExkCeycAAAQCexsAAARvMAAACiwrAnsnAAAEAnsbAAAEb0IAAAoH
jmkvFQcCeycAAAQCexsAAARvQgAACpoTFwJ7JwAABAJ7HAAABG8wAAAKLCsCeycAAAQCexwAAARv
QgAACgeOaS8VBwJ7JwAABAJ7HAAABG9CAAAKmhMYAnsnAAAEAnsdAAAEbzAAAAosKwJ7JwAABAJ7
HQAABG9CAAAKB45pLxUHAnsnAAAEAnsdAAAEb0IAAAqaExkCeyYAAARvQwAAChcTGnJfAQBwExsW
Exw4CRgAAAk6FRgAAHJfAQBwEx0CeyUAAAQRHG9EAAAKEx4CeyQAAAQRHm9FAAAKEx9yXwEAcBMg
cl8BAHATIXJrAQBwEyJyawEAcBMjcmsBAHATJHJrAQBwEyVyawEAcBMmcmsBAHATJ3JrAQBwEyhy
awEAcBMpcl8BAHATKnIrAABwEysRH29GAAAKEywSLP4WHgAAAW9HAAAKEyARIHJqBQBwKCUAAAos
IxEgcpoFAHARH29IAAAKEwwSDCgtAAAKcp4FAHAoSQAAChMgESByogUAcCglAAAKLFMRIHKaBQBw
ER9vSgAAChMMEgwoLQAACihLAAAKEyARH29MAAAKLB4RIHILAQBwER9vTAAAChMMEgwoLQAACihL
AAAKEyARIHKeBQBwKCYAAAoTIAJ7KwAABBEeb00AAAosCXLOBQBwEyErB3LgBQBwEyECeycAAAQR
Hm8wAAAKOVUUAAACeycAAAQRHm9CAAAKEy0CeycAAAQRHm9CAAAKB45pPzgBAAACew4AAARyawEA
cCg2AAAKOYUAAABybwEAcBMlcs4EAHATKgJ7JgAABBEcb04AAApyYQEAcBMrAnsqAAAEER5vTQAA
CjmrEwAAAnsSAAAEcm8BAHAoIAAACjmWEwAAcnwEAHATKhcTLgIoEQAAChUCKBEAAApvQAAACnJ8
BABwFBYSLm9BAAAKAnsmAAAEb08AAAoXDThaEwAAAnsQAAAEcm8BAHAoIAAACiwwFxMvAigRAAAK
FQIoEQAACm9AAAAKcs4EAHAUFhIvb0EAAAoCeyYAAARvTwAAChcNAnsqAAAEER5vTQAACjkGEwAA
AnsSAAAEcm8BAHAoIAAACjnxEgAAFxMwAigRAAAKFQIoEQAACm9AAAAKcnwEAHAUFhIwb0EAAAoC
eyYAAARvTwAAChcNOLwSAAAHES2aEx0RHXJfAQBwbxYAAAosOwJ7KwAABBEeb00AAAosGhYTGnJv
AQBwEyMRGxEecgsBAHAoSwAAChMbAnsmAAAEERxvTgAACjhtEgAAER9vRgAAChMsESwfSDBwESwY
WUUUAAAAmgkAAPIJAAAGDAAAXgwAANwAAAA0AQAABRIAAAUSAAAFEgAAhAAAAAUSAAAFEgAAcgcA
AAUSAABCCQAAnw8AAPcPAABPEAAASgoAAKcQAAARLB9AO8EHAAARLB9IO9gIAAA47hEAABEsIJEA
AAAwOhEsIIEAAABZRQcAAABtDAAAthAAAGULAAC8EQAAZQIAAIUDAAA1BAAAESwgkQAAADvRAwAA
OKsRAAARLCCSAAAAO1gGAAARLCAuAQAAWUUDAAAAtQ0AACMKAAAfBQAAOIERAAAAER0oUAAAChMx
AnsmAAAEERwRMW9RAAAK3WMRAAATMnJvAQBwEyRy6gUAcBEyby4AAApyWwEAcChLAAAKEyoCeyYA
AAQRHG9OAAAKcmEBAHATK90pEQAAABEdKFIAAAoTMwJ7JgAABBEcETNvUwAACt0LEQAAEzRybwEA
cBMkcuoFAHARNG8uAAAKclsBAHAoSwAAChMqAnsmAAAEERxvTgAACnJhAQBwEyvd0RAAAAACexYA
AARybwEAcCggAAAKLEgCeyIAAARvVAAAChM2KyASNihVAAAKEzcRHRI3KFYAAAoSNyhXAAAKKFgA
AAoTHRI2KFkAAAot194OEjb+FgsAABtvHgAACtwCey4AAASOLBcRHQJ7LgAABChaAAAKFihbAAAK
EzUrCREdKFwAAAoTNRI1KF0AAAoTNRE1AnsvAAAEKF4AAAoTNQJ7FwAABHJvAQBwbxYAAAosShI1
KF8AAAoCexgAAAQvO3JvAQBwEyRyYQEAcBMrcm8BAHATKXI6BgBwAnwYAAAEKC0AAAooJgAAChMq
AnsmAAAEERxvTgAACitDAnsmAAAEERwSNShfAAAKEjUoYAAAChI1KGEAAAoSNShiAAAKEjUoYwAA
ChI1KGQAAAoSNShlAAAKc2YAAApvZwAACt2RDwAAEzhybwEAcBMkcuoFAHAROG8uAAAKclsBAHAo
SwAAChMqAnsmAAAEERxvTgAACnJhAQBwEyvdVw8AAAACey4AAASOLBcRHQJ7LgAABChaAAAKFihb
AAAKEzkrCREdKFwAAAoTORI5KF0AAAoTORE5AnsvAAAEKF4AAAoTOQJ7FwAABHJvAQBwbxYAAAos
ShI5KF8AAAoCexgAAAQvO3JvAQBwEyRyYQEAcBMrcm8BAHATKXI6BgBwAnwYAAAEKC0AAAooJgAA
ChMqAnsmAAAEERxvTgAACitDAnsmAAAEERwSOShfAAAKEjkoYAAAChI5KGEAAAoSOShiAAAKEjko
YwAAChI5KGQAAAoSOShlAAAKc2YAAApvZwAACt1xDgAAEzpybwEAcBMkcuoFAHAROm8uAAAKclsB
AHAoSwAAChMqAnsmAAAEERxvTgAACnJhAQBwEyvdNw4AAAARHShoAAAKEzsCeyYAAAQRHBE7b2kA
AArdGQ4AABM8cm8BAHATJHLqBQBwETxvLgAACnJbAQBwKEsAAAoTKgJ7JgAABBEcb04AAApyYQEA
cBMr3d8NAAAAER0oaAAAChM9AnsmAAAEERwRPW9pAAAK3cENAAATPnJvAQBwEyRy6gUAcBE+by4A
AApyWwEAcChLAAAKEyoCeyYAAAQRHG9OAAAKcmEBAHATK92HDQAAAAJ7LgAABI4sFxEdAnsuAAAE
KFoAAAoWKFsAAAoTPysJER0oXAAAChM/Ej8oXQAAChM/ET8Cey8AAAQoXgAAChM/AnsXAAAEcm8B
AHBvFgAACixKEj8oXwAACgJ7GAAABC87cm8BAHATJHJhAQBwEytybwEAcBMpcjoGAHACfBgAAAQo
LQAACigmAAAKEyoCeyYAAAQRHG9OAAAKK0MCeyYAAAQRHBI/KF8AAAoSPyhgAAAKEj8oYQAAChI/
KGIAAAoSPyhjAAAKEj8oZAAAChI/KGUAAApzZgAACm9nAAAK3aEMAAATQHJvAQBwEyRy6gUAcBFA
by4AAApyWwEAcChLAAAKEyoCeyYAAAQRHG9OAAAKcmEBAHATK91nDAAAAAJ7LgAABI4sFxEdAnsu
AAAEKFoAAAoWKFsAAAoTQSsJER0oXAAAChNBEkEoXQAAChNBEUECey8AAAQoXgAAChNBAnsXAAAE
cm8BAHBvFgAACixKEkEoXwAACgJ7GAAABC87cm8BAHATJHJhAQBwEytybwEAcBMpcjoGAHACfBgA
AAQoLQAACigmAAAKEyoCeyYAAAQRHG9OAAAKK0MCeyYAAAQRHBJBKF8AAAoSQShgAAAKEkEoYQAA
ChJBKGIAAAoSQShjAAAKEkEoZAAAChJBKGUAAApzZgAACm9nAAAK3YELAAATQnJvAQBwEyRy6gUA
cBFCby4AAApyWwEAcChLAAAKEyoCeyYAAAQRHG9OAAAKcmEBAHATK91HCwAAABEdKFwAAAoTQwJ7
FwAABHJvAQBwbxYAAAosShJDKF8AAAoCexgAAAQvO3JvAQBwEyRyYQEAcBMrcm8BAHATKXI6BgBw
AnwYAAAEKC0AAAooJgAAChMqAnsmAAAEERxvTgAACisPAnsmAAAEERwRQ29qAAAK3c0KAAATRHJv
AQBwEyRy6gUAcBFEby4AAApyWwEAcChLAAAKEyoCeyYAAAQRHG9OAAAKcmEBAHATK92TCgAAABEd
KFIAAAoTRQJ7JgAABBEcEUVvUwAACt11CgAAE0ZybwEAcBMkcuoFAHARRm8uAAAKclsBAHAoSwAA
ChMqAnsmAAAEERxvTgAACnJhAQBwEyvdOwoAAAACey4AAASOLBcRHQJ7LgAABChaAAAKFihbAAAK
E0crCREdKFwAAAoTRxJHKF0AAAoTRxFHAnsvAAAEKF4AAAoTRwJ7FwAABHJvAQBwbxYAAAosShJH
KF8AAAoCexgAAAQvO3JvAQBwEyRyYQEAcBMrcm8BAHATKXI6BgBwAnwYAAAEKC0AAAooJgAAChMq
AnsmAAAEERxvTgAACitDAnsmAAAEERwSRyhfAAAKEkcoYAAAChJHKGEAAAoSRyhiAAAKEkcoYwAA
ChJHKGQAAAoSRyhlAAAKc2YAAApvZwAACt1VCQAAE0hybwEAcBMkcuoFAHARSG8uAAAKclsBAHAo
SwAAChMqAnsmAAAEERxvTgAACnJhAQBwEyvdGwkAAAARHShrAAAKE0kCeyYAAAQRHBFJb2wAAArd
/QgAABNKcm8BAHATJHLqBQBwEUpvLgAACnJbAQBwKEsAAAoTKgJ7JgAABBEcb04AAApyYQEAcBMr
3cMIAAAAER0obQAAChNLAnsmAAAEERwRS29uAAAK3aUIAAATTHJvAQBwEyRy6gUAcBFMby4AAApy
WwEAcChLAAAKEyoCeyYAAAQRHG9OAAAKcmEBAHATK91rCAAAABEdKG8AAAoTTQJ7JgAABBEcEU1v
cAAACt1NCAAAE05ybwEAcBMkcuoFAHARTm8uAAAKclsBAHAoSwAAChMqAnsmAAAEERxvTgAACnJh
AQBwEyvdEwgAAAARHShxAAAKE08CeyYAAAQRHBFPb3IAAArd9QcAABNQcm8BAHATJHLqBQBwEVBv
LgAACnJbAQBwKEsAAAoTKgJ7JgAABBEcb04AAApyYQEAcBMr3bsHAAAAER0ocwAAChNRAnsmAAAE
ERwRUW90AAAK3Z0HAAATUnJvAQBwEyRy6gUAcBFSby4AAApyWwEAcChLAAAKEyoCeyYAAAQRHG9O
AAAKcmEBAHATK91jBwAAABEdE1MRHW8hAAAKER9vSAAACjFMcm8BAHATInJhAQBwEytyXgYAcBMq
AnsUAAAEcm8BAHBvFgAACiwlAnssAAAEER5vTQAACiwFFBNTKxERHRYRH29IAAAKbyMAAAoTUwJ7
LQAABBEeb3UAAAosTgJ7LQAABBEeb3YAAAoRHW93AAAKLThyYQEAcBMrESpyXwEAcCg2AAAKLA4R
KnKSBgBwKCYAAAoTKhEqcp4GAHAoJgAAChMqcm8BAHATJgJ7JgAABBEcEVNveAAACt2RBgAAE1Ry
bwEAcBMkcuoFAHARVG8uAAAKclsBAHAoSwAAChMqAnsmAAAEERxvTgAACnJhAQBwEyvdVwYAAAAR
HShSAAAKE1UCeyYAAAQRHBFVb1MAAArdOQYAABNWcm8BAHATJHLqBQBwEVZvLgAACnJbAQBwKEsA
AAoTKgJ7JgAABBEcb04AAApyYQEAcBMr3f8FAAAAER0oeQAAChNXAnsmAAAEERwRV296AAAK3eEF
AAATWHJvAQBwEyRy6gUAcBFYby4AAApyWwEAcChLAAAKEyoCeyYAAAQRHG9OAAAKcmEBAHATK92n
BQAAABEdKHsAAAoTWQJ7JgAABBEcEVlvfAAACt2JBQAAE1pybwEAcBMkcuoFAHARWm8uAAAKclsB
AHAoSwAAChMqAnsmAAAEERxvTgAACnJhAQBwEyvdTwUAAAACexUAAARybwEAcCggAAAKLBMRHXIO
BwBwfn0AAAooWAAAChMdER0TWxEdbyEAAAoRH29IAAAKMUxybwEAcBMicmEBAHATK3JeBgBwEyoC
exQAAARybwEAcG8WAAAKLCUCeywAAAQRHm9NAAAKLAUUE1srEREdFhEfb0gAAApvIwAAChNbER1y
MgcAcCglAAAKLD9yYQEAcBMrESpyXwEAcCg2AAAKLA4RKnKSBgBwKCYAAAoTKhEqckAHAHAoJgAA
ChMqcm8BAHATKHJvAQBwEyYCey0AAAQRHm91AAAKLE4Cey0AAAQRHm92AAAKER1vdwAACi04cmEB
AHATKxEqcl8BAHAoNgAACiwOESpykgYAcCgmAAAKEyoRKnKeBgBwKCYAAAoTKnJvAQBwEyYCeyYA
AAQRHBFbb3gAAArdCwQAABNccm8BAHATJHLqBQBwEVxvLgAACnJbAQBwKEsAAAoTKgJ7JgAABBEc
b04AAApyYQEAcBMr3dEDAAAAER0TXREdbyEAAAoRH29IAAAKMV5ybwEAcBMicmEBAHATK3JeBgBw
EyoCexQAAARybwEAcG8WAAAKLDcCexQAAARybwEAcG8WAAAKLCUCeywAAAQRHm9NAAAKLAUUE10r
EREdFhEfb0gAAApvIwAAChNdER1yMgcAcCglAAAKLD9yYQEAcBMrESpyXwEAcCg2AAAKLA4RKnKS
BgBwKCYAAAoTKhEqckAHAHAoJgAAChMqcm8BAHATKHJvAQBwEyYCey0AAAQRHm91AAAKLE4Cey0A
AAQRHm92AAAKER1vdwAACi04cmEBAHATKxEqcl8BAHAoNgAACiwOESpykgYAcCgmAAAKEyoRKnKe
BgBwKCYAAAoTKnJvAQBwEyYCeyYAAAQRHBFdb3gAAArdoAIAABNecm8BAHATJHLqBQBwEV5vLgAA
CnJbAQBwKEsAAAoTKgJ7JgAABBEcb04AAApyYQEAcBMr3WYCAAAAER0ofgAAChNfAnsmAAAEERwR
X29/AAAK3UgCAAATYHJvAQBwEyRy6gUAcBFgby4AAApyWwEAcChLAAAKEyoCeyYAAAQRHG9OAAAK
cmEBAHATK90OAgAAABEdKIAAAAoTYQJ7JgAABBEcEWFvgQAACt3wAQAAE2JybwEAcBMkcuoFAHAR
Ym8uAAAKclsBAHAoSwAAChMqAnsmAAAEERxvTgAACnJhAQBwEyvdtgEAAAARHSiCAAAKE2MCeyYA
AAQRHBFjb4MAAArdmAEAABNkcm8BAHATJHLqBQBwEWRvLgAACnJbAQBwKEsAAAoTKgJ7JgAABBEc
b04AAApyYQEAcBMr3V4BAAAAER0ohAAAChNlAnsmAAAEERwRZW+FAAAK3UABAAATZnJvAQBwEyRy
6gUAcBFmby4AAApyWwEAcChLAAAKEyoCeyYAAAQRHG9OAAAKcmEBAHATK90GAQAAABEdE2cRHW8h
AAAKER9vSAAACjFMcm8BAHATInJhAQBwEytyXgYAcBMqAnsUAAAEcm8BAHBvFgAACiwlAnssAAAE
ER5vTQAACiwFFBNnKxERHRYRH29IAAAKbyMAAAoTZwJ7LQAABBEeb3UAAAosTgJ7LQAABBEeb3YA
AAoRHW93AAAKLThyYQEAcBMrESpyXwEAcCg2AAAKLA4RKnKSBgBwKCYAAAoTKhEqcp4GAHAoJgAA
ChMqcm8BAHATJgJ7JgAABBEcEWdveAAACt43E2hybwEAcBMkcuoFAHARaG8uAAAKclsBAHAoSwAA
ChMqAnsmAAAEERxvTgAACnJhAQBwEyveAAICezMAAAQXWH0zAAAEAhUCewMAAAQRBAgRHBEeESAR
IREdESsRIhEjESQRJREmEScRKigDAAAGOPMAAAACexMAAARybwEAcCggAAAKLA8RHgJ7BAAABCgg
AAAKLSsCexMAAARybwEAcCg2AAAKLDERHm+GAAAKAnsEAAAEb4YAAAooIAAACiwYAnsmAAAEERwC
ewMAAARveAAACjiPAAAAAnsTAAAEcm8BAHAoIAAACiwPER4CewUAAAQoIAAACi0rAnsTAAAEcm8B
AHAoNgAACixBER5vhgAACgJ7BQAABG+GAAAKKCAAAAosKAJ7JgAABBEcEQQWIKAPAAARBG8hAAAK
KCIAAApvIwAACm94AAAKKxtyYQEAcBMrcm8BAHATJQJ7JgAABBEcb04AAAoRK3JhAQBwKCAAAAo5
UAEAABEbER5yCwEAcChLAAAKExsCAns0AAAEF1h9NAAABBEicm8BAHAoIAAACiwyAgJ7NQAABBdY
fTUAAAQCexQAAARybwEAcCg2AAAKLQ8CeywAAAQRHm9NAAAKLAMWExoRI3JvAQBwKCAAAAosIAIC
ezYAAAQXWH02AAAEAnsrAAAEER5vTQAACiwDFhMaESRybwEAcCggAAAKLDECAns3AAAEF1h9NwAA
BBEpcm8BAHAoNgAACi0SAnsXAAAEcm8BAHAoNgAACiwDFhMaESVybwEAcCggAAAKLA4CAns4AAAE
F1h9OAAABBEmcm8BAHAoIAAACi0OEShybwEAcCggAAAKLA4CAns5AAAEF1h9OQAABBEpcm8BAHAo
IAAACiwVAnsXAAAEcm8BAHAoNgAACiwDFhMaESdybwEAcCggAAAKLA4CAns6AAAEF1h9OgAABBEc
F1gTHBEcAnslAAAEbxsAAAo/5ef//wICezEAAAQXWH0xAAAEERo6OAEAAAJ7JgAABG9PAAAKAgJ7
MgAABBdYfTIAAAQCezIAAAQCewoAAAQxCQJ7CgAABBUzRwIRBBEXERgRGXJfAQBwERsWERtvIQAA
CiD/AAAAKCIAAApvIwAACnKsBwBwERsWERtvIQAAChdZbyMAAAooJgAACigEAAAGAnsyAAAEAnsK
AAAEPrAAAAACewoAAAQVO6QAAAACEQQRFxEYERlyXwEAcBEbFhEbbyEAAAog/wAAACgiAAAKbyMA
AApyrAcAcBEbFhEbbyEAAAoXWW8jAAAKKCYAAAooBAAABhcTaQIoEQAAChVy/AcAcBuNMwAAASUW
ciwIAHCiJRcCfAoAAAQoLQAACqIlGHKACABwoiUZAnsDAAAEoiUacqoIAHCiKC8AAApyXwEAcBYS
aW9BAAAKBm+HAAAKJgJ7JgAABG+IAAAKJgktIAZviQAACi0YCAJ7CQAABD553///AnsJAAAEFTtt
3///Bm+KAAAKKgAAAEEcAwAAAAAAUQEAACkAAAB6AQAAFQAAAB8AAAEAAAAAsAEAAAwAAAC8AQAA
lwAAABoAAAECAAAAUgMAAIAAAADSAwAADgAAAAAAAAACAAAAfgUAAKQAAAAiBgAADgAAAAAAAAAC
AAAAQgYAAIAAAADCBgAADgAAAAAAAAAAAAAAjQwAAB0AAACqDAAAOgAAAB8AAAEAAAAA5QwAAB0A
AAACDQAAOgAAAB8AAAECAAAAXA0AAC0AAACJDQAADgAAAAAAAAAAAAAAPQ0AAD8BAAB8DgAAOgAA
AB8AAAEAAAAAtw4AAOUAAACcDwAAOgAAAB8AAAEAAAAA1w8AAB0AAAD0DwAAOgAAAB8AAAEAAAAA
LxAAAB0AAABMEAAAOgAAAB8AAAEAAAAAhxAAAOUAAABsEQAAOgAAAB8AAAEAAAAApxEAAOUAAACM
EgAAOgAAAB8AAAEAAAAAxxIAAHkAAABAEwAAOgAAAB8AAAEAAAAAexMAAB0AAACYEwAAOgAAAB8A
AAEAAAAA0xMAAOUAAAC4FAAAOgAAAB8AAAEAAAAA8xQAAB0AAAAQFQAAOgAAAB8AAAEAAAAASxUA
AB0AAABoFQAAOgAAAB8AAAEAAAAAoxUAAB0AAADAFQAAOgAAAB8AAAEAAAAA+xUAAB0AAAAYFgAA
OgAAAB8AAAEAAAAAUxYAAB0AAABwFgAAOgAAAB8AAAEAAAAAqxYAANEAAAB8FwAAOgAAAB8AAAEA
AAAAtxcAAB0AAADUFwAAOgAAAB8AAAEAAAAADxgAAB0AAAAsGAAAOgAAAB8AAAEAAAAAZxgAAB0A
AACEGAAAOgAAAB8AAAEAAAAAvxgAAEMBAAACGgAAOgAAAB8AAAEAAAAAPRoAADABAABtGwAAOgAA
AB8AAAEAAAAAqBsAAB0AAADFGwAAOgAAAB8AAAEAAAAAABwAAB0AAAAdHAAAOgAAAB8AAAEAAAAA
WBwAAB0AAAB1HAAAOgAAAB8AAAEAAAAAsBwAAB0AAADNHAAAOgAAAB8AAAEAAAAACB0AAM4AAADW
HQAANwAAAB8AAAETMAIANQAAAAQAABEWCisMBi0JAgNv8gAABhcKA29LAAAGLewDb0wAAAYsFAJ7
KQAABCwGAigGAAAGAigFAAAGKgAAABswEgDRCgAABQAAEQIDbwwAAAYsB3JfAQBwKwYDbwsAAAZ9
AQAABAIDbw4AAAYsB3JfAQBwKwYDbw0AAAZ9AgAABAIDbxAAAAYsAxcrBgNvDwAABn0GAAAEAgNv
EgAABiwDFysGA28RAAAGfQcAAAQCA28UAAAGLAdyXwEAcCsGA28TAAAGfQgAAAQCA28WAAAGLAMV
KwYDbxUAAAZ9CQAABAIDbxgAAAYsBB9kKwYDbxcAAAZ9CgAABAIDbxoAAAYsBB9kKwYDbxkAAAZ9
CwAABAIDbxwAAAYsB3InAABwKwYDbxsAAAZ9DAAABAIDbyAAAAYsB3JfAQBwKwYDbx8AAAZ9DQAA
BAIDbx4AAAYsB3JfAQBwKwYDbx0AAAZ9DgAABAIDbz4AAAYsB3JrAQBwKwYDbz0AAAZ9EwAABAID
byIAAAYsB3JvAQBwKwYDbyEAAAZ9FAAABAIDb0gAAAYsB3JrAQBwKwYDb0cAAAZ9FQAABAIDb0oA
AAYsB3JrAQBwKwYDb0kAAAZ9FgAABAIDbyQAAAYsB3JvAQBwKwYDbyMAAAZ9FwAABAIDbzoAAAYs
AxYrBgNvOQAABn0YAAAEAgNvJgAABiwHcrAIAHArBgNvJQAABn0ZAAAEAgNvKAAABiwHcl8BAHAr
BgNvJwAABn0aAAAEAgNvKgAABiwHcl8BAHArBgNvKQAABn0bAAAEAgNvLAAABiwHcl8BAHArBgNv
KwAABn0cAAAEAgNvLgAABiwHcl8BAHArBgNvLQAABn0dAAAEAgNvMAAABiwHcl8BAHArBgNvLwAA
Bn0eAAAEAgNvMgAABiwHcl8BAHArBgNvMQAABn0fAAAEAgNvPAAABiwHcl8BAHArBgNvOwAABn0g
AAAEAgNvNAAABiwHcl8BAHArBgNvMwAABn0hAAAEAgNvNgAABiwHcl8BAHArBgNvNQAABn0EAAAE
AgNvOAAABiwHcl8BAHArBgNvNwAABn0FAAAEAgNvQAAABiwHcmsBAHArBgNvPwAABn0PAAAEAgNv
QgAABiwHcmsBAHArBgNvQQAABn0QAAAEAgNvRAAABiwHcmsBAHArBgNvQwAABn0RAAAEAgNvRgAA
BiwHcmsBAHArBgNvRQAABn0SAAAEAnsTAAAEcm8BAHAoIAAACix1AiiLAAAKfSMAAARzjAAACgoC
eyQAAARvNwAACm84AAAKCysbEgEoOQAACgwGCAJ7JAAABAhvRQAACm8aAAAKEgEoOgAACi3c3g4S
Af4WCAAAG28eAAAK3AIGfSQAAAQCc40AAAp9JwAABAJzjgAACn0tAAAEAnsqAAAEb48AAAoCex8A
AARyXwEAcCg2AAAKLCcCAnsfAAAEF41DAAABJRYfLJ1vkAAACgJ7IwAABHORAAAKfSoAAAQCeysA
AARvjwAACgJ7HgAABHJfAQBwKDYAAAosJwICex4AAAQXjUMAAAElFh8snW+QAAAKAnsjAAAEc5EA
AAp9KwAABAJ7LAAABG+PAAAKAnsgAAAEcl8BAHAoNgAACiwnAgJ7IAAABBeNQwAAASUWHyydb5AA
AAoCeyMAAARzkQAACn0sAAAEAnsZAAAEcl8BAHAoNgAACiwWAgJ7GQAABHK0CABwKJIAAAp9LgAA
BAJ7LQAABG+TAAAKAnshAAAEcl8BAHAoNgAACix7AnshAAAEcuoIAHAokgAACg0WEwQrXgkRBJpy
IAkAcCiSAAAKEwURBY5pGDNBEQUWmnJfAQBwKDYAAAosMREFF5pyXwEAcCg2AAAKLCERBReac5QA
AAoTBgJ7LQAABBEFFpoRBm+VAAAK3gMm3gARBBdYEwQRBAmOaTKbAnsIAAAEbyQAAApyXwEAcG8W
AAAKOlIFAAAXEwcXEwgXEwkXEwoXEwsCewgAAARvJAAACheNQwAAASUWHyydb5AAAAoNFhMEOJ4A
AAAJEQSaEwwCeycAAAQRDG8wAAAKLFMCFQJ7AwAABAJ7CAAABBUVEQxyDwEAcHIPAQBwcl8BAHBy
YQEAcHJrAQBwcmsBAHByawEAcHJvAQBwcmsBAHByawEAcHJzAQBwKAMAAAYWEwsrMAJ7JwAABBEM
AnsnAAAEbzEAAApvMgAACgJ7KAAABAJ7KAAABG8bAAAKEQxvHAAAChEEF1gTBBEECY5pP1j///8C
eyoAAARvMwAAChMNK3YSDSg0AAAKEw4CeycAAAQRDm8wAAAKLV4CAns4AAAEF1h9OAAABBYTBwIV
AnsDAAAEcg8BAHAVFREOcg8BAHByDwEAcHJfAQBwcmEBAHByawEAcHJrAQBwcmsBAHBybwEAcHJr
AQBwcmsBAHBy0wEAcCgDAAAGEg0oNQAACi2B3g4SDf4WBgAAG28eAAAK3AJ7GwAABHJfAQBwKDYA
AAosdQJ7JwAABAJ7GwAABG8wAAAKLWICAns4AAAEF1h9OAAABBYTCAIVAnsDAAAEcg8BAHAVFQJ7
GwAABHIPAQBwcg8BAHByXwEAcHJhAQBwcmsBAHByawEAcHJrAQBwcm8BAHByawEAcHJrAQBwcjEC
AHAoAwAABgJ7HAAABHJfAQBwKDYAAAosdQJ7JwAABAJ7HAAABG8wAAAKLWICAns4AAAEF1h9OAAA
BBYTCAIVAnsDAAAEcg8BAHAVFQJ7HAAABHIPAQBwcg8BAHByXwEAcHJhAQBwcmsBAHByawEAcHJr
AQBwcm8BAHByawEAcHJrAQBwcq0CAHAoAwAABgJ7HQAABHJfAQBwKDYAAAosdQJ7JwAABAJ7HQAA
BG8wAAAKLWICAns4AAAEF1h9OAAABBYTCAIVAnsDAAAEcg8BAHAVFQJ7HQAABHIPAQBwcg8BAHBy
XwEAcHJhAQBwcmsBAHByawEAcHJrAQBwcm8BAHByawEAcHJrAQBwci0DAHAoAwAABgJ7JAAABG83
AAAKbzgAAAoLK3YSASg5AAAKEw8CeycAAAQRD28wAAAKLV4CAns4AAAEF1h9OAAABBYTCQIVAnsD
AAAEcg8BAHAVFREPcg8BAHByDwEAcHJfAQBwcmEBAHByawEAcHJrAQBwcmsBAHBybwEAcHJrAQBw
cmsBAHBytAMAcCgDAAAGEgEoOgAACi2B3g4SAf4WCAAAG28eAAAK3AJ7JwAABG87AAAKbzwAAAoT
ECt2EhAoPQAAChMRAnskAAAEERFvPgAACi1eAgJ7OAAABBdYfTgAAAQWEwoCFQJ7AwAABHIPAQBw
FRUREXIPAQBwcg8BAHByXwEAcHJhAQBwcmsBAHByawEAcHJrAQBwcm8BAHByawEAcHJrAQBwci4E
AHAoAwAABhIQKD8AAAotgd4OEhD+FgoAABtvHgAACtwRBy02AnsRAAAEcm8BAHAoIAAACiwjFxMS
AigRAAAKFQIoEQAACm9AAAAKcnwEAHAUFhISb0EAAAoqEQgtASoRCS1IAnsOAAAEcm8BAHAoNgAA
Ciw2AnsQAAAEcm8BAHAoIAAACiwjFxMTAigRAAAKFQIoEQAACm9AAAAKcs4EAHAUFhITb0EAAAoq
EQotSAJ7DQAABHJvAQBwKDYAAAosNgJ7DwAABHJvAQBwKCAAAAosIxcTFAIoEQAAChUCKBEAAApv
QAAACnIeBQBwFBYSFG9BAAAKKhELLQEqAnsaAAAEcl8BAHAoNgAACiwRAgJ7GgAABCiWAAAKfS8A
AAQCF30pAAAEKgAAAAFAAAACAH4DKKYDDgAAAAAAAC8FHk0FAyYAAAECAF8Gg+IGDgAAAAACAJYI
gxkJDgAAAAACADkJg7wJDgAAAAATMAIA+AEAAAAAAAACcl8BAHB9AQAABAJyXwEAcH0CAAAEAnJf
AQBwfQMAAAQCcl8BAHB9BAAABAJyXwEAcH0FAAAEAhd9BgAABAIXfQcAAAQCcl8BAHB9CAAABAIV
fQkAAAQCH2R9CgAABAIfZH0LAAAEAnInAABwfQwAAAQCcm8BAHB9DQAABAJybwEAcH0OAAAEAnJr
AQBwfQ8AAAQCcmsBAHB9EAAABAJyawEAcH0RAAAEAnJrAQBwfRIAAAQCcm8BAHB9EwAABAJybwEA
cH0UAAAEAnJrAQBwfRUAAAQCcmsBAHB9FgAABAJybwEAcH0XAAAEAnJfAQBwfRkAAAQCcl8BAHB9
GgAABAJyXwEAcH0bAAAEAnJfAQBwfRwAAAQCcl8BAHB9HQAABAJyXwEAcH0eAAAEAnJfAQBwfR8A
AAQCcl8BAHB9IAAABAJyXwEAcH0hAAAEAnOXAAAKfSIAAAQCKJgAAAp9IwAABAIomAAACnOZAAAK
fSQAAAQCc5oAAAp9JQAABAIomAAACnObAAAKfScAAAQCc5oAAAp9KAAABAIomAAACnOcAAAKfSoA
AAQCKJgAAApznAAACn0rAAAEAiiYAAAKc5wAAAp9LAAABAIomAAACnOdAAAKfS0AAAQCFo0zAAAB
fS4AAAQCKJ4AAAp9LwAABAIo6wAABioqAgMEBSifAAAKKlICe6AAAAoCe6EAAAoWlG+iAAAKKiIC
FiijAAAKKlICe6AAAAoCe6EAAAoXlG+iAAAKKiICFyijAAAKKlICe6AAAAoCe6EAAAoYlG+kAAAK
KiICGCijAAAKKlICe6AAAAoCe6EAAAoZlG+kAAAKKiICGSijAAAKKlICe6AAAAoCe6EAAAoalG+i
AAAKKiICGiijAAAKKlICe6AAAAoCe6EAAAoblG+kAAAKKiICGyijAAAKKlICe6AAAAoCe6EAAAoc
lG+kAAAKKiICHCijAAAKKlICe6AAAAoCe6EAAAodlG+kAAAKKiICHSijAAAKKlICe6AAAAoCe6EA
AAoelG+iAAAKKiICHiijAAAKKlYCe6AAAAoCe6EAAAofCZRvogAACiomAh8JKKMAAAoqVgJ7oAAA
CgJ7oQAACh8KlG+iAAAKKiYCHwooowAACipWAnugAAAKAnuhAAAKHwuUb6IAAAoqJgIfCyijAAAK
KlYCe6AAAAoCe6EAAAofDJRvogAACiomAh8MKKMAAAoqVgJ7oAAACgJ7oQAACh8NlG+iAAAKKiYC
Hw0oowAACipWAnugAAAKAnuhAAAKHw6Ub6IAAAoqJgIfDiijAAAKKlYCe6AAAAoCe6EAAAofD5Rv
ogAACiomAh8PKKMAAAoqVgJ7oAAACgJ7oQAACh8QlG+iAAAKKiYCHxAoowAACipWAnugAAAKAnuh
AAAKHxGUb6IAAAoqJgIfESijAAAKKlYCe6AAAAoCe6EAAAofEpRvogAACiomAh8SKKMAAAoqVgJ7
oAAACgJ7oQAACh8TlG+iAAAKKiYCHxMoowAACipWAnugAAAKAnuhAAAKHxSUb6IAAAoqJgIfFCij
AAAKKlYCe6AAAAoCe6EAAAofFZRvogAACiomAh8VKKMAAAoqVgJ7oAAACgJ7oQAACh8WlG+iAAAK
KiYCHxYoowAACipWAnugAAAKAnuhAAAKHxeUb6QAAAoqJgIfFyijAAAKKlYCe6AAAAoCe6EAAAof
GJRvogAACiomAh8YKKMAAAoqVgJ7oAAACgJ7oQAACh8ZlG+iAAAKKiYCHxkoowAACipWAnugAAAK
AnuhAAAKHxqUb6IAAAoqJgIfGiijAAAKKlYCe6AAAAoCe6EAAAofG5RvogAACiomAh8bKKMAAAoq
VgJ7oAAACgJ7oQAACh8clG+iAAAKKiYCHxwoowAACipWAnugAAAKAnuhAAAKHx2Ub6IAAAoqJgIf
HSijAAAKKlYCe6AAAAoCe6EAAAofHpRvogAACiomAh8eKKMAAAoqVgJ7oAAACgJ7oQAACh8flG+i
AAAKKiYCHx8oowAACioeAiilAAAKKh4CKKYAAAoqJgIWAyinAAAKKloDLAgCFiioAAAKKnJWCQBw
c6kAAAp6OgIXA4w2AAABKKcAAAoqWgMsCAIXKKgAAAoqclYJAHBzqQAACnomAhgDKKcAAAoqWgMs
CAIYKKgAAAoqclYJAHBzqQAACnomAhkDKKcAAAoqWgMsCAIZKKgAAAoqclYJAHBzqQAACnomAhoD
KKcAAAoqWgMsCAIaKKgAAAoqclYJAHBzqQAACnomAhsDKKcAAAoqWgMsCAIbKKgAAAoqclYJAHBz
qQAACnomAhwDKKcAAAoqWgMsCAIcKKgAAAoqclYJAHBzqQAACnomAh0DKKcAAAoqWgMsCAIdKKgA
AAoqclYJAHBzqQAACnomAh4DKKcAAAoqWgMsCAIeKKgAAAoqclYJAHBzqQAACnoqAh8JAyinAAAK
Kl4DLAkCHwkoqAAACipyVgkAcHOpAAAKeioCHwoDKKcAAAoqXgMsCQIfCiioAAAKKnJWCQBwc6kA
AAp6KgIfCwMopwAACipeAywJAh8LKKgAAAoqclYJAHBzqQAACnoqAh8MAyinAAAKKl4DLAkCHwwo
qAAACipyVgkAcHOpAAAKeioCHw0DKKcAAAoqXgMsCQIfDSioAAAKKnJWCQBwc6kAAAp6KgIfDgMo
pwAACipeAywJAh8OKKgAAAoqclYJAHBzqQAACnoqAh8PAyinAAAKKl4DLAkCHw8oqAAACipyVgkA
cHOpAAAKeioCHxADKKcAAAoqXgMsCQIfECioAAAKKnJWCQBwc6kAAAp6KgIfEQMopwAACipeAywJ
Ah8RKKgAAAoqclYJAHBzqQAACnoqAh8SAyinAAAKKl4DLAkCHxIoqAAACipyVgkAcHOpAAAKeioC
HxMDKKcAAAoqXgMsCQIfEyioAAAKKnJWCQBwc6kAAAp6KgIfFAMopwAACipeAywJAh8UKKgAAAoq
clYJAHBzqQAACnoqAh8VAyinAAAKKl4DLAkCHxUoqAAACipyVgkAcHOpAAAKej4CHxYDjCgAAAEo
pwAACipeAywJAh8WKKgAAAoqclYJAHBzqQAACno+Ah8XA4w2AAABKKcAAAoqXgMsCQIfFyioAAAK
KnJWCQBwc6kAAAp6KgIfGAMopwAACipeAywJAh8YKKgAAAoqclYJAHBzqQAACnoqAh8ZAyinAAAK
Kl4DLAkCHxkoqAAACipyVgkAcHOpAAAKej4CHxoDjDYAAAEopwAACipeAywJAh8aKKgAAAoqclYJ
AHBzqQAACnoqAh8bAyinAAAKKl4DLAkCHxsoqAAACipyVgkAcHOpAAAKeioCHxwDKKcAAAoqXgMs
CQIfHCioAAAKKnJWCQBwc6kAAAp6KgIfHQMopwAACipeAywJAh8dKKgAAAoqclYJAHBzqQAACnoq
Ah8eAyinAAAKKl4DLAkCHx4oqAAACipyVgkAcHOpAAAKeioCHx8DKKcAAAoqXgMsCQIfHyioAAAK
KnJWCQBwc6kAAAp6KgIfIAMopwAACipeAywJAh8gKKgAAAoqclYJAHBzqQAACnoeAiiqAAAKKh4C
KKsAAAoqJgIXAyinAAAKKjoCFgOMNgAAASinAAAKKjoCGQOMNgAAASinAAAKKjoCGgOMNgAAASin
AAAKKjoCGAOMNgAAASinAAAKKjoCGwOMNgAAASinAAAKKjoCHAOMNgAAASinAAAKKjoCHQOMNgAA
ASinAAAKKjoCHgOMNgAAASinAAAKKj4CHwkDjDYAAAEopwAACio+Ah8KA4w2AAABKKcAAAoqPgIf
CwOMNgAAASinAAAKKj4CHwwDjDYAAAEopwAACip+AiisAAAKAgJz8wAABn07AAAEAgJz9AAABn08
AAAEKhMwBABPAAAAAAAAAARy8wkAcBpvrQAACiwVAgUCAyiuAAAKDgRzCgAABm/xAAAGBW+vAAAK
LCMCAntBAAAEF1h9QQAABAJ7QQAABBczDAJv7QAABgIo7gAABioGKgAAABMwAgBpAAAAAAAAAAJ7
PQAABCwSAns9AAAEb5EAAAYCFH09AAAEAns+AAAELBICez4AAARvpQAABgIUfT4AAAQCez8AAAQs
EgJ7PwAABG/LAAAGAhR9PwAABAJ7QAAABCwSAntAAAAEb+kAAAYCFH1AAAAEKgAAABMwBQDBAAAA
AgAAERYKOKwAAAAEBpQOBHIBAABwKB8AAAozGQIFBpoCBAaUKK4AAAoOBHNNAAAGfT0AAAQEBpQO
BHIzCgBwKB8AAAozGQIFBpoCBAaUKK4AAAoOBHOTAAAGfT4AAAQEBpQOBHJ5CgBwKB8AAAozGQIF
BpoCBAaUKK4AAAoOBHOnAAAGfT8AAAQEBpQOBHK/CgBwKB8AAAozGQIFBpoCBAaUKK4AAAoOBHPN
AAAGfUAAAAQGF1gKBgM/Tf///wJv8AAABipKKwcCA2/yAAAGA29LAAAGLfEqOgIosAAACgIDfUIA
AAQqOgIosAAACgIDfUMAAAQqHgIosAAACiqufkQAAAQtHnIDCwBw0AsAAAIosQAACm+yAAAKc7MA
AAqARAAABH5EAAAEKhp+RQAABCoeAoBFAAAEKhp+RgAABCoeAii0AAAKKi5z+gAABoBGAAAEKkJT
SkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAEQmAAAjfgAAsCYAABwoAAAjU3RyaW5n
cwAAAADMTgAAeAsAACNVUwBEWgAAEAAAACNHVUlEAAAAVFoAAKgFAAAjQmxvYgAAAAAAAAACAAAB
VxWiCQkBAAAA+gEzABYAAAEAAABKAAAADAAAAEYAAAD7AAAAyAAAALQAAAAQAAAABQAAAAcAAADR
AAAA0gAAAA0AAAABAAAACAAAAAEAAAAAAM8NAQAAAAAABgBXC6EgBgDrC6EgBgCjCoMgDwAVIQAA
BgDQCrgbBgA6C7gbBgAbC7gbBgDSC7gbBgB3C7gbBgCQC7gbBgDnCrgbBgACC2kMCgCrC58IBgDJ
ACIEBgAFH/wZDgAaANweEgDhHZ8IFgCUACIEGgCHJ1EiBgDCHPwZBgBJIHAiDgBkANweBgC2BvwZ
CgDbHJ8IHgAUH8UDHgBCHMUDSwBYIAAAOwD6GwAAcwBYIAAAIgAYCbQeBgBpHPwZBgAzDfwZBgC7
JPwZOwBYIAAABgC6ACIEBgAfGvwZBgDwBfwZBgCxJPwZCgB6Hp8IBgAvCPwZCgCYJZ8IBgCGCoMg
BgCcHsEgBgDPHKMbGgBWCkcNGgC3CkcNGgCmCY4bBgBrCqEgDgABANweDgBMANweBgCZDPwZDgAu
ANweBgD/DPwZBgC0APwZBgAXGvwZBgC8HfwZBgBsIaMbBgAiDPwZBgD2APwZBgDjAPwZBgDzBvwZ
BgDFBvwZBgArDPwZBgDsAPwZBgChAPwZBgDZAPwZBgCPHfwZBgByACIEBgCAACIEBgBZHPwZBgCo
HPwZBgAcCfwZBgDMBvwZBgC9J7gbAAAAACABAAAAAAEAAQABABAALBoAACAAAQABAAEAEAA1HgAA
nQA7AAoAAQAQAMwdAACdADsATQABABAAVx4AAJ0AOwCTAAEAEADwHQAAnQA7AKcAAQAQABMeAACd
ADsAzQABABAAeiUAAKUAOwDrAAEAEACDIgAAmQBCAPMAAQAQAGIhAACZAEMA9AAAABAAyCAzIZkA
RAD1AAABEAC+ITMhvQBGAPkAAQBAG/ECAQCFB/ECAQAEDfECAQDaGvECAQAKG/ECAQDSJfEDAQCO
CPEDAQBUJvECAQAeJPEDAQBXCfEDAQDoDPEDAQBdDfECAQA6A/ECAQBoA/ECAQA2AvECAQBkAvEC
AQClAvECAQDaAfECAQBQDPECAQALA/ECAQBzAfECAQCnA/ECAQDgAvECAQBzHfEDAQBJJPECAQDA
CPECAQBLGvECAQCfGvECAQB0GvECAQAcIvECAQBAIvECAQDyIfECAQCnIvECAQD6JPQDAQADKPwD
AQCuBwAEAQAIHAkEAQCHHpkDAQCYBxEEAQAoHAkEAQDiCRkEAQArJhwEAQAZJhwEAQD/JRwEAQDp
HCMEAQCVJywEAQC5HDAEAQBuBPEDAQAeBfEDAQDsIvEDAQD3BPEDAQDbIvEDAQBCI/EDAQDxI/ED
AQAUI/EDAQDAI/EDAQCUI/EDAQBtI/EDBgCDIjQEBgBiITgEBgDMHTwEBgBXHkAEBgDwHUQEBgAT
HkgEAQCFBPEDAQCIJUwEAQCIJUwEEQAIGlEEEQCBCVYEEQAiBlsEUCAAAAAAxgAJDAYAAQA8IQAA
AADGAK8mXwQBAHwhAAAAAIEAqgxrBAUA5CIAAAAAgQBYH4AEFgBIJAAAAACBAMAMBgAdAGglAAAA
AIEAHgcGAB0AzEoAAAAAxgCGJosEHQAQSwAAAADGAEgniwQeADBWAAAAAIYYYyAGAB8ANFgAAAAA
hhhjII8DHwA/WAAAAACGCC8bPgAiAFRYAAAAAIYIXRVoACIAXVgAAAAAhghZBz4AIgByWAAAAACG
CPoRaAAiAHtYAAAAAIYIviVkACIAkFgAAAAAhggDGWgAIgCZWAAAAACGCHkIZAAiAK5YAAAAAIYI
6BJoACIAt1gAAAAAhgg/Jj4AIgDMWAAAAACGCB4ZaAAiANVYAAAAAIYICCRkACIA6lgAAAAAhghL
GGgAIgDzWAAAAACGCEEJZAAiAAhZAAAAAIYIWxNoACIAEVkAAAAAhgjVDGQAIgAmWQAAAACGCBkU
aAAiAC9ZAAAAAIYIxic+ACIARFkAAAAAhgi4GWgAIgBNWQAAAACGCE4DPgAiAGNZAAAAAIYIeA9o
ACIAbVkAAAAAhggiAz4AIgCDWQAAAACGCFkPaAAiAI1ZAAAAAIYI8AI+ACIAo1kAAAAAhgg3D2gA
IgCtWQAAAACGCMwCPgAiAMNZAAAAAIYIHA9oACIAzVkAAAAAhggwJD4AIgDjWQAAAACGCGgYaAAi
AO1ZAAAAAIYI0gg+ACIAA1oAAAAAhggEE2gAIgANWgAAAACGCDcaPgAiACNaAAAAAIYIrBRoACIA
LVoAAAAAhgiJGj4AIgBDWgAAAACGCOcUaAAiAE1aAAAAAIYIWxo+ACIAY1oAAAAAhgjHFGgAIgBt
WgAAAACGCAkiPgAiAINaAAAAAIYIOhdoACIAjVoAAAAAhggrIj4AIgCjWgAAAACGCFQXaAAiAK1a
AAAAAIYIjyI+ACIAw1oAAAAAhghwF2gAIgDNWgAAAACGCMEaPgAiAONaAAAAAIYIGxVoACIA7VoA
AAAAhgjvGj4AIgADWwAAAACGCDsVaAAiAA1bAAAAAIYIWR1kACIAI1sAAAAAhggOFmgAIgAtWwAA
AACGCNchPgAiAENbAAAAAIYIGBdoACIATVsAAAAAhgj/AT4AIgBjWwAAAACGCIQOaAAiAG1bAAAA
AIYIHgI+ACIAg1sAAAAAhgiqDmgAIgCNWwAAAACGCEoCPgAiAKNbAAAAAIYIyQ5oACIArVsAAAAA
hgh6Aj4AIgDDWwAAAACGCOoOaAAiAM1bAAAAAIYIsQE+ACIA41sAAAAAhghUDmgAIgDtWwAAAACG
CJABPgAiAANcAAAAAIYILA5oACIADVwAAAAAhgh+Az4AIgAjXAAAAACGCJkPaAAiAC1cAAAAAIYA
dCdoACIANVwAAAAAhgAZJWgAIgA0WAAAAACGGGMgjwMiAD1cAAAAAIYI2AUQACUAR1wAAAAAhghE
EV4BJgBeXAAAAACGCFoFAQAnAG1cAAAAAIYIoxBeASgAhFwAAAAAhgiqBRAAKQCOXAAAAACGCAgR
XgEqAKVcAAAAAIYI+AcQACsAr1wAAAAAhgh7El4BLADGXAAAAACGCMYHEAAtANBcAAAAAIYIOxJe
AS4A51wAAAAAhgiJDRAALwDxXAAAAACGCFgUXgEwAAhdAAAAAIYIeQUQADEAEl0AAAAAhgjJEF4B
MgApXQAAAACGCMIFEAAzADNdAAAAAIYIJxFeATQASl0AAAAAhggTCBAANQBUXQAAAACGCJ0SXgE2
AGtdAAAAAIYI4AcQADcAdl0AAAAAhghcEl4BOACOXQAAAACGCK0NEAA5AJldAAAAAIYIgxReAToA
sV0AAAAAhghrDRAAOwC8XQAAAACGCDMUXgE8ANRdAAAAAIYIjhwQAD0A310AAAAAhgjtFV4BPgD3
XQAAAACGCD0KEAA/AAJeAAAAAIYI4hNeAUAAGl4AAAAAhggSChAAQQAlXgAAAACGCKkTXgFCAD1e
AAAAAIYITRsQAEMASF4AAAAAhgh1FV4BRABgXgAAAACGCHMcEABFAGteAAAAAIYIyxVeAUYAg14A
AAAAhghjJRAARwCOXgAAAACGCOUYXgFIAKZeAAAAAIYI7wkQAEkAsV4AAAAAhgh4E14BSgDJXgAA
AACGCJYFEABLANReAAAAAIYI7RBeAUwA7F4AAAAAhgh8JxAATQD3XgAAAACGCKYZXgFOAA9fAAAA
AIYIIQkQAE8AGl8AAAAAhghAE14BUAAyXwAAAACGCFwIkQRRAEJfAAAAAIYIvRJeAVIAWl8AAAAA
hghsCAEAUwBqXwAAAACGCNQSXgFUAIJfAAAAAIYIKQoQAFUAjV8AAAAAhgjHE14BVgClXwAAAACG
CAAKEABXALBfAAAAAIYIkBNeAVgAyF8AAAAAhgh7GwEAWQDYXwAAAACGCLEVXgFaAPBfAAAAAIYI
ZRsQAFsA+18AAAAAhgiUFV4BXAATYAAAAACGCNMEEABdAB5gAAAAAIYIHBBeAV4ANmAAAAAAhghs
JBAAXwBBYAAAAACGCIgYXgFgAFlgAAAAAIYIJCEQAGEAZGAAAAAAhggCF14BYgB8YAAAAACGCHMH
EABjAIdgAAAAAIYIIhJeAWQAn2AAAAAAhgglJxAAZQCqYAAAAACGCI0ZXgFmAMJgAAAAAIYANycG
AGcAymAAAAAAhgAWJQYAZwA1XAAAAACGABklaABnADRYAAAAAIYYYyCPA2cAPVwAAAAAhghmBxAA
agBHXAAAAACGCA4SXgFrANJgAAAAAIYI5iYQAGwAbVwAAAAAhghUGV4BbQCEXAAAAACGCF8BEABu
AI5cAAAAAIYIEQ5eAW8ApVwAAAAAhgg6DBAAcACvXAAAAACGCAIUXgFxAMZcAAAAAIYIBgQQAHIA
0FwAAAAAhgjJD14BcwDnXAAAAACGCDIGEAB0APFcAAAAAIYIYBFeAXUACF0AAAAAhgixGhAAdgAS
XQAAAACGCAQVXgF3ACldAAAAAIYITAYQAHgAM10AAAAAhgh1EV4BeQDCYAAAAACGADcnBgB6AMpg
AAAAAIYAFiUGAHoANVwAAAAAhgAZJWgAegA0WAAAAACGGGMgjwN6ANxgAAAAAIYIKQEBAH0AR1wA
AAAAhgj3DV4BfgDSYAAAAACGCPoGEAB/AG1cAAAAAIYIxBFeAYAAhFwAAAAAhgj5JhAAgQCOXAAA
AACGCG4ZXgGCAOtgAAAAAIYIyiQBAIMAr1wAAAAAhgilGF4BhAD6YAAAAACGCJQdAQCFANBcAAAA
AIYILxZeAYYA51wAAAAAhgg1BxAAhwDxXAAAAACGCN8RXgGIAAhdAAAAAIYI9QgQAIkAEl0AAAAA
hgghE14BigApXQAAAACGCIoGEACLADNdAAAAAIYIpRFeAYwASl0AAAAAhgjEJhAAjQBUXQAAAACG
CDoZXgGOAGtdAAAAAIYINyUQAI8Adl0AAAAAhgjGGF4BkACOXQAAAACGCHMfEACRAJldAAAAAIYI
ahZeAZIAsV0AAAAAhggZIBAAkwC8XQAAAACGCOEWXgGUANRdAAAAAIYIJB8QAJUA310AAAAAhghM
Fl4BlgD3XQAAAACGCOsfEACXAAJeAAAAAIYIwRZeAZgAGl4AAAAAhgjFHxAAmQAlXgAAAACGCKUW
XgGaAD1eAAAAAIYIoR8QAJsASF4AAAAAhgiKFl4BnABgXgAAAACGCFgGEACdAGteAAAAAIYIiBFe
AZ4AwmAAAAAAhgA3JwYAnwDKYAAAAACGABYlBgCfADVcAAAAAIYAGSVoAJ8ANFgAAAAAhhhjII8D
nwA9XAAAAACGCPoGEACiAEdcAAAAAIYIxBFeAaMAXlwAAAAAhggJBQEApABtXAAAAACGCE4QXgGl
AAlhAAAAAIYIRQUBAKYAjlwAAAAAhgiHEF4BpwDrYAAAAACGCL4EAQCoAK9cAAAAAIYIABBeAakA
+mAAAAAAhgjhBAEAqgDQXAAAAACGCDEQXgGrABhhAAAAAIYILwUBAKwA8VwAAAAAhghqEF4BrQAn
YQAAAACGCKgEAQCuABJdAAAAAIYI4w9eAa8ANmEAAAAAhggoIwEAsAAzXQAAAACGCK4XXgGxAEVh
AAAAAIYI1iMBALIAVF0AAAAAhggpGF4BswBUYQAAAACGCPwiAQC0AHZdAAAAAIYIjxdeAbUAZGEA
AAAAhgimIwEAtgCZXQAAAACGCAgYXgG3AHRhAAAAAIYIfiMBALgAvF0AAAAAhgjrF14BuQCEYQAA
AACGCFgjAQC6AN9dAAAAAIYIzxdeAbsAwmAAAAAAhgA3JwYAvADKYAAAAACGABYlBgC8ADVcAAAA
AIYAGSVoALwAlGEAAAAAhhhjIAYAvAC0YQAAAADGAKImmAS8AA9iAAAAAMYBXiQGAMAAFGIAAAAA
gQCUBAYAwACMYgAAAADGAK8mXwTAAA9iAAAAAMYBgiQGAMQAWWMAAAAAxgGGJosExAAPYgAAAADG
AUgniwTFAGxjAAAAAIYYYyCiBMYAe2MAAAAAhhhjIKIExwCKYwAAAACDGGMgBgDIAJJjAAAAAJMI
mB6pBMgAvmMAAAAAkwhpCTsCyADFYwAAAACTCHUJrwTIAM1jAAAAAJYIKyW2BMkA1GMAAAAAhhhj
IAYAyQDcYwAAAACRGGkguwTJAAAAAQBkJAAAAgB5IAAAAwDFIgAABAD/HAAAAQA8AQAAAgAOBwAA
AwARJwAABADkJAAABQCqHQAABgBJBwAABwANCQAACACiBgAACQDXJgAACgBPJQAACwCMHwAADAAz
IAAADQA7HwAADgAEIAAADwDaHwAAEAC1HwAAEQBuBgAAAQDqJgAAAgBjAQAAAwA+DAAABAAKBAAA
BQA2BgAABgC1GgAABwB4BgAAAQCRHgAAAQB4JwAAAQCRHgAAAgCZIQAAAwD/HAAAAQCRHgAAAgCZ
IQAAAwD/HAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAA
AQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBK
DAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAA
AQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBK
DAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAA
AQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBK
DAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAA
AQBKDAAAAQCRHgAAAgCZIQAAAwD/HAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBK
DAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAA
AQBKDAAAAQCRHgAAAgCZIQAAAwD/HAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBK
DAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAA
AQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBK
DAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAA
AQCRHgAAAgCZIQAAAwD/HAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBK
DAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAA
AQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBKDAAAAQBK
DAAAAQBLAQAAAgCOBwAAAwCRHgAABAD/HAAAAQBkJAAAAgB5IAAAAwDFIgAABAD/HAAAAQCRHgAA
AQB4JwAAAQCeJQAAAQCeJQAAAQBKDAkAYyABABEAYyAGABkAYyAKACkAYyAQADEAYyAQADkAYyAQ
AEEAYyAQAEkAYyAQAFEAYyAQAFkAYyAQAGEAYyAQAGkAYyAGAFEBYyAGAHEBYyAVAIEBYyAGAEkB
CQwGAEkB4gMpAIkB5RsvAJEBVSA1AKkAqCU6ALEALAc+AJkBxyFCALEAyhtHAKEBVSA1AIEALAc+
AAwAagRVABQAtCVkABQAagRVAKkAuyZoALkA2gkGAEkBUwFwAJkB6Sd3AJkBEQ1kAKkBKBp9AJkB
oAyDAJkBAxo+AJkA9wx3AJkBnyRLARwAagRVAMkAYyAQAMkAzSJYAckAeyFeAckAuyJjAckAliBo
AbEBgww+APkAQAY+AJkBnyRtASQArSd6ASQAtCVkACQAagRVACwAVSCGATQAqCWVATQAuyZoAJkB
9Sd3AAwAliSaATwAVSCtAUQAqCWVAUQAuyZoACQAliSaAUwAVSCtAVQAqCWVAQwArSd6AVQAuyZo
AIkBLAc+AIkBTh/OASQA6hnZAYkANycGABQA6hnZAQwA6hnZAYEA6AjgATEBgww+AIEAEQ1kAJkB
nyTlAYEAIRtkAJkBnyTtAYEAgAZkACwAziF6AYkA4hkBAIkAPicGALkB6Qn0AYkAFBr5AQEB6Qn/
AYkAMA0GAhwAVSAOAlwAqCUiAmQApSeVAWQAMAw2ApkAGgbtAVwAuyZoAGEBkQk7AgkBpiRBAgkB
6QlQAgkBOAhXAqEAUAhdAgkBUB1kAAkBHA1kAAkBjSdkAAkBcCBkAAkBFAxkAAkB/wVkAAkBCgZk
AEEBYyBoAokALAhzAiEB6Ql7AokASAiCAokAuCSKAikB6QmSAokA7QWZAtEB6QmhAokAHwymAtkB
6QmsAokA8wCxArEB6Qm3AokAsQC8AuEB6QnCAokA4ADHAmwArSd6AWwA6hnZAZkA9wxCAIkAlgzV
AukB6QnbAokA8AbgAvEB6QnmAokAwgbrApkBFijxAvkB6Qn0AokAKAz5AgEC6Qn/AokA6QAEAwkC
6QkKA4kAngAPAxEC6QkVA4kA1gAaA5kBrB4+AMkA9QU+AIkAdCdoAMkA+ANoAMkA1AkGAHkAOw1U
AwwAYyAGACQAYyAGAGwAYyAGACwAiR0GAJkBJSVZAywAYyBgA5kAJSVyA2wAiR0GAJkAYyAQAGwA
agRVAKEAUwR5AxwAYyAGAHkAvglUAwwAYyB/AxQAYyAGACQAYyB/AywAYyB/A2wAYyB/A6EAJg2K
AzkBYyCPAzkBkR6ZAzkBmSGdA4kAjAxjATkB2xmhA4kAqACmAzkBdCdoADkBGSVoADkB8xmrAzkB
4hkBADECYyAQADkBNycGADkBFiUGAEkBYyAGAJkBxyGxA0kBrSG5A4kABiVoADEBYyAGAEEC3ga/
A0ECuSfIA1kBYyDOA3kBYyAGAC4ACwDiBC4AEwDrBC4AGwAKBS4AIwATBS4AKwA8BS4AMwA8BS4A
OwA8BS4AQwATBS4ASwBCBS4AUwA8BS4AWwBZBUMAYwCjBWMBawCjBcEIewCjBekZcwAKBQkacwAK
BRwAbACJACADJAMDAAEABABBAAUAgwAGAJMABwC1AAsAzwAMANEAAAAzG78EAABhFcMEAAB8B78E
AAArEsMEAADCJccEAAAHGcMEAAB9CMcEAADsEsMEAABDJr8EAAAiGcMEAAAMJMcEAABPGMMEAABF
CccEAABfE8MEAADZDMcEAAAdFMMEAADKJ78EAAC8GcMEAABSA78EAAB8D8MEAAAmA78EAABdD8ME
AAD0Ar8EAAA7D8MEAADQAr8EAAAgD8MEAAA0JL8EAABsGMMEAADWCL8EAAAIE8MEAAA7Gr8EAACw
FMMEAACNGr8EAADrFMMEAABfGr8EAADLFMMEAAANIr8EAAA+F8MEAAAvIr8EAABYF8MEAACTIr8E
AAB0F8MEAADFGr8EAAAfFcMEAADzGr8EAAA/FcMEAABdHccEAAASFsMEAADbIb8EAAAcF8MEAAAD
Ar8EAACIDsMEAAAiAr8EAACuDsMEAABOAr8EAADNDsMEAAB+Ar8EAADuDsMEAAC1Ab8EAABYDsME
AACUAb8EAAAwDsMEAACCA78EAACdD8MEAADcBb8EAABIEcMEAABeBccEAACnEMMEAACuBb8EAAAM
EcMEAAD8B78EAAB/EsMEAADKB78EAAA/EsMEAACNDb8EAABcFMMEAAB9Bb8EAADNEMMEAADGBb8E
AAArEcMEAAAXCL8EAAChEsMEAADkB78EAABgEsMEAACxDb8EAACHFMMEAABvDb8EAAA3FMMEAACS
HL8EAADxFcMEAABBCr8EAADmE8MEAAAWCr8EAACtE8MEAABRG78EAAB5FcMEAAB3HL8EAADPFcME
AABnJb8EAADpGMMEAADzCb8EAAB8E8MEAACaBb8EAADxEMMEAACAJ78EAACqGcMEAAAlCb8EAABE
E8MEAABgCMsEAADBEsMEAABwCMcEAADYEsMEAAAtCr8EAADLE8MEAAAECr8EAACUE8MEAAB/G8cE
AAC1FcMEAABpG78EAACYFcMEAADXBL8EAAAgEMMEAABwJL8EAACMGMMEAAAoIb8EAAAGF8MEAAB3
B78EAAAmEsMEAAApJ78EAACRGcMEAAB8B78EAAArEsMEAADqJr8EAABYGcMEAABjAb8EAAAVDsME
AAA+DL8EAAAGFMMEAAAKBL8EAADND8MEAAA2Br8EAABkEcMEAAC1Gr8EAAAIFcMEAAB4Br8EAACW
EcMEAAAtAccEAAD7DcMEAAD+Br8EAADIEcMEAAD9Jr8EAAByGcMEAADOJMcEAACpGMMEAACYHccE
AAAzFsMEAAA5B78EAADjEcMEAAD5CL8EAAAlE8MEAACOBr8EAACpEcMEAADIJr8EAAA+GcMEAAA7
Jb8EAADKGMMEAAB3H78EAABuFsMEAAAdIL8EAADlFsMEAAAoH78EAABQFsMEAADvH78EAADFFsME
AADJH78EAACpFsMEAAClH78EAACOFsMEAABcBr8EAACMEcMEAAD+Br8EAADIEcMEAAANBccEAABS
EMMEAABJBccEAACLEMMEAADCBMcEAAAEEMMEAADlBMcEAAA1EMMEAAAzBccEAABuEMMEAACsBMcE
AADnD8MEAAAsI8cEAACyF8MEAADaI8cEAAAtGMMEAAAAI8cEAACTF8MEAACqI8cEAAAMGMMEAACC
I8cEAADvF8MEAABcI8cEAADTF8MEAACcHtEEAACeCdcEAAAvJd0EAgALAAMAAgAMAAUAAgANAAcA
AgAOAAkAAgAPAAsAAgAQAA0AAgARAA8AAgASABEAAgATABMAAgAUABUAAgAVABcAAgAWABkAAgAX
ABsAAgAYAB0AAgAZAB8AAgAaACEAAgAbACMAAgAcACUAAgAdACcAAgAeACkAAgAfACsAAgAgAC0A
AgAhAC8AAgAiADEAAgAjADMAAgAkADUAAgAlADcAAgAmADkAAgAnADsAAgAoAD0AAgApAD8AAgAq
AEEAAgArAEMAAgAsAEUAAgAtAEcAAgAuAEkAAgAvAEsAAgAwAE0AAgAxAE8AAgAyAFEAAgAzAFMA
AgA0AFUAAgA1AFcAAgA2AFkAAgA3AFsAAgA4AF0AAgA5AF8AAgA6AGEAAgA7AGMAAgA8AGUAAgA9
AGcAAgA+AGkAAgA/AGsAAgBAAG0AAgBBAG8AAgBCAHEAAgBDAHMAAgBEAHUAAgBFAHcAAgBGAHkA
AgBHAHsAAgBIAH0AAgBJAH8AAgBKAIEAAQBOAIMAAQBPAIUAAQBQAIcAAQBRAIkAAQBSAIsAAQBT
AI0AAQBUAI8AAQBVAJEAAQBWAJMAAQBXAJUAAQBYAJcAAQBZAJkAAQBaAJsAAQBbAJ0AAQBcAJ8A
AQBdAKEAAQBeAKMAAQBfAKUAAQBgAKcAAQBhAKkAAQBiAKsAAQBjAK0AAQBkAK8AAQBlALEAAQBm
ALMAAQBnALUAAQBoALcAAQBpALkAAQBqALsAAQBrAL0AAQBsAL8AAQBtAMEAAQBuAMMAAQBvAMUA
AQBwAMcAAQBxAMkAAQByAMsAAQBzAM0AAQB0AM8AAQB1ANEAAQB2ANMAAQB3ANUAAQB4ANcAAQB5
ANkAAQB6ANsAAQB7AN0AAQB8AN8AAQB9AOEAAQB+AOMAAQB/AOUAAQCAAOcAAQCBAOkAAQCCAOsA
AQCDAO0AAQCEAO8AAQCFAPEAAQCGAPMAAQCHAPUAAQCIAPcAAQCJAPkAAQCKAPsAAQCLAP0AAQCM
AP8AAQCNAAEBAQCOAAMBAQCPAAUBAQCUAAcBAQCVAAkBAQCWAAsBAQCXAA0BAQCYAA8BAQCZABEB
AQCaABMBAQCbABUBAQCcABcBAQCdABkBAQCeABsBAQCfAB0BAQCgAB8BAQChACEBAQCiACMBAQCj
ACUBAQCoACcBAQCpACkBAQCqACsBAQCrAC0BAQCsAC8BAQCtADEBAQCuADMBAQCvADUBAQCwADcB
AQCxADkBAQCyADsBAQCzAD0BAQC0AD8BAQC1AEEBAQC2AEMBAQC3AEUBAQC4AEcBAQC5AEkBAQC6
AEsBAQC7AE0BAQC8AE8BAQC9AFEBAQC+AFMBAQC/AFUBAQDAAFcBAQDBAFkBAQDCAFsBAQDDAF0B
AQDEAF8BAQDFAGEBAQDGAGMBAQDHAGUBAQDIAGcBAQDJAGkBAQDOAGsBAQDPAG0BAQDQAG8BAQDR
AHEBAQDSAHMBAQDTAHUBAQDUAHcBAQDVAHkBAQDWAHsBAQDXAH0BAQDYAH8BAQDZAIEBAQDaAIMB
AQDbAIUBAQDcAIcBAQDdAIkBAQDeAIsBAQDfAI0BAQDgAI8BAQDhAJEBAQDiAJMBAQDjAJUBAQDk
AJcBAQDlAJkBAQDmAJsBAQDnAJ0BAgD2AJ8BAgD3AKEBAQD4AKEBAgD5AKMBTQBdAFEBcwGAAY8B
pQG4AcABxwEaAi4CzQIEgAAAAQAAAAAAAAAAAAAAAAD8AAAABAAAAAAAAAAAAAAA1gMZBAAAAAAQ
AAAAAAAAAAAAAADfA+IlAAAAABAAAAAAAAAAAAAAAN8DLB0AAAAAEAAAAAAAAAAAAAAA3wNlJgAA
AAAEAAAAAAAAAAAAAADWAzUJAAAAAAQAAAAAAAAAAAAAANYD/BkAAAAACgAAAAAAAAAAAAAA6AM9
BAAAAAAQAAAAAAAAAAAAAADfAwkdAAAAAAAAAAABAAAA0iAAAAAAAAAASURUU0NvbXBvbmVudE1l
dGFEYXRhMTAwAElEVFNPdXRwdXRDb2x1bW4xMDAASURUU091dHB1dENvbHVtbkNvbGxlY3Rpb24x
MDAASURUU091dHB1dENvbGxlY3Rpb24xMDAASURUU091dHB1dDEwMABJRW51bWVyYWJsZWAxAElF
cXVhbGl0eUNvbXBhcmVyYDEASGFzaFNldGAxAFNldFVJbnQzMgBHZXRJbnQzMgBTZXRJbnQzMgBL
ZXlWYWx1ZVBhaXJgMgBEaWN0aW9uYXJ5YDIAU2V0VUludDY0AFNldEludDY0AFNldFVJbnQxNgBT
ZXRJbnQxNgBTQ18wRThCNEU0Nzc0MDI0QzA0QTMwODFBREQxNUY5ODFGNwA8TW9kdWxlPgBzZXRf
UGFyc2VDb250cm9sSUQAcGFyc2VDb250cm9sSUQASW5wdXRJRABHZXRPdXRwdXRJRABzZXRfTG9v
a3VwV29ya2RheUlEAHN0cmlwVW5pY29kZUZyb21Ob25Vbmljb2RlWU4AZ2V0X1N0cmlwVW5pY29k
ZWZyb21Ob25Vbmljb2RlWU4AZ2V0X0ZhaWxPbk1pc3NpbmdNYW5kYXRvcnlDb2x1bW5JbkxpbmVZ
TgBmYWlsT25NaXNzaW5nTWFuZGF0b3J5Q29sdW1uSW5MaW5lWU4AZ2V0X0NvbHVtbk5hbWVzQ2Fz
ZVNlbnNpdGl2ZVlOAGdldF9GYWlsT25FeHRyYUNvbHVtbllOAGZhaWxPbkV4dHJhQ29sdW1uWU4A
Z2V0X0ZhaWxPbk1pc3NpbmdDb2x1bW5ZTgBmYWlsT25NaXNzaW5nQ29sdW1uWU4AZ2V0X0ZhaWxP
bk1pc3NpbmdNYW5kYXRvcnlDb2x1bW5JbkhlYWRlcllOAGZhaWxPbk1pc3NpbmdNYW5kYXRvcnlD
b2x1bW5JbkhlYWRlcllOAGdldF9GaXhEYXRlVmFsdWVzWU4AZml4RGF0ZVZhbHVlc1lOAGdldF9U
cnVuY2F0ZVN0cmluZ1ZhbHVlc1lOAHRydW5jYXRlU3RyaW5nVmFsdWVzWU4AZ2V0X0FsbG93RXh0
cmFDb2x1bW5zWU4AYWxsb3dFeHRyYUNvbHVtbnNZTgBnZXRfQWxsb3dNaXNzaW5nQ29sdW1uc1lO
AGFsbG93TWlzc2luZ0NvbHVtbnNZTgBnZXRfQ29udmVydFRocmVlQ2hhclRpbWV6b25lZHRvT2Zm
c2V0c1lOAGNvbnZlcnRUaHJlZUNoYXJUenNUb09mZnNldFlOAE1pY3Jvc29mdC5WaXN1YWxCYXNp
Yy5GaWxlSU8AZ2V0X0NvbXBvbmVudE1ldGFEYXRhAGdldF9FbmRPZkRhdGEAc2V0X0FkZGl0aW9u
YWxEYXRhAG1zY29ybGliAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAE1pY3Jvc29mdC5WaXN1
YWxCYXNpYwBGaW5kU3lzdGVtVGltZVpvbmVCeUlkAEFkZAB0b3RhbFBhcnNlRXZlbnRzTG9nZ2Vk
AElucHV0c0ZpbmlzaGVkAE1hcmtPdXRwdXRzRmluaXNoZWQAc2V0X1RvdGFsRmllbGRzRmFpbGVk
AHNldF9Ub3RhbExpbmVzRmFpbGVkAHNldF9zY2hlZHVsZWQAc2V0X1RvdGFsRmllbGRzUGFyc2Vk
AHRvdGFsRmllbGRzUGFyc2VkAHNldF9Ub3RhbExpbmVzUGFyc2VkAHRvdGFsTGluZXNQYXJzZWQA
c2V0X1RvdGFsRmllbGRzUGFzc2VkAHNldF9Ub3RhbExpbmVzUGFzc2VkAHNldF9jYWxlbmRhcm93
bmVyaW50ZWdyYXRpb25pZABzZXRfcGFydGljaXBhbnRpbnRlZ3JhdGlvbmlkAHNldF9jb3Vyc2Vz
ZWN0aW9uaWQAc2V0X2NhbGVuZGFyb3duZXJ1c2VyaWQAc2V0X3BhcnRpY2lwYW50dXNlcmlkAHNl
dF9hcHBvaW50bWVudGV4dGlkAFNldEd1aWQAUmVhZFRvRW5kAGdldF9TZWNvbmQAZ2V0X01pbGxp
c2Vjb25kAFJlcGxhY2UAZGVmYXVsdEluc3RhbmNlAHNldF9FcnJvckNvZGUAZ2V0X01lc3NhZ2UA
c2V0X01lc3NhZ2UAc2V0X1BhcnNlRXJyb3JNZXNzYWdlAHBhcnNlRXJyb3JNZXNzYWdlAGdldF9T
Y2FsZQBzZXRfVGFyZ2V0RmllbGROdWxsYWJsZQB0YXJnZXRGaWVsZE51bGxhYmxlAElEaXNwb3Nh
YmxlAFNldERvdWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBTZXRTaW5n
bGUAc2V0X1BhcnNlU291cmNlRmlsZQBwYXJzZVNvdXJjZUZpbGUAUGFyc2VGbGF0RmlsZQBnZXRf
TmFtZQBzZXRfVGFyZ2V0RmllbGROYW1lAHRhcmdldEZpZWxkTmFtZQBnZXRfRmlsZU5hbWUAc2V0
X0ZpbGVOYW1lAHNldF9JbnB1dEZpbGVOYW1lAGZpbGVOYW1lAElucHV0TmFtZQBmbGF0ZmlsZUNv
bHVtbnNCeU5hbWUAbWFpbk91dHB1dENvbHVtbnNCeU5hbWUAc2V0X2NhbGVuZGFyb3duZXJsYXN0
bmFtZQBzZXRfcGFydGljaXBhbnRsYXN0bmFtZQBzZXRfY2FsZW5kYXJvd25lcmZpcnN0bmFtZQBz
ZXRfcGFydGljaXBhbnRmaXJzdG5hbWUAU2V0RGF0ZVRpbWUAVG9Vbml2ZXJzYWxUaW1lAFNldFRp
bWUAQ29udmVydFRpbWUAc2V0X2Fycml2YWx0aW1lAHNldF93YWl0dGltZQBnZXRfQ29sdW1uSGVh
ZGVyTGluZQBjb2x1bW5IZWFkZXJMaW5lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5l
AGNvbnZlcnRUb1RpbWVab25lAGdldF9Db252ZXJ0dG9UaW1lWm9uZQBnZXRfRGF0YVR5cGUAc2V0
X1RhcmdldEZpZWxkRGF0YVR5cGUAdGFyZ2V0RmllbGREYXRhVHlwZQBzZXRfYXBwb2ludG1lbnR0
eXBlAFN5c3RlbS5Db3JlAGdldF9NYXhFcnJvcnNUb0lnbm9yZQBtYXhFcnJvcnNUb0lnbm9yZQBn
ZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAZ2V0X0ludmFyaWFudEN1bHR1
cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAZ2V0X09yZGluYWxJZ25vcmVDYXNlAENsb3NlAERp
c3Bvc2UAcmVhZHlUb1BhcnNlAHNldF9jYW5jZWxlZGRhdGUAc2V0X2FjdHVhbGVuZGRhdGUAc2V0
X2FwcG9pbnRtZW50ZW5kZGF0ZQBzZXRfYWN0dWFsc3RhcnRkYXRlAHNldF9hcHBvaW50bWVudHN0
YXJ0ZGF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBE
ZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJv
d3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtB
dHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0
dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlv
bnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0
cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29t
cGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAGdl
dF9NaW51dGUAU2V0U0J5dGUAU2V0Qnl0ZQBnZXRfVmFsdWUAc2V0X0xvb2t1cFZhbHVlAHZhbHVl
AGNvbHVtbk5hbWVzQ2FzZVNlbnNpdGl2ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3Ry
aW5nAEdldFN0cmluZwBTZXRTdHJpbmcAU3Vic3RyaW5nAEFkZEZpZWxkTGV2ZWxQYXJzZUxvZwBB
ZGRGaWxlTGV2ZWxQYXJzZUxvZwBnZXRfTWF4RXZlbnRzVG9Mb2cAbWF4RXZlbnRzVG9Mb2cASXNN
YXRjaABNYXRoAGZpbGVGdWxsUGF0aABnZXRfTGVuZ3RoAGdldF9Nb250aABnZXRfTG9jYWwAU2V0
RGVjaW1hbABnZXRfT3JkaW5hbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAcGFyc2VMb2dMZXZlbABz
ZXRfcGFydGljaXBhbnRhbHRlcm5hdGVlbWFpbABzZXRfY2FsZW5kYXJvd25lcmluc3RpdHV0aW9u
YWxlbWFpbABzZXRfcGFydGljaXBhbnRpbnN0aXR1dGlvbmFsZW1haWwAU0NfMEU4QjRFNDc3NDAy
NEMwNEEzMDgxQUREMTVGOTgxRjcuZGxsAHNldF9QYXJzZUNvbnRyb2xJRF9Jc051bGwAc2V0X0xv
b2t1cFdvcmtkYXlJRF9Jc051bGwAZ2V0X1N0cmlwVW5pY29kZWZyb21Ob25Vbmljb2RlWU5fSXNO
dWxsAGdldF9GYWlsT25NaXNzaW5nTWFuZGF0b3J5Q29sdW1uSW5MaW5lWU5fSXNOdWxsAGdldF9D
b2x1bW5OYW1lc0Nhc2VTZW5zaXRpdmVZTl9Jc051bGwAZ2V0X0ZhaWxPbkV4dHJhQ29sdW1uWU5f
SXNOdWxsAGdldF9GYWlsT25NaXNzaW5nQ29sdW1uWU5fSXNOdWxsAGdldF9GYWlsT25NaXNzaW5n
TWFuZGF0b3J5Q29sdW1uSW5IZWFkZXJZTl9Jc051bGwAZ2V0X0ZpeERhdGVWYWx1ZXNZTl9Jc051
bGwAZ2V0X1RydW5jYXRlU3RyaW5nVmFsdWVzWU5fSXNOdWxsAGdldF9BbGxvd0V4dHJhQ29sdW1u
c1lOX0lzTnVsbABnZXRfQWxsb3dNaXNzaW5nQ29sdW1uc1lOX0lzTnVsbABnZXRfQ29udmVydFRo
cmVlQ2hhclRpbWV6b25lZHRvT2Zmc2V0c1lOX0lzTnVsbABzZXRfQWRkaXRpb25hbERhdGFfSXNO
dWxsAHNldF9Ub3RhbEZpZWxkc0ZhaWxlZF9Jc051bGwAc2V0X1RvdGFsTGluZXNGYWlsZWRfSXNO
dWxsAHNldF9zY2hlZHVsZWRfSXNOdWxsAHNldF9Ub3RhbEZpZWxkc1BhcnNlZF9Jc051bGwAc2V0
X1RvdGFsTGluZXNQYXJzZWRfSXNOdWxsAHNldF9Ub3RhbEZpZWxkc1Bhc3NlZF9Jc051bGwAc2V0
X1RvdGFsTGluZXNQYXNzZWRfSXNOdWxsAHNldF9jYWxlbmRhcm93bmVyaW50ZWdyYXRpb25pZF9J
c051bGwAc2V0X3BhcnRpY2lwYW50aW50ZWdyYXRpb25pZF9Jc051bGwAc2V0X2NvdXJzZXNlY3Rp
b25pZF9Jc051bGwAc2V0X2NhbGVuZGFyb3duZXJ1c2VyaWRfSXNOdWxsAHNldF9wYXJ0aWNpcGFu
dHVzZXJpZF9Jc051bGwAc2V0X2FwcG9pbnRtZW50ZXh0aWRfSXNOdWxsAHNldF9FcnJvckNvZGVf
SXNOdWxsAHNldF9NZXNzYWdlX0lzTnVsbABzZXRfUGFyc2VFcnJvck1lc3NhZ2VfSXNOdWxsAHNl
dF9UYXJnZXRGaWVsZE51bGxhYmxlX0lzTnVsbABzZXRfUGFyc2VTb3VyY2VGaWxlX0lzTnVsbABz
ZXRfVGFyZ2V0RmllbGROYW1lX0lzTnVsbABnZXRfRmlsZU5hbWVfSXNOdWxsAHNldF9GaWxlTmFt
ZV9Jc051bGwAc2V0X0lucHV0RmlsZU5hbWVfSXNOdWxsAHNldF9jYWxlbmRhcm93bmVybGFzdG5h
bWVfSXNOdWxsAHNldF9wYXJ0aWNpcGFudGxhc3RuYW1lX0lzTnVsbABzZXRfY2FsZW5kYXJvd25l
cmZpcnN0bmFtZV9Jc051bGwAc2V0X3BhcnRpY2lwYW50Zmlyc3RuYW1lX0lzTnVsbABzZXRfYXJy
aXZhbHRpbWVfSXNOdWxsAHNldF93YWl0dGltZV9Jc051bGwAZ2V0X0NvbHVtbkhlYWRlckxpbmVf
SXNOdWxsAGdldF9Db252ZXJ0dG9UaW1lWm9uZV9Jc051bGwAc2V0X1RhcmdldEZpZWxkRGF0YVR5
cGVfSXNOdWxsAHNldF9hcHBvaW50bWVudHR5cGVfSXNOdWxsAGdldF9NYXhFcnJvcnNUb0lnbm9y
ZV9Jc051bGwAc2V0X2NhbmNlbGVkZGF0ZV9Jc051bGwAc2V0X2FjdHVhbGVuZGRhdGVfSXNOdWxs
AHNldF9hcHBvaW50bWVudGVuZGRhdGVfSXNOdWxsAHNldF9hY3R1YWxzdGFydGRhdGVfSXNOdWxs
AHNldF9hcHBvaW50bWVudHN0YXJ0ZGF0ZV9Jc051bGwAc2V0X0xvb2t1cFZhbHVlX0lzTnVsbABn
ZXRfTWF4RXZlbnRzVG9Mb2dfSXNOdWxsAHNldF9wYXJ0aWNpcGFudGFsdGVybmF0ZWVtYWlsX0lz
TnVsbABzZXRfY2FsZW5kYXJvd25lcmluc3RpdHV0aW9uYWxlbWFpbF9Jc051bGwAc2V0X3BhcnRp
Y2lwYW50aW5zdGl0dXRpb25hbGVtYWlsX0lzTnVsbABnZXRfV29ya2RheUlEQ29sdW1uX0lzTnVs
bABnZXRfQWRkaXRpb25hbERhdGFDb2x1bW5fSXNOdWxsAGdldF9Mb29rdXBWYWx1ZUNvbHVtbl9J
c051bGwAc2V0X0Vycm9yQ29sdW1uX0lzTnVsbABnZXRfRmlsZU5hbWVPdXRwdXRDb2x1bW5fSXNO
dWxsAGdldF9SZWNvcmRUZXh0T3V0cHV0Q29sdW1uX0lzTnVsbABnZXRfRmlsZUxvY2F0aW9uX0lz
TnVsbABzZXRfYXBwb2ludG1lbnRsb2NhdGlvbl9Jc051bGwAc2V0X3NjaGVkdWxlZGR1cmF0aW9u
X0lzTnVsbABzZXRfYWN0dWFsZHVyYXRpb25fSXNOdWxsAHNldF9hcHBvaW50bWVudGRlc2NyaXB0
aW9uX0lzTnVsbABzZXRfYXBwb2ludG1lbnR0eXBlcmVhc29uX0lzTnVsbABnZXRfRWFybGllc3RB
bGxvd2FibGVZZWFyX0lzTnVsbABzZXRfVGFyZ2V0RmllbGROdW1iZXJfSXNOdWxsAHNldF9QYXJz
ZURhdGFUeXBlRXJyb3JfSXNOdWxsAHNldF9QYXJzZVRydW5jYXRpb25FcnJvcl9Jc051bGwAc2V0
X1BhcnNlT3RoZXJFcnJvcl9Jc051bGwAc2V0X1BhcnNlRm9ybWF0RXJyb3JfSXNOdWxsAHNldF9Q
YXJzZUZpZWxkQ291bnRFcnJvcl9Jc051bGwAc2V0X1BhcnNlTnVsbGFiaWxpdHlFcnJvcl9Jc051
bGwAc2V0X2FjdGl2aXRpZXNfSXNOdWxsAGdldF9Ob25UcnVuY2F0ZWFibGVDb2x1bW5zX0lzTnVs
bABnZXRfTm90TnVsbENvbHVtbnNfSXNOdWxsAGdldF9NYW5kYXRvcnlDb2x1bW5zX0lzTnVsbABn
ZXRfQ29sdW1uUmVnZXhQYXR0ZXJuc19Jc051bGwAc2V0X1RvdGFsRGF0YVR5cGVFcnJvcnNfSXNO
dWxsAHNldF9Ub3RhbFRydW5jYXRpb25FcnJvcnNfSXNOdWxsAHNldF9Ub3RhbE90aGVyRXJyb3Jz
X0lzTnVsbABzZXRfVG90YWxGb3JtYXRFcnJvcnNfSXNOdWxsAHNldF9Ub3RhbEZpZWxkQ291bnRF
cnJvcnNfSXNOdWxsAHNldF9Ub3RhbE51bGxhYmlsaXR5RXJyb3JzX0lzTnVsbABnZXRfTWF4TGlu
ZXNUb1Byb2Nlc3NfSXNOdWxsAGdldF9BbGxvd2FibGVEYXRlRm9ybWF0c19Jc051bGwAc2V0X3dh
aXRpbmdyb29tc3RhdHVzX0lzTnVsbABzZXRfUGFyc2VTb3VyY2VMaW5lT2Zmc2V0X0lzTnVsbABz
ZXRfUGFyc2VQYXNzRmFpbFJlc3VsdF9Jc051bGwAc2V0X2FwcG9pbnRtZW50Y29tbWVudF9Jc051
bGwAZ2V0X0hlYWRlckxpbmVDb3VudF9Jc051bGwAZ2V0X0NvbHVtbkhlYWRlckxpc3RfSXNOdWxs
AHNldF9QYXJzZUZpZWxkVGV4dF9Jc051bGwAc2V0X0ZhaWxlZExpbmVUZXh0X0lzTnVsbABzZXRf
UGFyc2VTb3VyY2VMaW5lVGV4dF9Jc051bGwAc2V0X0lucHV0TGluZVRleHRfSXNOdWxsAHNldF9u
b3Nob3dfSXNOdWxsAGdldF9QYXJzZUxvZ0xldmVsQUVBbGxvckVycm9yc09ubHlfSXNOdWxsAFNl
dE51bGwAZ2V0X0l0ZW0Ac2V0X0l0ZW0AU3lzdGVtAFRyaW0AcmVzb3VyY2VNYW4AU2V0Qm9vbGVh
bgBUaW1lU3BhbgBNaW4AU2NyaXB0TWFpbgBnZXRfV29ya2RheUlEQ29sdW1uAHdvcmtkYXlJRENv
bHVtbgBnZXRfQWRkaXRpb25hbERhdGFDb2x1bW4AYWRkaXRpb25hbERhdGFDb2x1bW4AZ2V0X0xv
b2t1cFZhbHVlQ29sdW1uAGxvb2t1cFZhbHVlQ29sdW1uAHNldF9FcnJvckNvbHVtbgBnZXRfRmls
ZU5hbWVPdXRwdXRDb2x1bW4AZmlsZU5hbWVPdXRwdXRDb2x1bW4AZ2V0X1JlY29yZFRleHRPdXRw
dXRDb2x1bW4AcmVjb3JkVGV4dE91dHB1dENvbHVtbgBnZXRfUHJlY2lzaW9uAGdldF9GaWxlTG9j
YXRpb24AZmlsZUxvY2F0aW9uAHNldF9hcHBvaW50bWVudGxvY2F0aW9uAHNldF9zY2hlZHVsZWRk
dXJhdGlvbgBzZXRfYWN0dWFsZHVyYXRpb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkds
b2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AZ2V0X091dHB1dENvbHVtbkNvbGxlY3Rpb24A
Z2V0X091dHB1dENvbGxlY3Rpb24AS2V5Q29sbGVjdGlvbgBtYWluT3V0cHV0Q29sdW1uTmFtZXNC
eVBvc2l0aW9uAGZsYXRmaWxlQ29sdW1uc0J5UG9zaXRpb24ATWFsZm9ybWVkTGluZUV4Y2VwdGlv
bgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAHNldF9hcHBvaW50bWVudGRlc2NyaXB0aW9uAHNl
dF9hcHBvaW50bWVudHR5cGVyZWFzb24AU3RyaW5nQ29tcGFyaXNvbgBjb252ZXJ0VG9UaW1lWm9u
ZUluZm8AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABjb2x1bW5SZWdleFBhdHRlcm5NYXAAT3V0
cHV0TWFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAATWljcm9zb2Z0LlNxbFNl
cnZlci5EVFNQaXBlbGluZVdyYXAAZ2V0X1llYXIAZ2V0X0VhcmxpZXN0QWxsb3dhYmxlWWVhcgBl
YXJsaWVzdEFsbG93YWJsZVllYXIAQ2xlYXIAQ2hhcgBzZXRfVGFyZ2V0RmllbGROdW1iZXIAdGFy
Z2V0RmllbGROdW1iZXIASUZvcm1hdFByb3ZpZGVyAE91dHB1dEZpbGVEYXRhQnVmZmVyAFBpcGVs
aW5lQnVmZmVyAE91dHB1dEZpZWxkTGV2ZWxQYXJzZUxvZ2dpbmdCdWZmZXIAT3V0cHV0RmlsZUxl
dmVsUGFyc2VMb2dnaW5nQnVmZmVyAElucHV0Q29uZmlndXJhdGlvblBhcmFtZXRlckJ1ZmZlcgBP
dXRwdXRSZWNvcmRMZXZlbFBhcnNlRXJyb3JzQnVmZmVyAFNjcmlwdEJ1ZmZlcgBtYWluT3V0cHV0
QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIAVG9VcHBlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0
cy5SdW50aW1lLldyYXBwZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBl
cgBTdHJpbmdDb21wYXJlcgBUZXh0RmllbGRQYXJzZXIAc2V0X1BhcnNlRGF0YVR5cGVFcnJvcgBw
YXJzZURhdGFUeXBlRXJyb3IARmlyZUVycm9yAEFkZFJlY29yZExldmVsUGFyc2luZ0Vycm9yAHNl
dF9QYXJzZVRydW5jYXRpb25FcnJvcgBwYXJzZVRydW5jYXRpb25FcnJvcgBzZXRfUGFyc2VPdGhl
ckVycm9yAHBhcnNlT3RoZXJFcnJvcgBzZXRfUGFyc2VGb3JtYXRFcnJvcgBwYXJzZUZvcm1hdEVy
cm9yAHNldF9QYXJzZUZpZWxkQ291bnRFcnJvcgBwYXJzZUZpZWxkQ291bnRFcnJvcgBzZXRfUGFy
c2VOdWxsYWJpbGl0eUVycm9yAHBhcnNlTnVsbGFiaWxpdHlFcnJvcgBJRW51bWVyYXRvcgBHZXRF
bnVtZXJhdG9yAC5jdG9yAC5jY3RvcgBnZXRfSG91cgBPdXRwdXRJRHMAU3lzdGVtLkRpYWdub3N0
aWNzAFJlYWRGaWVsZHMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVz
b3VyY2VzAFNDXzZkNjlmMjhkNmY3MDRmOTk4Y2Q4MmZhMmIyZDNmNzYwLlByb3BlcnRpZXMuUmVz
b3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBzZXRfYWN0aXZpdGllcwBTQ182ZDY5ZjI4
ZDZmNzA0Zjk5OGNkODJmYTJiMmQzZjc2MC5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBEYXRlVGltZVN0
eWxlcwBzZXRfSGFzRmllbGRzRW5jbG9zZWRJblF1b3RlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdl
dENvbHVtbkluZGV4ZXMAU2V0dGluZ3MARXF1YWxzAENvbnRhaW5zAGdldF9Ob25UcnVuY2F0ZWFi
bGVDb2x1bW5zAG5vblRydW5jYXRlYWJsZUNvbHVtbnMAZ2V0X05vdE51bGxDb2x1bW5zAG5vdE51
bGxDb2x1bW5zAGdldF9NYW5kYXRvcnlDb2x1bW5zAG1hbmRhdG9yeUNvbHVtbnMAU3lzdGVtLlRl
eHQuUmVndWxhckV4cHJlc3Npb25zAFN5c3RlbS5Db2xsZWN0aW9ucwBDb25uZWN0aW9ucwBnZXRf
Q29sdW1uUmVnZXhQYXR0ZXJucwBjb2x1bW5SZWdleFBhdHRlcm5zAFBlZWtDaGFycwBCdWZmZXJz
AFNldERlbGltaXRlcnMAdG90YWxGaWVsZEVycm9ycwB0b3RhbExpbmVFcnJvcnMAc2V0X1RvdGFs
RGF0YVR5cGVFcnJvcnMAdG90YWxEYXRhVHlwZUVycm9ycwBzZXRfVG90YWxUcnVuY2F0aW9uRXJy
b3JzAHRvdGFsVHJ1bmNhdGlvbkVycm9ycwBzZXRfVG90YWxPdGhlckVycm9ycwB0b3RhbE90aGVy
RXJyb3JzAHNldF9Ub3RhbEZvcm1hdEVycm9ycwB0b3RhbEZvcm1hdEVycm9ycwBzZXRfVG90YWxG
aWVsZENvdW50RXJyb3JzAHRvdGFsRmllbGRDb3VudEVycm9ycwBzZXRfVG90YWxOdWxsYWJpbGl0
eUVycm9ycwB0b3RhbE51bGxhYmlsaXR5RXJyb3JzAGdldF9NYXhMaW5lc1RvUHJvY2VzcwBtYXhM
aW5lc1RvUHJvY2VzcwBnZXRfQWxsb3dhYmxlRGF0ZUZvcm1hdHMAYWxsb3dhYmxlRGF0ZUZvcm1h
dHMARmluaXNoT3V0cHV0cwBzZXRfd2FpdGluZ3Jvb21zdGF0dXMAQ3JlYXRlTmV3T3V0cHV0Um93
cwBnZXRfS2V5cwBDb25jYXQAUGFyc2VFeGFjdABPYmplY3QAU2V0RGF0ZVRpbWVPZmZzZXQAc2V0
X1BhcnNlU291cmNlTGluZU9mZnNldABwYXJzZVNvdXJjZUxpbmVPZmZzZXQAdHozVG9PZmZzZXQA
Z2V0X0VuZE9mUm93c2V0AFNldEVuZE9mUm93c2V0AFNwbGl0AGdldF9EZWZhdWx0AHNldF9QYXJz
ZVBhc3NGYWlsUmVzdWx0AHBhcnNlUGFzc0ZhaWxSZXN1bHQAc2V0X2FwcG9pbnRtZW50Y29tbWVu
dABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQAZ2V0X0N1cnJl
bnQAZ2V0X0NvdW50AGdldF9IZWFkZXJMaW5lQ291bnQAaGVhZGVyTGluZUNvdW50AE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuVHhTY3JpcHQAbm9uVHJ1bmNhdGVhYmxlQ29sdW1uTGlzdABub3ROdWxsQ29s
dW1uTGlzdABtYW5kYXRvcnlDb2x1bW5MaXN0AGdldF9Db2x1bW5IZWFkZXJMaXN0AGNvbHVtbkhl
YWRlckxpc3QATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QASW5wdXRDb25maWd1cmF0
aW9uUGFyYW1ldGVyX1Byb2Nlc3NJbnB1dABQcmltZU91dHB1dABNb3ZlTmV4dABzZXRfUGFyc2VG
aWVsZFRleHQAcGFyc2VGaWVsZFRleHQAc2V0X0ZhaWxlZExpbmVUZXh0AHNldF9QYXJzZVNvdXJj
ZUxpbmVUZXh0AHBhcnNlU291cmNlTGluZVRleHQAc2V0X0lucHV0TGluZVRleHQAQWRkUm93AFJl
bW92ZVJvdwBJbnB1dENvbmZpZ3VyYXRpb25QYXJhbWV0ZXJfUHJvY2Vzc0lucHV0Um93AE5leHRS
b3cAc2V0X25vc2hvdwBSZWdleABnZXRfRGF5AGRhdGVGb3JtYXRBcnJheQBnZXRfS2V5AENvbnRh
aW5zS2V5AGdldF9Bc3NlbWJseQBnZXRfUGFyc2VMb2dMZXZlbEFFQWxsb3JFcnJvcnNPbmx5AG9w
X0VxdWFsaXR5AG9wX0luZXF1YWxpdHkAY29sQ2FzZVNlbnNpdGl2aXR5AEVtcHR5AAAlTwB1AHQA
cAB1AHQAIAAtACAARgBpAGwAZQAgAEQAYQB0AGEAAQNFAAAJUABBAFMAUwAAC14ALgAqAFwAJAAA
A1wAAAdFAEQAVAAADS0AMAA0ADoAMAAwAAEHRQBTAFQAAA0tADAANQA6ADAAMAABB0MARABUAAAH
QwBTAFQAAA0tADAANgA6ADAAMAABB00ARABUAAAHTQBTAFQAAA0tADAANwA6ADAAMAABB1AARABU
AAAHUABTAFQAAA0tADAAOAA6ADAAMAABCUEASwBEAFQAAAlBAEsAUwBUAAANLQAwADkAOgAwADAA
AQdIAEQAVAAAB0gAUwBUAAANLQAxADAAOgAwADAAAQMsAAAHTgAvAEEAACtVAG4AYQBiAGwAZQAg
AHQAbwAgAHAAYQByAHMAZQAgAGwAaQBuAGUAIAAAFyAAbwBmACAAZgBpAGwAZQAuACAAWwAAA10A
AAEACUYAQQBJAEwAAANOAAADWQAAX0QAdQBwAGwAaQBjAGEAdABlACAAYwBvAGwAdQBtAG4AIABu
AGEAbQBlACAAZgBvAHUAbgBkACAAaQBuACAAaQBuAHAAdQB0ACAAcgBlAGMAbwByAGQAcwBlAHQA
LgAAXU0AYQBuAGQAYQB0AG8AcgB5ACAAYwBvAGwAdQBtAG4AIABtAGkAcwBzAGkAbgBnACAAZgBy
AG8AbQAgAGkAbgBwAHUAdAAgAHIAZQBjAG8AcgBkAHMAZQB0AC4AAHtXAG8AcgBrAGQAYQB5ACAA
SQBEACAAYwBvAGwAdQBtAG4AIAByAGUAcQB1AGUAcwB0AGUAZAAgAGIAdQB0ACAAbQBpAHMAcwBp
AG4AZwAgAGYAcgBvAG0AIABpAG4AcAB1AHQAIAByAGUAYwBvAHIAZABzAGUAdAAuAAB/TABvAG8A
awB1AHAAIABWAGEAbAB1AGUAIABjAG8AbAB1AG0AbgAgAHIAZQBxAHUAZQBzAHQAZQBkACAAYgB1
AHQAIABtAGkAcwBzAGkAbgBnACAAZgByAG8AbQAgAGkAbgBwAHUAdAAgAHIAZQBjAG8AcgBkAHMA
ZQB0AC4AAICFQQBkAGQAaQB0AGkAbwBuAGEAbAAgAEQAYQB0AGEAIABjAG8AbAB1AG0AbgAgAHIA
ZQBxAHUAZQBzAHQAZQBkACAAYgB1AHQAIABtAGkAcwBzAGkAbgBnACAAZgByAG8AbQAgAGkAbgBw
AHUAdAAgAHIAZQBjAG8AcgBkAHMAZQB0AC4AAHlDAG8AbAB1AG0AbgAgAG8AbgAgAG8AdQB0AHAA
dQB0ACAAcgBlAGMAbwByAGQAcwBlAHQAIABiAHUAdAAgAG0AaQBzAHMAaQBuAGcAIABmAHIAbwBt
ACAAaQBuAHAAdQB0ACAAcgBlAGMAbwByAGQAcwBlAHQALgAATUUAeAB0AHIAYQAgAGMAbwBsAHUA
bQBuACAAZgBvAHUAbgBkACAAbwBuACAAaQBuAHAAdQB0ACAAcgBlAGMAbwByAGQAcwBlAHQALgAA
UU0AYQBuAGQAYQB0AG8AcgB5ACAAQwBvAGwAdQBtAG4AIABNAGkAcwBzAGkAbgBnACAAZgByAG8A
bQAgAEkAbgBwAHUAdAAgAEYAaQBsAGUAAE9FAHgAcABlAGMAdABlAGQAIABDAG8AbAB1AG0AbgAg
AE0AaQBzAHMAaQBuAGcAIABmAHIAbwBtACAASQBuAHAAdQB0ACAARgBpAGwAZQAAS1UAbgBlAHgA
cABlAGMAdABlAGQAIABDAG8AbAB1AG0AbgAgAEYAbwB1AG4AZAAgAGkAbgAgAEkAbgBwAHUAdAAg
AEYAaQBsAGUAAC9EAFQAXwBCAFkAVABFAFMAfABEAFQAXwBTAFQAUgB8AEQAVABfAFcAUwBUAFIA
AAMoAAADKQAAK0QAVABfAEQARQBDAEkATQBBAEwAfABEAFQAXwBOAFUATQBFAFIASQBDAAARTgBP
AFQAIABOAFUATABMAAAJTgBVAEwATAAAT1UAbgBhAGIAbABlACAAdABvACAAYwBvAG4AdgBlAHIA
dAAgAHQAbwAgAHQAYQByAGcAZQB0ACAAZABhAHQAYQAgAHQAeQBwAGUAIABbAAAjRABhAHQAZQAg
AHcAaQB0AGgAIABZAGUAYQByACAAPAAgAAAzUwB0AHIAaQBuAGcAIAB3AG8AdQBsAGQAIABiAGUA
IAB0AHIAdQBuAGMAYQB0AGUAZAAACyAAYQBuAGQAIAAAb1MAdAByAGkAbgBnACAAdgBhAGwAdQBl
ACAAZgBhAGkAbABlAGQAIAB0AG8AIABtAGEAdABjAGgAIAByAGUAZwB1AGwAYQByACAAZQB4AHAA
cgBlAHMAcwBpAG8AbgAgAHAAYQB0AHQAZQByAG4AACNbAF4AXAB1ADAAMAAwADAALQBcAHUAMAAw
ADcARgBdACsAAQ1bAF4AAAAtAH8AXQABa1UAbgBpAGMAbwBkAGUAIABjAGgAYQByAGEAYwB0AGUA
cgAgAGYAbwB1AG4AZAAgAGYAbwByACAAbgBvAG4ALQB1AG4AaQBjAG8AZABlACAAdABhAHIAZwBl
AHQAIABjAG8AbAB1AG0AbgABT1QAaABlACAAZgBvAGwAbABvAHcAaQBuAGcAIABjAG8AbAB1AG0A
bgBzACAAZgBhAGkAbABlAGQAIAB0AG8AIABwAGEAcgBzAGUAOgAgAAAvQwB1AHMAdABvAG0AIABG
AGwAYQB0ACAARgBpAGwAZQAgAFAAYQByAHMAZQByAABTTQBhAHgAaQBtAHUAbQAgAE4AdQBtAGIA
ZQByACAAbwBmACAARQByAHIAbwByACAATABpAG4AZQBzACAAdABvACAASQBnAG4AbwByAGUAIAAo
AAApKQAgAGUAeABjAGUAZQBkAGUAZAAgAGkAbgAgAGYAaQBsAGUAIAAiAAAFIgAuAAADOgAANSgA
PwA8ACEAKAAkAHwAWwBeAFwAXABdACkAKABcAFwAXABcACkAKgA/AFwAXAApAFwALAAANSgAPwA8
ACEAKAAkAHwAWwBeAFwAXABdACkAKABcAFwAXABcACkAKgA/AFwAXAApAFwAOwAANSgAPwA8ACEA
KAAkAHwAWwBeAFwAXABdACkAKABcAFwAXABcACkAKgA/AFwAXAApAFwAOgAAgJtJAHMATgB1AGwA
bAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABG
AGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAA
YwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAD9JAG4AcAB1AHQAIAAtACAAQwBvAG4AZgBp
AGcAdQByAGEAdABpAG8AbgAgAFAAYQByAGEAbQBlAHQAZQByAAFFTwB1AHQAcAB1AHQAIAAtACAA
UgBlAGMAbwByAGQAIABMAGUAdgBlAGwAIABQAGEAcgBzAGUAIABFAHIAcgBvAHIAcwABRU8AdQB0
AHAAdQB0ACAALQAgAEYAaQBlAGwAZAAgAEwAZQB2AGUAbAAgAFAAYQByAHMAZQAgAEwAbwBnAGcA
aQBuAGcAAUNPAHUAdABwAHUAdAAgAC0AIABGAGkAbABlACAATABlAHYAZQBsACAAUABhAHIAcwBl
ACAATABvAGcAZwBpAG4AZwABcVMAQwBfADYAZAA2ADkAZgAyADgAZAA2AGYANwAwADQAZgA5ADkA
OABjAGQAOAAyAGYAYQAyAGIAMgBkADMAZgA3ADYAMAAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBS
AGUAcwBvAHUAcgBjAGUAcwAAAAAAU+dhDawgokO27vfKqyi17QAEIAEBCAMgAAEFIAEBEREEIAEB
DgYgAQERgLUMBwUSVRJZElUSQRJdBSAAEoDFBSAAEoDJBCAAElUDIAAcAyAADgQgAQIOBSAAEoDR
BxUSOQIOEkEHIAIBEwATAQYVEjkCCA4DIAAIAyAAAgMHAQgGAAIIEmEOBQACAg4OBQACCAgIBSAC
DggIgMAHahJlHQ4IAg4SaQICAgICHQ4IDhURbQEODhURdQIOEkEOFRF1Ag4IDgICAg4ODgIOCA4O
EkEODg4ODg4ODg4ODg4ReQgCAgICEn0RgIESfRGAhRURgIkCDg4VEYCNAg4OEn0RgIUSfRGAkRJ9
EYCREn0RgIUSfRGAhRJ9EYCFEn0RgIESfRGAhRJ9EYCVEn0EEn0GEn0IEn0KEn0OEn0RgIESfQwS
fQ0SfQ4SfQ4SfQUSfQcSfQkSfQsSfQ4SfQIFAAIODg4GFRI5Ag4OBSABAR0OBCABAQIEIAEOCAQg
AB0OBQABDh0OBhUSOQIOCAUgAQITAAUVEkkBDgggABURbQETAAUVEW0BDgQgABMACiAAFRJxAhMA
EwEHFRJxAg4SQQogABURdQITABMBBxURdQIOEkEGFRJxAg4IBhURdQIOCAogBgEIDg4OCBACBiAB
EwETAAQgABF5BwAEDg4ODg4GAAMODg4OBAABAg4FIAIBCAIGAAERgIEOByACAQgRgIELIAAVEYCJ
AhMAEwEHFRGAiQIODgsgABURgI0CEwATAQcVEYCNAg4OBCAAEwEFAAASgLEOAAQRgIUOHQ4SgOER
gOUGAAERgIUOBSAAEYCFCgACEYCFEYCFElEKIAcBCAgICAgICAcgAgEIEYChBgABEYCRDgcgAgEI
EYCRByACAQgRgIUGAAERgJUOByACAQgRgJUEAAEEDgUgAgEIBAQAAQYOBSACAQgGBAABCA4FIAIB
CAgEAAEKDgUgAgEICgcVEjkCDhJNBSACAQgOBAABDA4FIAIBCAwEAAENDgUgAgEIDQIGDgQAAQUO
BSACAQgFBAABBw4FIAIBCAcEAAEJDgUgAgEICQQAAQsOBSACAQgLAwcBAi8HFRUSOQIOEkEVEXUC
DhJBDh0OCB0OEk0CAgICAg4VEW0BDg4OFRF1Ag4IDgICAgQAABI9BiABHQ4dAxEgAgEVEoERARMA
FRKBFQETAAYAAh0ODg4FAAESUQ4KIAEBFRKBFQETAAQAABJRCSADARJFHQgSYQMGEkUDBh0IBCAB
AggEIAEICAUgAgEIHAcgAgIOEYEdBSABHQgICAABEoEhEYElBSAAEoEpByACAQ4SgSkIt3pcVhk0
4IkIiYRdzYCAzJEIsD9ffxHVCjoCBggHBhUSOQIODgMGEj0IBhUSOQIOEkEHBhUSOQIIDgcGFRI5
Ag4IAgYCBgYVEkkBDggGFRI5Ag4STQMGHQ4DBhJRAwYSJAMGEigDBhIQAwYSFAMGEhgDBhIcBAYS
gKUEBhKArQQGEoCxAwYSMAsgBAEIHQgdEkUSYRQgEQEIDg4ICA4ODg4ODg4ODg4ODgogBwEODg4O
Dg4OBSABARIMBiABARGAoQkgBAEIDhJFEmEGIAEBEoClBQAAEoCtBgABARKAsQQAABIwAwAAAQMo
AA4DKAACAygACAUoABGAoQUIABKArQUIABKAsQQIABIwCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9u
RXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ182ZDY5ZjI4ZDZmNzA0Zjk5OGNkODJmYTJi
MmQzZjc2MAAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE4AABJAQAaLk5FVEZyYW1ld29yayxW
ZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwQB
AAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2Nv
cmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3
N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAA
AAAAAABQQURQQURQtAAAAMTEAAAAAAAAAAAAAN7EAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQ
xAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACAAAAA
AAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWOAAAOwDAAAAAAAA
AAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAAAQAA
AAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBpAGwA
ZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsARMAwAAAQBT
AHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABiADAAAAAaAAEA
AQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAAAA
AAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfADYAZAA2ADkA
ZgAyADgAZAA2AGYANwAwADQAZgA5ADkAOABjAGQAOAAyAGYAYQAyAGIAMgBkADMAZgA3ADYAMAAA
ADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAHAAKAABAEkA
bgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AMABFADgAQgA0AEUANAA3ADcANAAwADIANABD
ADAANABBADMAMAA4ADEAQQBEAEQAMQA1AEYAOQA4ADEARgA3AC4AZABsAGwAAABIABIAAQBMAGUA
ZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAx
ADgAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8A
cgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwAwAEUAOABCADQARQA0ADcANwA0
ADAAMgA0AEMAMAA0AEEAMwAwADgAMQBBAEQARAAxADUARgA5ADgAMQBGADcALgBkAGwAbAAAAGgA
JAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8ANgBkADYAOQBmADIAOABkADYAZgA3
ADAANABmADkAOQA4AGMAZAA4ADIAZgBhADIAYgAyAGQAMwBmADcANgAwAAAANAAIAAEAUAByAG8A
ZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEAcwBzAGUAbQBi
AGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAwAAADwNAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_0e8b4e4774024c04a3081add15f981f7</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">09</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">94381dea27e8645a475f805c35e0543ae2a37b85</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">660e146c05f4964994d81b905bfb7715</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Inputs[Input - Configuration Parameter]"
                      description="Takes a set of input parameters and uses the first row that it finds."
                      hasSideEffects="true"
                      name="Input - Configuration Parameter">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Inputs[Input - Configuration Parameter].Columns[File Location]"
                          cachedDataType="wstr"
                          cachedLength="15"
                          cachedName="File Location"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[File Location]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Inputs[Input - Configuration Parameter].Columns[File Name]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="File Name"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[File Name]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Inputs[Input - Configuration Parameter].Columns[Header Line Count]"
                          cachedDataType="i4"
                          cachedName="Header Line Count"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Header Line Count]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Inputs[Input - Configuration Parameter].Columns[Column Header Line]"
                          cachedDataType="i4"
                          cachedName="Column Header Line"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Column Header Line]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Inputs[Input - Configuration Parameter].Columns[Column Header List]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="4000"
                          cachedName="Column Header List"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Column Header List]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Inputs[Input - Configuration Parameter].Columns[Max Lines To Process]"
                          cachedDataType="i4"
                          cachedName="Max Lines To Process"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Max Lines To Process]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Inputs[Input - Configuration Parameter].Columns[Max Errors To Ignore]"
                          cachedDataType="i4"
                          cachedName="Max Errors To Ignore"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Max Errors To Ignore]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Inputs[Input - Configuration Parameter].Columns[Max Events To Log]"
                          cachedDataType="i4"
                          cachedName="Max Events To Log"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Max Events To Log]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Inputs[Input - Configuration Parameter].Columns[Parse Log Level AE (All or Errors-Only)]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1"
                          cachedName="Parse Log Level AE (All or Errors-Only)"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Parse Log Level AE (All or Errors-Only)]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Inputs[Input - Configuration Parameter].Columns[Allow Missing Columns YN]"
                          cachedDataType="wstr"
                          cachedLength="1"
                          cachedName="Allow Missing Columns YN"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Allow Missing Columns YN]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Inputs[Input - Configuration Parameter].Columns[Allow Extra Columns YN]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1"
                          cachedName="Allow Extra Columns YN"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Allow Extra Columns YN]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Inputs[Input - Configuration Parameter].Columns[Truncate String Values YN]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1"
                          cachedName="Truncate String Values YN"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Truncate String Values YN]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Inputs[Input - Configuration Parameter].Columns[Fix Date Values YN]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Fix Date Values YN"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Fix Date Values YN]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Inputs[Input - Configuration Parameter].Columns[Allowable Date Formats]"
                          cachedDataType="wstr"
                          cachedLength="23"
                          cachedName="Allowable Date Formats"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Allowable Date Formats]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Inputs[Input - Configuration Parameter].Columns[Convert to TimeZone]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Convert to TimeZone"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Convert to TimeZone]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Inputs[Input - Configuration Parameter].Columns[Workday ID Column]"
                          cachedDataType="wstr"
                          cachedName="Workday ID Column"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Workday ID Column]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Inputs[Input - Configuration Parameter].Columns[Lookup Value Column]"
                          cachedDataType="wstr"
                          cachedName="Lookup Value Column"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Lookup Value Column]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Inputs[Input - Configuration Parameter].Columns[Additional Data Column]"
                          cachedDataType="wstr"
                          cachedName="Additional Data Column"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Additional Data Column]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Inputs[Input - Configuration Parameter].Columns[Not Null Columns]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="8000"
                          cachedName="Not Null Columns"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Not Null Columns]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Inputs[Input - Configuration Parameter].Columns[Mandatory Columns]"
                          cachedDataType="wstr"
                          cachedName="Mandatory Columns"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Mandatory Columns]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Inputs[Input - Configuration Parameter].Columns[Column Regex Patterns]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="8000"
                          cachedName="Column Regex Patterns"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Column Regex Patterns]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Inputs[Input - Configuration Parameter].Columns[File Name Output Column]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="File Name Output Column"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[File Name Output Column]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Inputs[Input - Configuration Parameter].Columns[Record Text Output Column]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Record Text Output Column"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Record Text Output Column]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Inputs[Input - Configuration Parameter].Columns[Earliest Allowable Year]"
                          cachedDataType="i4"
                          cachedName="Earliest Allowable Year"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Earliest Allowable Year]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Inputs[Input - Configuration Parameter].Columns[Non-Truncateable Columns]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="4000"
                          cachedName="Non-Truncateable Columns"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Non-Truncateable Columns]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Inputs[Input - Configuration Parameter].Columns[Column Names Case Sensitive YN]"
                          cachedDataType="wstr"
                          cachedLength="1"
                          cachedName="Column Names Case Sensitive YN"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Column Names Case Sensitive YN]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Inputs[Input - Configuration Parameter].Columns[Fail On Extra Column YN]"
                          cachedDataType="wstr"
                          cachedLength="1"
                          cachedName="Fail On Extra Column YN"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Fail On Extra Column YN]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Inputs[Input - Configuration Parameter].Columns[Fail On Missing Column YN]"
                          cachedDataType="wstr"
                          cachedLength="1"
                          cachedName="Fail On Missing Column YN"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Fail On Missing Column YN]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Inputs[Input - Configuration Parameter].Columns[Fail On Missing Mandatory Column In Header YN]"
                          cachedDataType="wstr"
                          cachedLength="1"
                          cachedName="Fail On Missing Mandatory Column In Header YN"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Fail On Missing Mandatory Column In Header YN]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Inputs[Input - Configuration Parameter].Columns[Fail On Missing Mandatory Column In Line YN]"
                          cachedDataType="wstr"
                          cachedLength="1"
                          cachedName="Fail On Missing Mandatory Column In Line YN"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Fail On Missing Mandatory Column In Line YN]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Inputs[Input - Configuration Parameter].Columns[Strip Unicode from Non-Unicode YN]"
                          cachedDataType="wstr"
                          cachedLength="1"
                          cachedName="Strip Unicode from Non-Unicode YN"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Strip Unicode from Non-Unicode YN]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Inputs[Input - Configuration Parameter].Columns[Convert Three-Char Timezoned to Offsets YN]"
                          cachedDataType="wstr"
                          cachedLength="1"
                          cachedName="Convert Three-Char Timezoned to Offsets YN"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Convert Three-Char Timezoned to Offsets YN]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data]"
                      description="Outputs the data parsed from the flat file.  Set the columns to the desired names and types."
                      hasSideEffects="true"
                      name="Output - File Data">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_ext_id]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_ext_id]"
                          name="appointment_ext_id" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[calendar_owner_integration_id]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[calendar_owner_integration_id]"
                          name="calendar_owner_integration_id" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[calendar_owner_userid]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[calendar_owner_userid]"
                          name="calendar_owner_userid" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[calendar_owner_first_name]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[calendar_owner_first_name]"
                          name="calendar_owner_first_name" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[calendar_owner_last_name]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[calendar_owner_last_name]"
                          name="calendar_owner_last_name" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[calendar_owner_institutional_email]"
                          codePage="1252"
                          dataType="str"
                          length="150"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[calendar_owner_institutional_email]"
                          name="calendar_owner_institutional_email" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[participant_integration_id]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[participant_integration_id]"
                          name="participant_integration_id" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[participant_userid]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[participant_userid]"
                          name="participant_userid" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[participant_first_name]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[participant_first_name]"
                          name="participant_first_name" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[participant_last_name]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[participant_last_name]"
                          name="participant_last_name" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[participant_institutional_email]"
                          codePage="1252"
                          dataType="str"
                          length="150"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[participant_institutional_email]"
                          name="participant_institutional_email" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[participant_alternate_email]"
                          codePage="1252"
                          dataType="str"
                          length="150"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[participant_alternate_email]"
                          name="participant_alternate_email" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_type_reason]"
                          codePage="1252"
                          dataType="str"
                          length="150"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_type_reason]"
                          name="appointment_type_reason" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_start_date]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_start_date]"
                          name="appointment_start_date" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_end_date]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_end_date]"
                          name="appointment_end_date" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_location]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_location]"
                          name="appointment_location" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_description]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_description]"
                          name="appointment_description" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_comment]"
                          codePage="1252"
                          dataType="str"
                          length="4000"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_comment]"
                          name="appointment_comment" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[canceled_date]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[canceled_date]"
                          name="canceled_date" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[course_section_id]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[course_section_id]"
                          name="course_section_id" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[no_show]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[no_show]"
                          name="no_show" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_type]"
                          codePage="1252"
                          dataType="str"
                          length="256"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_type]"
                          name="appointment_type" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[arrival_time]"
                          dataType="date"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[arrival_time]"
                          name="arrival_time" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[wait_time]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[wait_time]"
                          name="wait_time" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[actual_start_date]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[actual_start_date]"
                          name="actual_start_date" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[actual_end_date]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[actual_end_date]"
                          name="actual_end_date" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[actual_duration]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[actual_duration]"
                          name="actual_duration" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[scheduled_duration]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[scheduled_duration]"
                          name="scheduled_duration" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[scheduled]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[scheduled]"
                          name="scheduled" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[waiting_room_status]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[waiting_room_status]"
                          name="waiting_room_status" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[activities]"
                          codePage="1252"
                          dataType="str"
                          length="4000"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[activities]"
                          name="activities" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[Input_File_Name]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[Input_File_Name]"
                          name="Input_File_Name" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[Input_Line_Text]"
                          dataType="wstr"
                          length="4000"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[Input_Line_Text]"
                          name="Input_Line_Text" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Record Level Parse Errors]"
                      description="Logs errors only to tbl_WL_ETL_Load_Errors"
                      hasSideEffects="true"
                      name="Output - Record Level Parse Errors">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Record Level Parse Errors].Columns[File_Name]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Record Level Parse Errors].Columns[File_Name]"
                          name="File_Name" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Record Level Parse Errors].Columns[Failed_Line_Text]"
                          dataType="wstr"
                          length="4000"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Record Level Parse Errors].Columns[Failed_Line_Text]"
                          name="Failed_Line_Text" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Record Level Parse Errors].Columns[Lookup_WorkdayID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Record Level Parse Errors].Columns[Lookup_WorkdayID]"
                          name="Lookup_WorkdayID" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Record Level Parse Errors].Columns[Lookup_Value]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Record Level Parse Errors].Columns[Lookup_Value]"
                          name="Lookup_Value" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Record Level Parse Errors].Columns[Additional_Data]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Record Level Parse Errors].Columns[Additional_Data]"
                          name="Additional_Data" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Record Level Parse Errors].Columns[ErrorCode]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Record Level Parse Errors].Columns[ErrorCode]"
                          name="ErrorCode" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Record Level Parse Errors].Columns[ErrorColumn]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Record Level Parse Errors].Columns[ErrorColumn]"
                          name="ErrorColumn" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Record Level Parse Errors].Columns[Message]"
                          codePage="1252"
                          dataType="str"
                          length="5000"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Record Level Parse Errors].Columns[Message]"
                          name="Message" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Field Level Parse Logging]"
                      hasSideEffects="true"
                      name="Output - Field Level Parse Logging">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Field Level Parse Logging].Columns[Parse_Control_ID]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Field Level Parse Logging].Columns[Parse_Control_ID]"
                          name="Parse_Control_ID" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Field Level Parse Logging].Columns[Parse_Source_File]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Field Level Parse Logging].Columns[Parse_Source_File]"
                          name="Parse_Source_File" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Field Level Parse Logging].Columns[Parse_Source_Line_Text]"
                          dataType="wstr"
                          length="4000"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Field Level Parse Logging].Columns[Parse_Source_Line_Text]"
                          name="Parse_Source_Line_Text" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Field Level Parse Logging].Columns[Parse_Source_Line_Offset]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Field Level Parse Logging].Columns[Parse_Source_Line_Offset]"
                          name="Parse_Source_Line_Offset" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Field Level Parse Logging].Columns[Target_Field_Number]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Field Level Parse Logging].Columns[Target_Field_Number]"
                          name="Target_Field_Number" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Field Level Parse Logging].Columns[Target_Field_Name]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Field Level Parse Logging].Columns[Target_Field_Name]"
                          name="Target_Field_Name" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Field Level Parse Logging].Columns[Target_Field_DataType]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Field Level Parse Logging].Columns[Target_Field_DataType]"
                          name="Target_Field_DataType" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Field Level Parse Logging].Columns[Target_Field_Nullable]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Field Level Parse Logging].Columns[Target_Field_Nullable]"
                          name="Target_Field_Nullable" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Field Level Parse Logging].Columns[Parse_Field_Text]"
                          dataType="wstr"
                          length="4000"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Field Level Parse Logging].Columns[Parse_Field_Text]"
                          name="Parse_Field_Text" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Field Level Parse Logging].Columns[Parse_PassFail_Result]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Field Level Parse Logging].Columns[Parse_PassFail_Result]"
                          name="Parse_PassFail_Result" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Field Level Parse Logging].Columns[Parse_Truncation_Error]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Field Level Parse Logging].Columns[Parse_Truncation_Error]"
                          name="Parse_Truncation_Error" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Field Level Parse Logging].Columns[Parse_Nullability_Error]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Field Level Parse Logging].Columns[Parse_Nullability_Error]"
                          name="Parse_Nullability_Error" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Field Level Parse Logging].Columns[Parse_DataType_Error]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Field Level Parse Logging].Columns[Parse_DataType_Error]"
                          name="Parse_DataType_Error" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Field Level Parse Logging].Columns[Parse_FieldCount_Error]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Field Level Parse Logging].Columns[Parse_FieldCount_Error]"
                          name="Parse_FieldCount_Error" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Field Level Parse Logging].Columns[Parse_Format_Error]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Field Level Parse Logging].Columns[Parse_Format_Error]"
                          name="Parse_Format_Error" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Field Level Parse Logging].Columns[Parse_Other_Error]"
                          codePage="1252"
                          dataType="str"
                          length="1"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Field Level Parse Logging].Columns[Parse_Other_Error]"
                          name="Parse_Other_Error" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Field Level Parse Logging].Columns[Parse_Error_Message]"
                          codePage="1252"
                          dataType="str"
                          length="2000"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Field Level Parse Logging].Columns[Parse_Error_Message]"
                          name="Parse_Error_Message" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Level Parse Logging]"
                      hasSideEffects="true"
                      name="Output - File Level Parse Logging">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Level Parse Logging].Columns[Parse_Source_File]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Level Parse Logging].Columns[Parse_Source_File]"
                          name="Parse_Source_File" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Level Parse Logging].Columns[Total_Lines_Parsed]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Level Parse Logging].Columns[Total_Lines_Parsed]"
                          name="Total_Lines_Parsed" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Level Parse Logging].Columns[Total_Lines_Passed]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Level Parse Logging].Columns[Total_Lines_Passed]"
                          name="Total_Lines_Passed" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Level Parse Logging].Columns[Total_Lines_Failed]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Level Parse Logging].Columns[Total_Lines_Failed]"
                          name="Total_Lines_Failed" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Level Parse Logging].Columns[Total_Fields_Parsed]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Level Parse Logging].Columns[Total_Fields_Parsed]"
                          name="Total_Fields_Parsed" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Level Parse Logging].Columns[Total_Fields_Passed]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Level Parse Logging].Columns[Total_Fields_Passed]"
                          name="Total_Fields_Passed" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Level Parse Logging].Columns[Total_Fields_Failed]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Level Parse Logging].Columns[Total_Fields_Failed]"
                          name="Total_Fields_Failed" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Level Parse Logging].Columns[Total_Truncation_Errors]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Level Parse Logging].Columns[Total_Truncation_Errors]"
                          name="Total_Truncation_Errors" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Level Parse Logging].Columns[Total_Nullability_Errors]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Level Parse Logging].Columns[Total_Nullability_Errors]"
                          name="Total_Nullability_Errors" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Level Parse Logging].Columns[Total_DataType_Errors]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Level Parse Logging].Columns[Total_DataType_Errors]"
                          name="Total_DataType_Errors" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Level Parse Logging].Columns[Total_FieldCount_Errors]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Level Parse Logging].Columns[Total_FieldCount_Errors]"
                          name="Total_FieldCount_Errors" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Level Parse Logging].Columns[Total_Format_Errors]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Level Parse Logging].Columns[Total_Format_Errors]"
                          name="Total_Format_Errors" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Level Parse Logging].Columns[Total_Other_Errors]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Level Parse Logging].Columns[Total_Other_Errors]"
                          name="Total_Other_Errors" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="SCR _HashValue"
                  version="13">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[

#region Namespaces
using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Diagnostics;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using Microsoft.SqlServer.Dts.Runtime;
using Microsoft.SqlServer.Dts.Pipeline;
using System.Text;
using System.Windows.Forms;
using System.Security.Cryptography;

#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]

#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion


public class ScriptMain : UserComponent
{
    

    #region Methods
    private PipelineBuffer inputBuffer;

    /// <summary>
    /// The ProcessInput method is called to provide the component a full PipelineBuffer object that contains rows from the upstream component.
    /// The columns contained in buffer include those columns defined in the IDTSInputColumnCollection100 of the component.
    /// If the component has synchronous outputs, the buffer will also include the columns added to the output column collection by the component,
    /// and all the columns in the output column collection of the components upstream from the component.
    /// </summary>
    /// <param name="InputID">The ID of the input of the component.</param>
    /// <param name="Buffer">The PipelineBuffer object.</param>
    public override void ProcessInput(int InputID, Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer Buffer)
    {
        inputBuffer = Buffer;
        base.ProcessInput(InputID, Buffer);
    }
    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        //Holds the number of columns in the row
        int counter = 0;
        //Used to concatenate columns in our row
        StringBuilder values = new StringBuilder();
        //Will be used to hold the value of the column in the loop
        object value = null;
        //Will be used to capture the string
        string probStr = null;
        //Will be used to hold the length of the blob
        int probBlobLen = 0;
        //Will be used to hold the bytes of the blob
        byte[] probbytBlob = null;
        //Will be used to test the type of blob(ASCII or Unicode)
        object tester = null;
        //Will be used to determine case sensitivity
        string caseSensitive = Variables.strCaseSensitive;
            //Variables.strCaseSensitive;

        //Loops through the columns in the current record in the buffer
        for (counter = 0; counter < inputBuffer.ColumnCount - 1; counter++)
        {
            //Checks for null values in the column, if not we process the value, else we submit a blank to the string builder
            if (inputBuffer.IsNull(counter) == false)
            {
                //Sets tester to the object type of the column being evaluated in the loop
                tester = inputBuffer[counter].GetType();
                //Gets SSIS specific data type
                BufferColumn bc = inputBuffer.GetColumnInfo(counter);

                //Checks to see if the data is a BLOB
                if (object.ReferenceEquals(tester, typeof(BlobColumn)))
                {

                    //Convert BLOB data to string
                    probBlobLen = (int)inputBuffer.GetBlobLength(counter);
                    probbytBlob = inputBuffer.GetBlobData(counter, 0, probBlobLen);

                    //If input is Unicode
                    if (bc.DataType == DataType.DT_NTEXT)
                    {
                        probStr = System.Text.Encoding.Unicode.GetString(probbytBlob);

                    }
                    //If input is ASCII
                    else
                    {
                        probStr = System.Text.Encoding.ASCII.GetString(probbytBlob);

                    }
                    //Sets the value object to the current column in the loop if BLOB
                    value = probStr;
                }
                else
                {
                    //Sets the value object to the current column in the loop
                    value = inputBuffer[counter].ToString();

                }
                //Appends the StringBuilder with the value from the current column in the loop
                values.Append(value);
                values.Append("|");
            }
            else
            {
                //Appends the String Builder with a field separator if the incoming column has a null value
                values.Append("|");
            }
        }

        //Sets the output of the component to the SHA1 hash of the String Builder value

        //Not case sensitve
        if (caseSensitive == "N")
        {
            Row.NewHash = CreateMD5Hash(values.ToString().ToUpper());

        }
        //Case sensitive
        else
        {
            Row.NewHash = CreateMD5Hash(values.ToString());

        }

    }

    /// <summary>
    /// Generates a SHA1 hash value for a string passed
    /// </summary>
    /// <param name="data">Data string that is to be hashed</param>
    /// <returns>SAH1 hash value string</returns>
    //public static string CreateHash(string data)
    //{
    //    byte[] dataToHash = (new UnicodeEncoding()).GetBytes(data);
    //    SHA1CryptoServiceProvider sha = new SHA1CryptoServiceProvider();
    //    byte[] hashedData = sha.ComputeHash(dataToHash);
    //    RNGCryptoServiceProvider.Create().GetBytes(dataToHash);
    //    string s = Convert.ToBase64String(hashedData, Base64FormattingOptions.None);
    //    return s;
    //}

    public string CreateMD5Hash(string data)
    {
        // Step 1, calculate MD5 hash from input
        MD5 md5 = System.Security.Cryptography.MD5.Create();
        byte[] inputBytes = System.Text.Encoding.ASCII.GetBytes(data);
        byte[] hashBytes = md5.ComputeHash(inputBytes);

        // Step 2, convert byte array to hex string
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < hashBytes.Length; i++)
        {
            sb.Append(hashBytes[i].ToString("X2"));
        }
        return sb.ToString();
    }



    #endregion
}



]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String calendarownerintegrationid
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool calendarownerintegrationid_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String calendarowneruserid
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool calendarowneruserid_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String calendarownerfirstname
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool calendarownerfirstname_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String calendarownerlastname
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool calendarownerlastname_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String calendarownerinstitutionalemail
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool calendarownerinstitutionalemail_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String participantintegrationid
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool participantintegrationid_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String participantuserid
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool participantuserid_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public String participantfirstname
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[7]);
        }
    }
    public bool participantfirstname_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    public String participantlastname
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[8]);
        }
    }
    public bool participantlastname_IsNull
    {
        get
        {
            return IsNull(8);
        }
    }

    public String participantinstitutionalemail
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[9]);
        }
    }
    public bool participantinstitutionalemail_IsNull
    {
        get
        {
            return IsNull(9);
        }
    }

    public String participantalternateemail
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[10]);
        }
    }
    public bool participantalternateemail_IsNull
    {
        get
        {
            return IsNull(10);
        }
    }

    public String appointmenttypereason
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[11]);
        }
    }
    public bool appointmenttypereason_IsNull
    {
        get
        {
            return IsNull(11);
        }
    }

    public String appointmentstartdate
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[12]);
        }
    }
    public bool appointmentstartdate_IsNull
    {
        get
        {
            return IsNull(12);
        }
    }

    public String appointmentenddate
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[13]);
        }
    }
    public bool appointmentenddate_IsNull
    {
        get
        {
            return IsNull(13);
        }
    }

    public String appointmentlocation
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[14]);
        }
    }
    public bool appointmentlocation_IsNull
    {
        get
        {
            return IsNull(14);
        }
    }

    public String appointmentdescription
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[15]);
        }
    }
    public bool appointmentdescription_IsNull
    {
        get
        {
            return IsNull(15);
        }
    }

    public String appointmentcomment
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[16]);
        }
    }
    public bool appointmentcomment_IsNull
    {
        get
        {
            return IsNull(16);
        }
    }

    public String canceleddate
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[17]);
        }
    }
    public bool canceleddate_IsNull
    {
        get
        {
            return IsNull(17);
        }
    }

    public String coursesectionid
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[18]);
        }
    }
    public bool coursesectionid_IsNull
    {
        get
        {
            return IsNull(18);
        }
    }

    public String noshow
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[19]);
        }
    }
    public bool noshow_IsNull
    {
        get
        {
            return IsNull(19);
        }
    }

    public DateTime arrivaltime
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[20]);
        }
    }
    public bool arrivaltime_IsNull
    {
        get
        {
            return IsNull(20);
        }
    }

    public String waittime
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[21]);
        }
    }
    public bool waittime_IsNull
    {
        get
        {
            return IsNull(21);
        }
    }

    public String actualstartdate
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[22]);
        }
    }
    public bool actualstartdate_IsNull
    {
        get
        {
            return IsNull(22);
        }
    }

    public String actualenddate
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[23]);
        }
    }
    public bool actualenddate_IsNull
    {
        get
        {
            return IsNull(23);
        }
    }

    public String actualduration
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[24]);
        }
    }
    public bool actualduration_IsNull
    {
        get
        {
            return IsNull(24);
        }
    }

    public String scheduledduration
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[25]);
        }
    }
    public bool scheduledduration_IsNull
    {
        get
        {
            return IsNull(25);
        }
    }

    public String scheduled
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[26]);
        }
    }
    public bool scheduled_IsNull
    {
        get
        {
            return IsNull(26);
        }
    }

    public String waitingroomstatus
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[27]);
        }
    }
    public bool waitingroomstatus_IsNull
    {
        get
        {
            return IsNull(27);
        }
    }

    public String appointmentextid
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[28]);
        }
    }
    public bool appointmentextid_IsNull
    {
        get
        {
            return IsNull(28);
        }
    }

    public String appointmenttype
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[29]);
        }
    }
    public bool appointmenttype_IsNull
    {
        get
        {
            return IsNull(29);
        }
    }

    public DateTime ARRIVALTIMENEW
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[30]);
        }
    }
    public bool ARRIVALTIMENEW_IsNull
    {
        get
        {
            return IsNull(30);
        }
    }

    public String activities
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[31]);
        }
    }
    public bool activities_IsNull
    {
        get
        {
            return IsNull(31);
        }
    }

    public String NewHash
    {
        set
        {
            this[32] = value;
        }
    }
    public bool NewHash_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(32);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 Connection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String strCaseSensitive
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["strCaseSensitive"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_0d4c795259d145579c25b7a7fd80aadf.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{3c9dd22e-8575-4053-899c-01020a7ef92f}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_0d4c795259d145579c25b7a7fd80aadf</RootNamespace>
    <AssemblyName>SC_0d4c795259d145579c25b7a7fd80aadf</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_0d4c795259d145579c25b7a7fd80aadf" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0d4c795259d145579c25b7a7fd80aadf.Properties.Settings.get_Default():SC_0d4c795259d145579c25b7a7fd80aadf.Properties.Sett" +
    "ings")]

namespace SC_0d4c795259d145579c25b7a7fd80aadf.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_0d4c795259d145579c25b7a7fd80aadf</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_0d4c795259d145579c25b7a7fd80aadf</msb:DisplayName>
    <msb:ProjectId>{9344EFE7-68BF-4D1C-9E2C-36097C0DE8E0}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_0d4c795259d145579c25b7a7fd80aadf.csproj" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_0d4c795259d145579c25b7a7fd80aadf")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_0d4c795259d145579c25b7a7fd80aadf")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0d4c795259d145579c25b7a7fd80aadf.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0d4c795259d145579c25b7a7fd80aadf.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0d4c795259d145579c25b7a7fd80aadf.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_0d4c795259d145579c25b7a7fd80aadf.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_0d4c795259d145579c25b7a7fd80aadf.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_0d4c795259d145579c25b7a7fd80aadf.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDABJTf2QAAAAAAAAAAOAAIiALATAAACoAAAAIAAAAAAAAxkkA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAHRJAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAzCkAAAAgAAAAKgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAsAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAMgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACo
SQAAAAAAAEgAAAACAAUATCcAAHAhAAABAAAAAAAAALxIAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEICBH0BAAAEAgMEKBAAAAoqAAAAEzAEADMBAAABAAARFgpz
EQAACgsUDBQNFhMEFBMFAnsDAAAEb1EAAAYTBhYKOMEAAAACewEAAAQGbxIAAAo6oAAAAAJ7AQAA
BAZvEwAACm8UAAAKAnsBAAAEBm8VAAAKEwfQHwAAASgWAAAKM00CewEAAAQGbxcAAAoTBAJ7AQAA
BAYWEQRvGAAAChMFEQd7GQAACiAvAQAAMw8oGgAAChEFbxsAAAoNKw0oHAAAChEFbxsAAAoNCQwr
EgJ7AQAABAZvEwAACm8dAAAKDAcIbx4AAAomB3IBAABwbx8AAAomKwwHcgEAAHBvHwAACiYGF1gK
BgJ7AQAABG8gAAAKF1k/LP///xEGcgUAAHAoIQAACiwYAwIHbx0AAApvIgAACigDAAAGb0YAAAYq
AwIHbx0AAAooAwAABm9GAAAGKgATMAMASwAAAAIAABEoIwAACigcAAAKA28kAAAKCgZvJQAACgtz
EQAACgwWDSscCAcJjyYAAAFyCQAAcCgmAAAKbx8AAAomCRdYDQkHjmky3ghvHQAACioeAihKAAAG
KioCAwQFKCcAAAoqUgJ7KAAACgJ7KQAAChaUbyoAAAoqIgIWKCsAAAoqUgJ7KAAACgJ7KQAACheU
byoAAAoqIgIXKCsAAAoqUgJ7KAAACgJ7KQAAChiUbyoAAAoqIgIYKCsAAAoqUgJ7KAAACgJ7KQAA
ChmUbyoAAAoqIgIZKCsAAAoqUgJ7KAAACgJ7KQAAChqUbyoAAAoqIgIaKCsAAAoqUgJ7KAAACgJ7
KQAAChuUbyoAAAoqIgIbKCsAAAoqUgJ7KAAACgJ7KQAAChyUbyoAAAoqIgIcKCsAAAoqUgJ7KAAA
CgJ7KQAACh2UbyoAAAoqIgIdKCsAAAoqUgJ7KAAACgJ7KQAACh6UbyoAAAoqIgIeKCsAAAoqVgJ7
KAAACgJ7KQAACh8JlG8qAAAKKiYCHwkoKwAACipWAnsoAAAKAnspAAAKHwqUbyoAAAoqJgIfCigr
AAAKKlYCeygAAAoCeykAAAofC5RvKgAACiomAh8LKCsAAAoqVgJ7KAAACgJ7KQAACh8MlG8qAAAK
KiYCHwwoKwAACipWAnsoAAAKAnspAAAKHw2UbyoAAAoqJgIfDSgrAAAKKlYCeygAAAoCeykAAAof
DpRvKgAACiomAh8OKCsAAAoqVgJ7KAAACgJ7KQAACh8PlG8qAAAKKiYCHw8oKwAACipWAnsoAAAK
AnspAAAKHxCUbyoAAAoqJgIfECgrAAAKKlYCeygAAAoCeykAAAofEZRvKgAACiomAh8RKCsAAAoq
VgJ7KAAACgJ7KQAACh8SlG8qAAAKKiYCHxIoKwAACipWAnsoAAAKAnspAAAKHxOUbyoAAAoqJgIf
EygrAAAKKlYCeygAAAoCeykAAAofFJRvLAAACiomAh8UKCsAAAoqVgJ7KAAACgJ7KQAACh8VlG8q
AAAKKiYCHxUoKwAACipWAnsoAAAKAnspAAAKHxaUbyoAAAoqJgIfFigrAAAKKlYCeygAAAoCeykA
AAofF5RvKgAACiomAh8XKCsAAAoqVgJ7KAAACgJ7KQAACh8YlG8qAAAKKiYCHxgoKwAACipWAnso
AAAKAnspAAAKHxmUbyoAAAoqJgIfGSgrAAAKKlYCeygAAAoCeykAAAofGpRvKgAACiomAh8aKCsA
AAoqVgJ7KAAACgJ7KQAACh8blG8qAAAKKiYCHxsoKwAACipWAnsoAAAKAnspAAAKHxyUbyoAAAoq
JgIfHCgrAAAKKlYCeygAAAoCeykAAAofHZRvKgAACiomAh8dKCsAAAoqVgJ7KAAACgJ7KQAACh8e
lG8sAAAKKiYCHx4oKwAACipWAnsoAAAKAnspAAAKHx+UbyoAAAoqJgIfHygrAAAKKioCHyADKC0A
AAoqXgMsCQIfICguAAAKKnIPAABwcy8AAAp6HgIoMAAACioeAigxAAAKKn4CKDIAAAoCAnNOAAAG
fQIAAAQCAnNQAAAGfQMAAAQqkgRyrAAAcBpvMwAACiwVAgUCAyg0AAAKDgRzBQAABm9MAAAGKkor
BwIDb00AAAYDb0gAAAYt8SoGKjoCKDUAAAoCA30EAAAEKoICewQAAARvNgAACm83AAAKcrwAAHBv
OAAACm85AAAKKjoCKDUAAAoCA30FAAAEKpYCewUAAARvOgAACnLSAABwbzsAAAooPAAACm89AAAK
dCMAAAEqHgIoNQAACiqufgYAAAQtHnL0AABw0AcAAAIoFgAACm8+AAAKcz8AAAqABgAABH4GAAAE
Khp+BwAABCoeAoAHAAAEKhp+CAAABCoeAihAAAAKKi5zVwAABoAIAAAEKkJTSkIBAAEAAAAAAAwA
AAB2NC4wLjMwMzE5AAAAAAUAbAAAAEgNAAAjfgAAtA0AANwPAAAjU3RyaW5ncwAAAACQHQAAaAEA
ACNVUwD4HgAAEAAAACNHVUlEAAAACB8AAGgCAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA+gEz
ABYAAAEAAAAwAAAACAAAAAgAAABYAAAAEgAAAEAAAAAQAAAAAgAAAAUAAABHAAAASAAAAAEAAAAG
AAAAAQAAAAAAdQYBAAAAAAAGAJsELA0GAC8FLA0GAOcDGQ0PAKANAAAGABQELAsGAH4ELAsGAF8E
LAsGABYFLAsGALsELAsGANQELAsGACsELAsGAEYEmgUKAO8EpgIOAGEMpgIGAEYMKQ8GAGMOfQoO
ALQKpgIKAHAMpgIKAOcLpgIGAIACfQoKALcOpgISAGYAuwwGAMoDGQ0GAI0MTA0GAM0LFwsWAJoD
+wUWAPsD+wUWABQDAgsGAK8DLA0GANMCfQoOAKkKpgIGAM4BfQoSAMcCuwwGAJEFKQ8GAMAFfQoG
AKgAow8GAIQKow8GAE0FfQoGAG0LfQoGALwLfQoaAAEA4wwaACoA4wwaAE0A4wwSAH8AuwwSABoA
uwxXAEkPAAASAJAAuwwGAMQPLAsAAAAArAAAAAAAAQABAAEAEACeCgAAEAABAAEAAQAQAFQMAABJ
AAIABQABABAAmQ4AAFUAAgBKAAEAEABBDgAAQQAEAE4AAQAQAPkNAABBAAUAUAAAABAAUw2+DUEA
BgBSAAABEAAxDr4NcQAIAFYAAQB9DLEABgBBDi4BBgD5DTIBAQCnDjYBAQCnDjYBEQCSCjoBEQAE
Az4BEQCyAUIBUCAAAAAAxgAcDxsAAQBkIAAAAADGAHkPRgEDAKQhAAAAAIYAxwWiAAQA+yEAAAAA
hhgMDQYABQADIgAAAACGGAwNpwAFAA4iAAAAAIYIGAFrAAgAIyIAAAAAhgjMBsoACAAsIgAAAACG
CGgBawAIAEEiAAAAAIYIMQfKAAgASiIAAAAAhghJAmsACABfIgAAAACGCMkHygAIAGgiAAAAAIYI
FwJrAAgAfSIAAAAAhgiJB8oACACGIgAAAACGCC8GawAIAJsiAAAAAIYIEwnKAAgApCIAAAAAhgg3
AWsACAC5IgAAAACGCPIGygAIAMIiAAAAAIYIgAFrAAgA1yIAAAAAhghQB8oACADgIgAAAACGCGQC
awAIAPUiAAAAAIYI6wfKAAgA/iIAAAAAhggxAmsACAATIwAAAACGCKoHygAIABwjAAAAAIYIUwZr
AAgAMiMAAAAAhgg+CcoACAA8IwAAAACGCBEGawAIAFIjAAAAAIYI7gjKAAgAXCMAAAAAhgiiC2sA
CAByIwAAAACGCN8JygAIAHwjAAAAAIYIegNrAAgAkiMAAAAAhgi7CMoACACcIwAAAACGCE8DawAI
ALIjAAAAAIYIggjKAAgAvCMAAAAAhgjBCmsACADSIwAAAACGCGcJygAIANwjAAAAAIYIhwtrAAgA
8iMAAAAAhgi9CcoACAD8IwAAAACGCIIOawAIABIkAAAAAIYIMwrKAAgAHCQAAAAAhggsA2sACAAy
JAAAAACGCFEIygAIADwkAAAAAIYIVAFrAAgAUiQAAAAAhggWB8oACABcJAAAAACGCJgPawAIAHIk
AAAAAIYIUQrKAAgAfCQAAAAAhgiJAkwBCACSJAAAAACGCAsIygAIAJwkAAAAAIYImQJrAAgAsiQA
AAAAhggiCMoACAC8JAAAAACGCGYDawAIANIkAAAAAIYIoAjKAAgA3CQAAAAAhgg9A2sACADyJAAA
AACGCGkIygAIAPwkAAAAAIYI7wprAAgAEiUAAAAAhgijCcoACAAcJQAAAACGCNkKawAIADIlAAAA
AIYIhgnKAAgAPCUAAAAAhggKAWsACABSJQAAAACGCLcGygAIAFwlAAAAAIYITQ5rAAgAciUAAAAA
hggWCsoACAB8JQAAAACGCJYBawAIAJIlAAAAAIYIbQfKAAgAnCUAAAAAhgjYAmsACACyJQAAAACG
CDYIygAIALwlAAAAAIYIxwBMAQgA0iUAAAAAhgidBsoACADcJQAAAACGCK8NawAIAPIlAAAAAIYI
AArKAAgA/CUAAAAAhgjhBRAACAAHJgAAAACGCNsIUQEJAB8mAAAAAIYAkA/KAAoAJyYAAAAAhgBq
DsoACgAvJgAAAACGGAwNBgAKAE8mAAAAAMYAHA9WAQoAdCYAAAAAxgEVD0YBDgCHJgAAAADGAXkP
RgEPAIkmAAAAAIYYDA1gARAAmCYAAAAAhgheC+8AEQC5JgAAAACGGAwNYAERAMgmAAAAAIYIWAVr
ABIA7iYAAAAAgxgMDQYAEgD2JgAAAACTCIkMZgESACInAAAAAJMI7AJrARIAKScAAAAAkwj4AnAB
EgAxJwAAAACWCHYOdgETADgnAAAAAIYYDA0GABMAQCcAAAAAkRgSDXsBEwAAAAEAtQAAAAIAggwA
AAEAlA8AAAEA/AAAAAEAggwAAAIADA4AAAMA9QsAAAEAUgUAAAEAUgUAAAEAtQAAAAIA8gEAAAMA
ggwAAAQA9QsAAAEAggwAAAEAlA8AAAEAvQ4AAAEAvQ4AAAEAUgUJAAwNAQARAAwNBgAZAAwNCgAp
AAwNEAAxAAwNEAA5AAwNEABBAAwNEABJAAwNEABRAAwNEABZAAwNEABhAAwNEABpAAwNBgC5AAwN
BgDZAAwNFQDpAAwNBgCpABwPGwB5AAwNBgBxAFwKMABxAGsKNQCBANACOgBxANkLPwDxAOABRQBx
AO0FTQBxAPAAUgCJAMcCWgARAcIBXwARAb0FZQARAb0AXwCBALQFawB5AKsBbwB5AKsBdQBxAMcO
ewAZAc0PfwAZAbMMawAhAZMDjwARAQMOlQApAdUFmwAxAbQFogCRAAwNpwCRAIIMsQCRAAwOtQBx
AL0FuQCRAFwKMABxAH0CvgCRAHQKxACRAGMKAQA5AQwNEACRAJAPygCRAGoOygCpAAwNBgAZAToO
zgCpACAO1gCBAAwNBgCpANoA3ABJAT4L4gBRAfwB6ABZAZ0M7wCpAO0N9ABhAWsK+gCpAGQPAQFp
ATUPBwHxAMAPDgHBAAwNFAHhAAwNBgAuAAsAoAEuABMAqQEuABsAyAEuACMA0QEuACsA+gEuADMA
+gEuADsA+gEuAEMA0QEuAEsAAAIuAFMA+gEuAFsAFwJDAGMAYQLjAGsAYQIBAXsAYQKpCHMAyAHJ
CHMAyAEiAIUAAwABAAUAQwAGAEQABwBFAAgARwAAABwBfwEAANAGgwEAAGwBfwEAADUHgwEAAE0C
fwEAAM0HgwEAABsCfwEAAI0HgwEAADMGfwEAABcJgwEAADsBfwEAAPYGgwEAAIQBfwEAAFQHgwEA
AGgCfwEAAO8HgwEAADUCfwEAAK4HgwEAAFcGfwEAAEIJgwEAABUGfwEAAPIIgwEAAKYLfwEAAOMJ
gwEAAH4DfwEAAL8IgwEAAFMDfwEAAIYIgwEAAMUKfwEAAGsJgwEAAIsLfwEAAMEJgwEAAIYOfwEA
ADcKgwEAADADfwEAAFUIgwEAAFgBfwEAABoHgwEAAJwPfwEAAFUKgwEAAI0ChwEAAA8IgwEAAJ0C
fwEAACYIgwEAAGoDfwEAAKQIgwEAAEEDfwEAAG0IgwEAAPMKfwEAAKcJgwEAAN0KfwEAAIoJgwEA
AA4BfwEAALsGgwEAAFEOfwEAABoKgwEAAJoBfwEAAHEHgwEAANwCfwEAADoIgwEAAMsAhwEAAKEG
gwEAALMNfwEAAAQKgwEAAOUFfwEAAN8IgwEAAGILjAEAAFwFfwEAAI0MkQEAAAwDlgEAAHoOmwEC
AAYAAwACAAcABQACAAgABwACAAkACQACAAoACwACAAsADQACAAwADwACAA0AEQACAA4AEwACAA8A
FQACABAAFwACABEAGQACABIAGwACABMAHQACABQAHwACABUAIQACABYAIwACABcAJQACABgAJwAC
ABkAKQACABoAKwACABsALQACABwALwACAB0AMQACAB4AMwACAB8ANQACACAANwACACEAOQACACIA
OwACACMAPQACACQAPwACACUAQQACACYAQwACACcARQACACgARwACACkASQACACoASwACACsATQAC
ACwATwACAC0AUQACAC4AUwACAC8AVQACADAAVwACADEAWQACADIAWwACADMAXQACADQAXwACADUA
YQACADYAYwACADcAZQACADgAZwACADkAaQACADoAawACADsAbQACADwAbwACAD0AcQACAD4AcwAC
AD8AdQACAEAAdwACAEEAeQACAEIAewACAEMAfQACAEQAfwACAEUAgQABAEYAgwABAEcAhQACAE8A
hwACAFEAiQACAFMAiwACAFQAjQABAFUAjQACAFYAjwAEgAAAAQAAAAAAAAAAAAAAAABtBQAABAAA
AAAAAAAAAAAAHAEBAQAAAAAQAAAAAAAAAAAAAAAlAdcOAAAAABAAAAAAAAAAAAAAACUB9A4AAAAA
EAAAAAAAAAAAAAAAJQH/CwAAAAAEAAAAAAAAAAAAAAAcAX0KAAAAABAAAAAAAAAAAAAAACUBIgwA
AAAAAAAAAAEAAABdDQAAAAAASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAElEVFNWYXJpYWJsZTEw
MABJRFRTUnVudGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uMTAwAElEVFNSdW50aW1lQ29ubmVjdGlv
bjEwMABJRFRTQ29ubmVjdGlvbk1hbmFnZXIxMDAASURUU1ZhcmlhYmxlczEwMABJRFRTRXZhbHVh
dG9yQ29udGV4dDEwMABNRDUAPE1vZHVsZT4ASW5wdXRJRABnZXRfQVNDSUkAZ2V0X0FSUklWQUxU
SU1FTkVXAGdldF9Db21wb25lbnRNZXRhRGF0YQBHZXRCbG9iRGF0YQBkYXRhAG1zY29ybGliAGdl
dF9zY2hlZHVsZWQAZ2V0X2NhbGVuZGFyb3duZXJpbnRlZ3JhdGlvbmlkAGdldF9wYXJ0aWNpcGFu
dGludGVncmF0aW9uaWQAZ2V0X2NvdXJzZXNlY3Rpb25pZABnZXRfY2FsZW5kYXJvd25lcnVzZXJp
ZABnZXRfcGFydGljaXBhbnR1c2VyaWQAZ2V0X2FwcG9pbnRtZW50ZXh0aWQAQXBwZW5kAGRlZmF1
bHRJbnN0YW5jZQBnZXRfVW5pY29kZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRs
ZQBJbnB1dE5hbWUAR2V0UnVudGltZUNvbm5lY3Rpb25CeU5hbWUAZ2V0X2NhbGVuZGFyb3duZXJs
YXN0bmFtZQBnZXRfcGFydGljaXBhbnRsYXN0bmFtZQBnZXRfY2FsZW5kYXJvd25lcmZpcnN0bmFt
ZQBnZXRfcGFydGljaXBhbnRmaXJzdG5hbWUAR2V0RGF0ZVRpbWUAZ2V0X2Fycml2YWx0aW1lAGdl
dF93YWl0dGltZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBEYXRhVHlwZQBHZXRU
eXBlAGdldF9hcHBvaW50bWVudHR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VD
dWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAGdldF9jYW5jZWxlZGRhdGUAZ2V0X2FjdHVh
bGVuZGRhdGUAZ2V0X2FwcG9pbnRtZW50ZW5kZGF0ZQBnZXRfYWN0dWFsc3RhcnRkYXRlAGdldF9h
cHBvaW50bWVudHN0YXJ0ZGF0ZQBDcmVhdGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJH
ZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxl
QXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRl
AEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3Nl
bWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBD
b21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBB
c3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0
dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRy
aWJ1dGUAQnl0ZQB2YWx1ZQBnZXRfc3RyQ2FzZVNlbnNpdGl2ZQBTQ18wZDRjNzk1MjU5ZDE0NTU3
OWMyNWI3YTdmZDgwYWFkZgBFbmNvZGluZwBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3Ry
aW5nAEdldFN0cmluZwBDcmVhdGVNRDVIYXNoAENvbXB1dGVIYXNoAHNldF9OZXdIYXNoAEdldEJs
b2JMZW5ndGgAU3lzdGVtLkNvbXBvbmVudE1vZGVsAGdldF9wYXJ0aWNpcGFudGFsdGVybmF0ZWVt
YWlsAGdldF9jYWxlbmRhcm93bmVyaW5zdGl0dXRpb25hbGVtYWlsAGdldF9wYXJ0aWNpcGFudGlu
c3RpdHV0aW9uYWxlbWFpbABTQ18wZDRjNzk1MjU5ZDE0NTU3OWMyNWI3YTdmZDgwYWFkZi5kbGwA
Z2V0X0FSUklWQUxUSU1FTkVXX0lzTnVsbABnZXRfc2NoZWR1bGVkX0lzTnVsbABnZXRfY2FsZW5k
YXJvd25lcmludGVncmF0aW9uaWRfSXNOdWxsAGdldF9wYXJ0aWNpcGFudGludGVncmF0aW9uaWRf
SXNOdWxsAGdldF9jb3Vyc2VzZWN0aW9uaWRfSXNOdWxsAGdldF9jYWxlbmRhcm93bmVydXNlcmlk
X0lzTnVsbABnZXRfcGFydGljaXBhbnR1c2VyaWRfSXNOdWxsAGdldF9hcHBvaW50bWVudGV4dGlk
X0lzTnVsbABnZXRfY2FsZW5kYXJvd25lcmxhc3RuYW1lX0lzTnVsbABnZXRfcGFydGljaXBhbnRs
YXN0bmFtZV9Jc051bGwAZ2V0X2NhbGVuZGFyb3duZXJmaXJzdG5hbWVfSXNOdWxsAGdldF9wYXJ0
aWNpcGFudGZpcnN0bmFtZV9Jc051bGwAZ2V0X2Fycml2YWx0aW1lX0lzTnVsbABnZXRfd2FpdHRp
bWVfSXNOdWxsAGdldF9hcHBvaW50bWVudHR5cGVfSXNOdWxsAGdldF9jYW5jZWxlZGRhdGVfSXNO
dWxsAGdldF9hY3R1YWxlbmRkYXRlX0lzTnVsbABnZXRfYXBwb2ludG1lbnRlbmRkYXRlX0lzTnVs
bABnZXRfYWN0dWFsc3RhcnRkYXRlX0lzTnVsbABnZXRfYXBwb2ludG1lbnRzdGFydGRhdGVfSXNO
dWxsAHNldF9OZXdIYXNoX0lzTnVsbABnZXRfcGFydGljaXBhbnRhbHRlcm5hdGVlbWFpbF9Jc051
bGwAZ2V0X2NhbGVuZGFyb3duZXJpbnN0aXR1dGlvbmFsZW1haWxfSXNOdWxsAGdldF9wYXJ0aWNp
cGFudGluc3RpdHV0aW9uYWxlbWFpbF9Jc051bGwAZ2V0X2FwcG9pbnRtZW50bG9jYXRpb25fSXNO
dWxsAGdldF9zY2hlZHVsZWRkdXJhdGlvbl9Jc051bGwAZ2V0X2FjdHVhbGR1cmF0aW9uX0lzTnVs
bABnZXRfYXBwb2ludG1lbnRkZXNjcmlwdGlvbl9Jc051bGwAZ2V0X2FwcG9pbnRtZW50dHlwZXJl
YXNvbl9Jc051bGwAZ2V0X2FjdGl2aXRpZXNfSXNOdWxsAGdldF93YWl0aW5ncm9vbXN0YXR1c19J
c051bGwAZ2V0X2FwcG9pbnRtZW50Y29tbWVudF9Jc051bGwAZ2V0X25vc2hvd19Jc051bGwAU2V0
TnVsbABnZXRfSXRlbQBzZXRfSXRlbQBTeXN0ZW0ASGFzaEFsZ29yaXRobQByZXNvdXJjZU1hbgBT
Y3JpcHRNYWluAEJsb2JDb2x1bW4AQnVmZmVyQ29sdW1uAGdldF9hcHBvaW50bWVudGxvY2F0aW9u
AGdldF9zY2hlZHVsZWRkdXJhdGlvbgBnZXRfYWN0dWFsZHVyYXRpb24AU3lzdGVtLkNvbmZpZ3Vy
YXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AZ2V0X1J1bnRpbWVD
b25uZWN0aW9uQ29sbGVjdGlvbgBnZXRfQ29ubmVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0
aW9uAGdldF9hcHBvaW50bWVudGRlc2NyaXB0aW9uAGdldF9hcHBvaW50bWVudHR5cGVyZWFzb24A
U3RyaW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5mbwBHZXRDb2x1bW5JbmZvAE91dHB1dE5hbWVNYXAA
T3V0cHV0TWFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAATWljcm9zb2Z0LlNx
bFNlcnZlci5EVFNQaXBlbGluZVdyYXAAU3RyaW5nQnVpbGRlcgBJbnB1dDBCdWZmZXIAUGlwZWxp
bmVCdWZmZXIAU2NyaXB0QnVmZmVyAGlucHV0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0
X0Nvbm5lY3Rpb25NYW5hZ2VyAFRvVXBwZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGlt
ZS5XcmFwcGVyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBwZXIALmN0b3IA
LmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2Vz
AFN5c3RlbS5SZXNvdXJjZXMAU0NfMGQ0Yzc5NTI1OWQxNDU1NzljMjViN2E3ZmQ4MGFhZGYuUHJv
cGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAGdldF9hY3Rpdml0aWVz
AFNDXzBkNGM3OTUyNTlkMTQ1NTc5YzI1YjdhN2ZkODBhYWRmLlByb3BlcnRpZXMAZ2V0X1JlYWRP
bmx5VmFyaWFibGVzAEdldEJ5dGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhl
cwBTZXR0aW5ncwBFcXVhbHMAQ29ubmVjdGlvbnMAZ2V0X3dhaXRpbmdyb29tc3RhdHVzAE9iamVj
dABFbmRPZlJvd3NldABnZXRfRGVmYXVsdABnZXRfYXBwb2ludG1lbnRjb21tZW50AFVzZXJDb21w
b25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABnZXRfQ29sdW1uQ291bnQATWlj
cm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9z
dABJbnB1dDBfUHJvY2Vzc0lucHV0AFN5c3RlbS5UZXh0AEdldFZhbHVlV2l0aENvbnRleHQAU2Ny
aXB0Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0X0V2YWx1YXRvckNvbnRleHQASW5wdXQwX1Byb2Nl
c3NJbnB1dFJvdwBOZXh0Um93AGdldF9ub3Nob3cAU3lzdGVtLlNlY3VyaXR5LkNyeXB0b2dyYXBo
eQBnZXRfQXNzZW1ibHkAb3BfRXF1YWxpdHkAAAAAAAN8AAADTgAABVgAMgAAgJtJAHMATgB1AGwA
bAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABG
AGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAA
YwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAA9JAG4AcAB1AHQAIAAwAAAVQwBvAG4AbgBl
AGMAdABpAG8AbgAAIXMAdAByAEMAYQBzAGUAUwBlAG4AcwBpAHQAaQB2AGUAAHFTAEMAXwAwAGQA
NABjADcAOQA1ADIANQA5AGQAMQA0ADUANQA3ADkAYwAyADUAYgA3AGEANwBmAGQAOAAwAGEAYQBk
AGYALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAy+pdSgqrrES2
qXnfry8wrgAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERaQYgAgEIEjkNBwgIEj0cDggdBQ4RRQQg
AQIIBCABHAgEIAASeQUgARFFCAcAARJ5EYCBBCABCQgHIAMdBQgICAQGEYCFBQAAEoCJBSABDh0F
AyAADgUgARI9HAUgARI9DgMgAAgFAAICDg4JBwQdBR0FEj0IBQAAEoCRBSABHQUOBiABHQUdBQQg
AQ4OCSADARI5HQgSTQMGEjkDBh0IBCABDggFIAERUQgFIAIBCBwDIAACByACAg4RgKEFIAEdCAgF
IAASgKUFIAASgKkGIAESgK0OBCAAElkFIAASgLEGIAESgLUcBQAAEoC5BiABHBKAvQUgABKAwQcg
AgEOEoDBCLd6XFYZNOCJCImEXc2AgMyRAwYSFAMGEhgDBhJVAwYSYQMGEmUDBhIgBSABARIMBCAA
EVEEIAEBAgkgBAEIDhI5Ek0FIAEBElUEAAASYQQAABJlBQABARJlBAAAEiADAAABAygADgMoAAIE
KAARUQQoABJZBAgAEmEECAASZQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9u
VGhyb3dzAQgBAAIAAAAAACgBACNTQ18wZDRjNzk1MjU5ZDE0NTU3OWMyNWI3YTdmZDgwYWFkZgAA
BQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIxAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0
LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwQBAAAAAAC0AAAA
zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBW
ZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYx
OTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBB
RFBBRFC0AAAAnEkAAAAAAAAAAAAAtkkAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhJAAAAAAAA
AAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgA
AIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA7AMA
AAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEA
AAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBG
AGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBEwD
AAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0AGIAMAAA
ABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUA
AAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AMABk
ADQAYwA3ADkANQAyADUAOQBkADEANAA1ADUANwA5AGMAMgA1AGIANwBhADcAZgBkADgAMABhAGEA
ZABmAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAAcAAo
AAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwAwAGQANABjADcAOQA1ADIANQA5AGQA
MQA0ADUANQA3ADkAYwAyADUAYgA3AGEANwBmAGQAOAAwAGEAYQBkAGYALgBkAGwAbAAAAEgAEgAB
AEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAA
MgAwADIAMQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAo
AAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADAAZAA0AGMANwA5ADUA
MgA1ADkAZAAxADQANQA1ADcAOQBjADIANQBiADcAYQA3AGYAZAA4ADAAYQBhAGQAZgAuAGQAbABs
AAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwAwAGQANABjADcAOQA1ADIA
NQA5AGQAMQA0ADUANQA3ADkAYwAyADUAYgA3AGEANwBmAGQAOAAwAGEAYQBkAGYAAAA0AAgAAQBQ
AHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEAQQBzAHMA
ZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAAMg5AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_0d4c795259d145579c25b7a7fd80aadf</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::strCaseSensitive</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">1df6cfa8cbcf9ab163b3e6ccfd145d2e</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">0a41f6e08946d480bc571cc216d8219582357232</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">91</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Connections[Connection]"
                      connectionManagerID="Package.ConnectionManagers[DW-SQL.Stage]"
                      connectionManagerRefId="Package.ConnectionManagers[DW-SQL.Stage]"
                      name="Connection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Inputs[Input 0].Columns[calendar_owner_integration_id]"
                          cachedDataType="i4"
                          cachedName="calendar_owner_integration_id"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[calendar_owner_integration_id]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Inputs[Input 0].Columns[calendar_owner_userid]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="calendar_owner_userid"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[calendar_owner_userid]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Inputs[Input 0].Columns[calendar_owner_first_name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="calendar_owner_first_name"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[calendar_owner_first_name]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Inputs[Input 0].Columns[calendar_owner_last_name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="calendar_owner_last_name"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[calendar_owner_last_name]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Inputs[Input 0].Columns[calendar_owner_institutional_email]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="150"
                          cachedName="calendar_owner_institutional_email"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[calendar_owner_institutional_email]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Inputs[Input 0].Columns[participant_integration_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="10"
                          cachedName="participant_integration_id"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[participant_integration_id]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Inputs[Input 0].Columns[participant_userid]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="participant_userid"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[participant_userid]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Inputs[Input 0].Columns[participant_first_name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="participant_first_name"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[participant_first_name]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Inputs[Input 0].Columns[participant_last_name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="participant_last_name"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[participant_last_name]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Inputs[Input 0].Columns[participant_institutional_email]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="150"
                          cachedName="participant_institutional_email"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[participant_institutional_email]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Inputs[Input 0].Columns[participant_alternate_email]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="150"
                          cachedName="participant_alternate_email"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[participant_alternate_email]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Inputs[Input 0].Columns[appointment_type_reason]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="150"
                          cachedName="appointment_type_reason"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_type_reason]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Inputs[Input 0].Columns[appointment_start_date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="20"
                          cachedName="appointment_start_date"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_start_date]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Inputs[Input 0].Columns[appointment_end_date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="20"
                          cachedName="appointment_end_date"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_end_date]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Inputs[Input 0].Columns[appointment_location]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="appointment_location"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_location]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Inputs[Input 0].Columns[appointment_description]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1000"
                          cachedName="appointment_description"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_description]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Inputs[Input 0].Columns[appointment_comment]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="4000"
                          cachedName="appointment_comment"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_comment]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Inputs[Input 0].Columns[canceled_date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="20"
                          cachedName="canceled_date"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[canceled_date]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Inputs[Input 0].Columns[course_section_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="course_section_id"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[course_section_id]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Inputs[Input 0].Columns[no_show]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="10"
                          cachedName="no_show"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[no_show]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Inputs[Input 0].Columns[arrival_time]"
                          cachedDataType="date"
                          cachedName="arrival_time"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[arrival_time]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Inputs[Input 0].Columns[wait_time]"
                          cachedDataType="i4"
                          cachedName="wait_time"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[wait_time]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Inputs[Input 0].Columns[actual_start_date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="20"
                          cachedName="actual_start_date"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[actual_start_date]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Inputs[Input 0].Columns[actual_end_date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="20"
                          cachedName="actual_end_date"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[actual_end_date]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Inputs[Input 0].Columns[actual_duration]"
                          cachedDataType="i4"
                          cachedName="actual_duration"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[actual_duration]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Inputs[Input 0].Columns[scheduled_duration]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="10"
                          cachedName="scheduled_duration"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[scheduled_duration]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Inputs[Input 0].Columns[scheduled]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="10"
                          cachedName="scheduled"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[scheduled]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Inputs[Input 0].Columns[waiting_room_status]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="waiting_room_status"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[waiting_room_status]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Inputs[Input 0].Columns[appointment_ext_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="appointment_ext_id"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_ext_id]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Inputs[Input 0].Columns[appointment_type]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="256"
                          cachedName="appointment_type"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[appointment_type]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Inputs[Input 0].Columns[ARRIVAL_TIME_NEW]"
                          cachedDataType="dbTimeStamp2"
                          cachedName="ARRIVAL_TIME_NEW"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Check NULL in Arrival_Time.Outputs[Derived Column Output].Columns[ARRIVAL_TIME_NEW]" />
                        <inputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Inputs[Input 0].Columns[activities]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="4000"
                          cachedName="activities"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data].Columns[activities]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Inputs[Input 0]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Outputs[Output 0].Columns[New_Hash]"
                          codePage="1252"
                          dataType="str"
                          length="62"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Outputs[Output 0].Columns[New_Hash]"
                          name="New_Hash" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Set Script Parameters"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[File Location]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="15"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[File Location]"
                          name="File Location"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::SourceFolder]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::SourceFolder]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[File Name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[File Name]"
                          name="File Name"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::FileName]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::FileName]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Header Line Count]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Header Line Count]"
                          name="Header Line Count"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">1</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">1</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Column Header Line]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Column Header Line]"
                          name="Column Header Line"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">1</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">1</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Column Header List]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="4000"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Column Header List]"
                          name="Column Header List"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">""</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">""</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Max Lines To Process]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Max Lines To Process]"
                          name="Max Lines To Process"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">-1</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">-1</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Max Errors To Ignore]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Max Errors To Ignore]"
                          name="Max Errors To Ignore"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">-1</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">-1</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Max Events To Log]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Max Events To Log]"
                          name="Max Events To Log"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">-1</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">-1</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Parse Log Level AE (All or Errors-Only)]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="1"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Parse Log Level AE (All or Errors-Only)]"
                          name="Parse Log Level AE (All or Errors-Only)"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"E"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"E"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Allow Missing Columns YN]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="1"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Allow Missing Columns YN]"
                          name="Allow Missing Columns YN"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"Y"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"Y"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Allow Extra Columns YN]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="1"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Allow Extra Columns YN]"
                          name="Allow Extra Columns YN"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"Y"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"Y"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Column Names Case Sensitive YN]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="1"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Column Names Case Sensitive YN]"
                          name="Column Names Case Sensitive YN"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"N"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"N"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Truncate String Values YN]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="1"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Truncate String Values YN]"
                          name="Truncate String Values YN"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"Y"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"Y"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Strip Unicode from Non-Unicode YN]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="1"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Strip Unicode from Non-Unicode YN]"
                          name="Strip Unicode from Non-Unicode YN"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"Y"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"Y"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Convert Three-Char Timezoned to Offsets YN]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="1"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Convert Three-Char Timezoned to Offsets YN]"
                          name="Convert Three-Char Timezoned to Offsets YN"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"Y"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"Y"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Fix Date Values YN]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Fix Date Values YN]"
                          name="Fix Date Values YN"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"Y"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"Y"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Earliest Allowable Year]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Earliest Allowable Year]"
                          name="Earliest Allowable Year"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">1753</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">1753</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Allowable Date Formats]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="23"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Allowable Date Formats]"
                          name="Allowable Date Formats"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"yyyy-MM-dd HH:mm:ss zzz"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"yyyy-MM-dd HH:mm:ss zzz"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Convert to TimeZone]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Convert to TimeZone]"
                          name="Convert to TimeZone"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"Eastern Standard Time"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"Eastern Standard Time"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Workday ID Column]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Workday ID Column]"
                          name="Workday ID Column"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">""</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">""</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Lookup Value Column]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Lookup Value Column]"
                          name="Lookup Value Column"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">""</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">""</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Additional Data Column]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Additional Data Column]"
                          name="Additional Data Column"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">""</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">""</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Not Null Columns]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="8000"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Not Null Columns]"
                          name="Not Null Columns"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">""</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">""</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Mandatory Columns]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Mandatory Columns]"
                          name="Mandatory Columns"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">""</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">""</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Non-Truncateable Columns]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="4000"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Non-Truncateable Columns]"
                          name="Non-Truncateable Columns"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">""</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">""</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Column Regex Patterns]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="8000"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Column Regex Patterns]"
                          name="Column Regex Patterns"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">""</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">""</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[File Name Output Column]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[File Name Output Column]"
                          name="File Name Output Column"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"Input_File_Name"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"Input_File_Name"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Record Text Output Column]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Record Text Output Column]"
                          name="Record Text Output Column"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"Input_Line_Text"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"Input_Line_Text"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Fail On Extra Column YN]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="1"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Fail On Extra Column YN]"
                          name="Fail On Extra Column YN"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"N"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"N"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Fail On Missing Column YN]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="1"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Fail On Missing Column YN]"
                          name="Fail On Missing Column YN"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"N"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"N"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Fail On Missing Mandatory Column In Header YN]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="1"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Fail On Missing Mandatory Column In Header YN]"
                          name="Fail On Missing Mandatory Column In Header YN"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"Y"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"Y"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Fail On Missing Mandatory Column In Line YN]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="1"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output].Columns[Fail On Missing Mandatory Column In Line YN]"
                          name="Fail On Missing Mandatory Column In Line YN"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"N"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"N"</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage.Paths[CheckumNotEqual]"
                  endId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue.Inputs[OLE DB Command Input]"
                  name="CheckumNotEqual"
                  startId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Conditional Split Check Hash.Outputs[CheckumNotEqual]" />
                <path
                  refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage.Paths[Derived Column Output]"
                  endId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Check NULL in Arrival_Time.Inputs[Derived Column Input]"
                  name="Derived Column Output"
                  startId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Adding New Columns.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage.Paths[Derived Column Output1]"
                  endId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Inputs[Input - Configuration Parameter]"
                  name="Derived Column Output"
                  startId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage.Paths[Derived Column Output2]"
                  endId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\New Parse Error Columns.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage.Paths[Derived Column Output3]"
                  endId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Inputs[Input 0]"
                  name="Derived Column Output"
                  startId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Check NULL in Arrival_Time.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage.Paths[Lookup Match Output]"
                  endId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Conditional Split Check Hash.Inputs[Conditional Split Input]"
                  name="Lookup Match Output"
                  startId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Lookup.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage.Paths[Lookup No Match Output]"
                  endId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Row Count.Inputs[Row Count Input 1]"
                  name="Lookup No Match Output"
                  startId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Lookup.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage.Paths[Matched]"
                  endId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\MachedRecords.Inputs[Row Count Input 1]"
                  name="Matched"
                  startId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Conditional Split Check Hash.Outputs[Matched]" />
                <path
                  refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage.Paths[OLE DB Source Output]"
                  endId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters.Inputs[Derived Column Input]"
                  name="OLE DB Source Output"
                  startId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Get Single Row.Outputs[OLE DB Source Output]" />
                <path
                  refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage.Paths[Output - File Data]"
                  endId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Adding New Columns.Inputs[Derived Column Input]"
                  name="Output - File Data"
                  startId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - File Data]" />
                <path
                  refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage.Paths[Output - Record Level Parse Errors]"
                  endId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\New Parse Error Columns.Inputs[Derived Column Input]"
                  name="Output - Record Level Parse Errors"
                  startId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments.Outputs[Output - Record Level Parse Errors]" />
                <path
                  refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage.Paths[Output 0]"
                  endId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Lookup.Inputs[Lookup Input]"
                  name="Output 0"
                  startId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue.Outputs[Output 0]" />
                <path
                  refId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage.Paths[Row Count Output 1]"
                  endId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments.Inputs[OLE DB Destination Input]"
                  name="Row Count Output 1"
                  startId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Row Count.Outputs[Row Count Output 1]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{4BCA249F-06C6-47E8-A889-920291499601}"
          DTS:ObjectName="{4BCA249F-06C6-47E8-A889-920291499601}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::FileName" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Moving File"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Moving File"
      DTS:Disabled="True"
      DTS:DTSID="{4CE6FD02-4F44-4C39-8DD1-841FBFE8228E}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Moving File">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Moving File\Archive File"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{B702044C-A4C8-40EE-9039-F76AF4F6649D}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Archive File"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_2f3d40c5a861436994b89e55eba0b7ca"
              VSTAMajorVersion="16"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::DestinationFolder,User::SourceFolder"
              ReadWriteVariables="User::FilesMovedCount">
              <ProjectItem
                Name="ST_2f3d40c5a861436994b89e55eba0b7ca.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{25B9DDDF-7881-4BD6-98AA-AAC6225E1133}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_2f3d40c5a861436994b89e55eba0b7ca</RootNamespace>
    <AssemblyName>ST_2f3d40c5a861436994b89e55eba0b7ca</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_2f3d40c5a861436994b89e55eba0b7ca.Properties.Settings.get_Default():ST_2f3d40c5a861436994b89e55eba0b7ca.Properties.Sett" +
    "ings")]

namespace ST_2f3d40c5a861436994b89e55eba0b7ca.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.IO;
#endregion

namespace ST_2f3d40c5a861436994b89e55eba0b7ca
{
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        public void Main()
        {
            string folderpart;
            bool folderExists;
            string destFolder;
            string sourceFolder;
            string fileName;
            int fileCnt = 0;

            try
            {
                // Retrieve variables from SSIS
                destFolder = Dts.Variables["User::DestinationFolder"].Value.ToString();
                sourceFolder = Dts.Variables["User::SourceFolder"].Value.ToString();

                // Ensure source folder exists
                if (!Directory.Exists(sourceFolder))
                {
                    Dts.Events.FireError(0, "Archive File", $"Source folder does not exist: {sourceFolder}", "", 0);
                    Dts.TaskResult = (int)ScriptResults.Failure;
                    return;
                }

                var directory = new DirectoryInfo(sourceFolder);
                FileInfo[] files = directory.GetFiles("appoin*");

                foreach (FileInfo file in files)
                {
                    fileName = file.Name;
                    int lastUnderscoreIndex = fileName.LastIndexOf("_");

                    // Check if underscore exists in the file name
                    if (lastUnderscoreIndex > 0)
                    {
                        folderpart = fileName.Substring(0, lastUnderscoreIndex);
                    }
                    else
                    {
                        // Handle case where underscore is not found
                        folderpart = "UnknownFolder"; // Default folder name
                        Dts.Events.FireWarning(0, "Archive File", $"Underscore not found in filename: {fileName}", "", 0);
                    }

                    string targetFolderPath = Path.Combine(destFolder, folderpart);

                    // Ensure the target folder exists
                    if (!Directory.Exists(targetFolderPath))
                    {
                        Directory.CreateDirectory(targetFolderPath);
                    }

                    string targetFilePath = Path.Combine(targetFolderPath, fileName);

                    // Delete the file if it already exists
                    if (File.Exists(targetFilePath))
                    {
                        File.Delete(targetFilePath);
                    }

                    // Move the file
                    try
                    {
                        File.Move(file.FullName, targetFilePath);
                        fileCnt += 1;
                    }
                    catch (Exception moveEx)
                    {
                        Dts.Events.FireError(0, "File Move Error", $"Error moving file {fileName}: {moveEx.Message}", "", 0);
                    }
                }

                // Store the count of moved files in the SSIS variable
                Dts.Variables["User::FilesMovedCount"].Value = fileCnt;
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                Dts.Events.FireError(0, "Script Task Error", ex.Message, "", 0);
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }

        #region ScriptResults declaration
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_2f3d40c5a861436994b89e55eba0b7ca</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_2f3d40c5a861436994b89e55eba0b7ca</msb:DisplayName>
    <msb:ProjectId>{76FE1B36-5430-482B-A96C-275BC19931F7}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_2f3d40c5a861436994b89e55eba0b7ca.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_2f3d40c5a861436994b89e55eba0b7ca")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_2f3d40c5a861436994b89e55eba0b7ca")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_2f3d40c5a861436994b89e55eba0b7ca.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_2f3d40c5a861436994b89e55eba0b7ca.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_2f3d40c5a861436994b89e55eba0b7ca.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_2f3d40c5a861436994b89e55eba0b7ca.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_2f3d40c5a861436994b89e55eba0b7ca.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_2f3d40c5a861436994b89e55eba0b7ca.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDACNz2WcAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAANjMA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOQyAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAPBMAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAY
MwAAAAAAAEgAAAACAAUA6CIAAEQPAAABAAAAAAAAACwyAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBwDwAQAAAQAAERYTBAIoEAAACm8RAAAKcgEAAHBvEgAA
Cm8TAAAKbxQAAAoLAigQAAAKbxEAAApyMQAAcG8SAAAKbxMAAApvFAAACgwIKBUAAAotOQIoEAAA
Cm8WAAAKFnJXAABwcnEAAHAIKBcAAApyrwAAcBZvGAAACiYCKBAAAAoXbxkAAArdawEAAAhzGgAA
CnKxAABwbxsAAAoTBRYTBjjjAAAAEQURBpoTBxEHbxwAAAoNCXLBAABwbx0AAAoTCBEIFjEMCRYR
CG8eAAAKCistcsUAAHAKAigQAAAKbxYAAAoWclcAAHBy4QAAcAkoFwAACnKvAABwFm8fAAAKBwYo
IAAAChMJEQkoFQAACi0IEQkoIQAACiYRCQkoIAAAChMKEQooIgAACiwHEQooIwAACgARB28kAAAK
EQooJQAAChEEF1gTBN44EwsCKBAAAApvFgAAChZyJwEAcHJHAQBwCXJtAQBwEQtvJgAACignAAAK
cq8AAHAWbxgAAAom3gARBhdYEwYRBhEFjmk/Ev///wIoEAAACm8RAAAKcnMBAHBvEgAAChEEjCQA
AAFvKAAACgIoEAAAChZvGQAACt40EwwCKBAAAApvFgAAChZynwEAcBEMbyYAAApyrwAAcBZvGAAA
CiYCKBAAAAoXbxkAAAreACpBNAAAAAAAAC0BAAAWAAAAQwEAADgAAAAQAAABAAAAAAMAAAC4AQAA
uwEAADQAAAAQAAABHgIoKQAACioeAigqAAAKKq5+AQAABC0ecsMBAHDQAwAAAigrAAAKbywAAApz
LQAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4CKC4AAAoqLnMIAAAGgAMAAAQq
AABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAABsBAAAI34AANgEAABYBgAAI1N0
cmluZ3MAAAAAMAsAADgCAAAjVVMAaA0AABAAAAAjR1VJRAAAAHgNAADMAQAAI0Jsb2IAAAAAAAAA
AgAAAVcdogEJAwAAAPoBMwAWAAABAAAAJwAAAAUAAAAGAAAACQAAAAEAAAAuAAAAAgAAABAAAAAB
AAAAAgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAAA8QMBAAAAAAAGAGsCDwUGAPoCDwUGALcB
/AQPAIMFAAAGAOQBbwQGAE4CbwQGAC8CbwQGAOECbwQGAIsCbwQGAKQCbwQGAPsBbwQGABYCQwMK
AL8CoAMKAC8BoAMGAIsEEAAGAIEEIgQGACkEIgQGAJoB/AQGABgGIgQGAMEELwUGAJQEWgQOAGMB
2wMOAMsB2wMOAEsBRQQGAH8BDwUKAMkDoAMSAMUF0gASAIoA0gAGAE0GEAAKANEEoAMGAGsDIgQG
AK8EEAAGAKAEEAAGAHwDEAAGALcAEAAGAAEAIgQGAPoAIgQGAJMAIgQGAD4GbwQAAAAABwAAAAAA
AQABAAEAEAA6BEEAOQABAAEAAAAQADYFkgVNAAEAAwAAARAA2AWSBWEAAwAHAAMBAADxBQAARQAE
AAoAEQAuBM4AEQAfAdIAEQBuANYABgY5ANoAVoDhBd0AVoD/AN0AUCAAAAAAhgBABAYAAQCAIgAA
AACGGO8EBgABAIgiAAAAAIMY7wQGAAEAkCIAAAAAkwi9BOEAAQC8IgAAAACTCAcB5gABAMMiAAAA
AJMIEwHrAAEAyyIAAAAAlggfBvEAAgDSIgAAAACGGO8EBgACANoiAAAAAJEY9QT2AAIAAAABACwD
CQDvBAEAEQDvBAYAGQDvBAoAKQDvBBAAMQDvBBAAOQDvBBAAQQDvBBAASQDvBBAAUQDvBBAAWQDv
BBAAYQDvBBAAaQDvBAYAkQDvBAYAuQDvBBUAyQDvBAYAcQDpBTAA0QDBBTUA2QAZBDoA4QAYA0AA
mQBpA0QA6QAKBkgA0QD/BU0A+QARBlIA8QDlBFgA0QArBgEAAQHvBBAAAQHPBWEACQG8AEQA+QA3
A2gA+QByA20A8QBdA3MAEQHyAFIA6QBHBnwAGQEKBkgAGQF4AYMACQHFAEQAGQEyA4gAgQB+AEQA
+QARBo4A4QAiA5YAcQDvBAYAmQDvBAYAKQGlAJsAKQE6BqQAoQDvBKoAwQDvBAYACAAUAMQACAAY
AMkAKQBzADEBLgALAAkBLgATABIBLgAbADEBLgAjADoBLgArAGMBLgAzAGMBLgA7AGMBLgBDADoB
LgBLAGkBLgBTAGMBLgBbAIABQwBjAMkASQBzADEBYQB7AMkAYwBrAMkAGwADAAEABAADAAAAwQT6
AAAAJwH/AAAAIwYEAQIABAADAAIABQAFAAEABgAFAAIABwAHAASAAAABAAAA+COxQQAAAAAAAEEA
AAAEAAAAAAAAAAAAAACyAGUAAAAAABAAAAAAAAAAAAAAALsAgQMAAAAABAAAAAAAAAAAAAAAsgAi
BAAAAAAQAAAAAAAAAAAAAAC7ABoAAAAAAAAAAAABAAAAQAUAAAUAAgAAAAAAAEludDMyADxNb2R1
bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBTVF8y
ZjNkNDBjNWE4NjE0MzY5OTRiODllNTVlYmEwYjdjYQBtc2NvcmxpYgBkZWZhdWx0SW5zdGFuY2UA
Z2V0X01lc3NhZ2UAVmFyaWFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUA
RmlsZQBnZXRfTmFtZQBnZXRfRnVsbE5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGlt
ZQBDb21iaW5lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1
bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNl
AEVkaXRvckJyb3dzYWJsZVN0YXRlAERlbGV0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBE
ZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJv
d3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtB
dHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0
dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlv
bnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0
cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlB
dHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHNldF9WYWx1
ZQB2YWx1ZQBNb3ZlAExhc3RJbmRleE9mAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcARmlyZVdh
cm5pbmcAVG9TdHJpbmcAU3Vic3RyaW5nAFBhdGgATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRU
YXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0
TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUXzJmM2Q0MGM1YTg2MTQzNjk5NGI4OWU1NWVi
YTBiN2NhLmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5
c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9u
AEV4Y2VwdGlvbgBGaWxlSW5mbwBDdWx0dXJlSW5mbwBGaWxlU3lzdGVtSW5mbwBEaXJlY3RvcnlJ
bmZvAGdldF9SZXNvdXJjZU1hbmFnZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBGaXJlRXJyb3IALmN0
b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZp
Y2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfMmYzZDQwYzVhODYxNDM2OTk0Yjg5ZTU1ZWJhMGI3Y2Eu
UHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUXzJmM2Q0MGM1
YTg2MTQzNjk5NGI4OWU1NWViYTBiN2NhLlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBHZXRGaWxl
cwBTZXR0aW5ncwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBnZXRfRXZlbnRzAEV4aXN0
cwBDb25jYXQAT2JqZWN0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AGdldF9Bc3NlbWJseQBD
cmVhdGVEaXJlY3RvcnkAAAAvVQBzAGUAcgA6ADoARABlAHMAdABpAG4AYQB0AGkAbwBuAEYAbwBs
AGQAZQByAAAlVQBzAGUAcgA6ADoAUwBvAHUAcgBjAGUARgBvAGwAZABlAHIAABlBAHIAYwBoAGkA
dgBlACAARgBpAGwAZQAAPVMAbwB1AHIAYwBlACAAZgBvAGwAZABlAHIAIABkAG8AZQBzACAAbgBv
AHQAIABlAHgAaQBzAHQAOgAgAAABAA9hAHAAcABvAGkAbgAqAAADXwAAG1UAbgBrAG4AbwB3AG4A
RgBvAGwAZABlAHIAAEVVAG4AZABlAHIAcwBjAG8AcgBlACAAbgBvAHQAIABmAG8AdQBuAGQAIABp
AG4AIABmAGkAbABlAG4AYQBtAGUAOgAgAAAfRgBpAGwAZQAgAE0AbwB2AGUAIABFAHIAcgBvAHIA
ACVFAHIAcgBvAHIAIABtAG8AdgBpAG4AZwAgAGYAaQBsAGUAIAAABToAIAAAK1UAcwBlAHIAOgA6
AEYAaQBsAGUAcwBNAG8AdgBlAGQAQwBvAHUAbgB0AAAjUwBjAHIAaQBwAHQAIABUAGEAcwBrACAA
RQByAHIAbwByAABxUwBUAF8AMgBmADMAZAA0ADAAYwA1AGEAOAA2ADEANAAzADYAOQA5ADQAYgA4
ADkAZQA1ADUAZQBiAGEAMABiADcAYwBhAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8A
dQByAGMAZQBzAAAAAAAvIOEhlELORrmx7Obk2d0+AAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFZ
FAcNDg4ODggdEj0IEj0IDg4SQRJBBCAAEmkEIAASbQUgARJxHAMgABwDIAAOBAABAg4EIAASeQUA
Ag4ODgggBQIIDg4OCAYgAR0SPQ4EIAEIDgUgAg4ICAggBQEIDg4OCAYAARKAgQ4EAAEBDgUAAgEO
DgcABA4ODg4OBCABARwIAAESgJURgJkFIAASgJ0HIAIBDhKAnQi3elxWGTTgiQiJhF3NgIDMkQQA
AAAABAEAAAADBhJRAwYSVQMGEhACBggDBhEUBAAAElEEAAASVQUAAQESVQQAABIQAwAAAQQIABJR
BAgAElUECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAA
AAAoAQAjU1RfMmYzZDQwYzVhODYxNDM2OTk0Yjg5ZTU1ZWJhMGI3Y2EAAAUBAAAAABYBABFDb3B5
cmlnaHQgQCAgMjAyMwAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdv
cmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcAALQAAADOyu++AQAAAJEAAABsU3lzdGVt
LlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3Vs
dHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNv
dXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAAMMwAAAAAAAAAA
AAAmMwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGDMAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBt
c2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAsUH4IwAAAQCxQfgjPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAFQAXwAyAGYAMwBkADQAMABjADUAYQA4ADYAMQA0ADMANgA5ADkANABiADgAOQBlADUANQBl
AGIAYQAwAGIANwBjAGEAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
OQAyADAAOAAuADEANgA4ADEANwAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABT
AFQAXwAyAGYAMwBkADQAMABjADUAYQA4ADYAMQA0ADMANgA5ADkANABiADgAOQBlADUANQBlAGIA
YQAwAGIANwBjAGEALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAA
AEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMwAAACoAAQABAEwAZQBnAGEAbABUAHIA
YQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBh
AG0AZQAAAFMAVABfADIAZgAzAGQANAAwAGMANQBhADgANgAxADQAMwA2ADkAOQA0AGIAOAA5AGUA
NQA1AGUAYgBhADAAYgA3AGMAYQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBl
AAAAAABTAFQAXwAyAGYAMwBkADQAMABjADUAYQA4ADYAMQA0ADMANgA5ADkANABiADgAOQBlADUA
NQBlAGIAYQAwAGIANwBjAGEAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADkAMgAwADgALgAxADYAOAAxADcAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYA
ZQByAHMAaQBvAG4AAAAxAC4AMAAuADkAMgAwADgALgAxADYAOAAxADcAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAODMAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Moving File\Files  Moved to Archive"
          DTS:CreationName="Microsoft.SendMailTask"
          DTS:Description="Send Mail Task"
          DTS:DTSID="{2BB8B2A7-22E5-44D2-9DF2-A52E94D5EFDE}"
          DTS:ExecutableType="Microsoft.SendMailTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Files  Moved to Archive"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:PropertyExpression
            DTS:Name="FromLine">@[User::Email_id_sender]</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="ToLine">@[User::Email_id_receiver]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SendMailTask:SendMailTaskData
              SendMailTask:SMTPServer="{C23A715E-7872-4EBD-9259-328B5690DD1E}"
              SendMailTask:From="umg-up.biteam.datawarehouse@pennstateoffice365.onmicrosoft.com"
              SendMailTask:To="L-DWEMAIL@LISTS.PSU.EDU"
              SendMailTask:Subject="Starfish Files"
              SendMailTask:Priority="High"
              SendMailTask:MessageSourceType="Variable"
              SendMailTask:MessageSource="User::FilesMovedMsg" xmlns:SendMailTask="www.microsoft.com/sqlserver/dts/tasks/sendmailtask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Moving File\Files Not Moved Problem"
          DTS:CreationName="Microsoft.SendMailTask"
          DTS:Description="Send Mail Task"
          DTS:DTSID="{879AC539-89FE-4BBB-8C98-A0D3186226EE}"
          DTS:ExecutableType="Microsoft.SendMailTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Files Not Moved Problem"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:PropertyExpression
            DTS:Name="FromLine">@[User::Email_id_sender]</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="ToLine">@[User::Email_id_receiver]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SendMailTask:SendMailTaskData
              SendMailTask:SMTPServer="{C23A715E-7872-4EBD-9259-328B5690DD1E}"
              SendMailTask:From="umg-up.biteam.datawarehouse@pennstateoffice365.onmicrosoft.com"
              SendMailTask:To="L-DWEMAIL@LISTS.PSU.EDU"
              SendMailTask:Subject="Starfish Files"
              SendMailTask:Priority="High"
              SendMailTask:MessageSourceType="Variable"
              SendMailTask:MessageSource="User::NoFilesMoved" xmlns:SendMailTask="www.microsoft.com/sqlserver/dts/tasks/sendmailtask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Moving File\Find Junk Files"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{609AA4DE-2104-402F-BC82-3C116E534CC8}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="Find Junk Files">
          <DTS:ForEachEnumerator
            DTS:CreationName="Microsoft.ForEachFileEnumerator"
            DTS:DTSID="{CD8C7BC7-D530-4681-8904-F0DFF3C6A262}"
            DTS:ObjectName="{3FB4F9E9-1245-4E10-A3F7-7099A4368BBB}">
            <DTS:ObjectData>
              <ForEachFileEnumeratorProperties>
                <FEFEProperty
                  Folder="F:\Dat\starfish" />
                <FEFEProperty
                  FileSpec="*.csv" />
                <FEFEProperty
                  FileNameRetrievalType="1" />
                <FEFEProperty
                  Recurse="0" />
              </ForEachFileEnumeratorProperties>
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Moving File\Find Junk Files\Delete  Junk Files"
              DTS:CreationName="Microsoft.FileSystemTask"
              DTS:DelayValidation="True"
              DTS:Description="File System Task"
              DTS:DTSID="{E76DBEDA-2051-4DFD-8A5C-78478EAB351F}"
              DTS:ExecutableType="Microsoft.FileSystemTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Delete  Junk Files"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:ObjectData>
                <FileSystemData
                  TaskOperationType="DeleteFile"
                  TaskSourcePath="User::varDeleteFiles"
                  TaskIsSourceVariable="True" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{8C6CCC23-399B-4112-A197-287F31B08C52}"
              DTS:ObjectName="{12768FEA-D8BF-428D-BA90-E757F58881BB}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::varDeleteFiles" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Moving File.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{305A7C1D-A9AC-44B2-A1C2-CDE715B764D5}"
          DTS:From="Package\Moving File\Archive File"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Moving File\Find Junk Files" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Moving File.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{82B14814-6E10-4675-A271-436A2EC50D4B}"
          DTS:From="Package\Moving File\Archive File"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Moving File\Files  Moved to Archive" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Moving File.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{622EB7CE-E934-46C5-A8DE-13A47F78992B}"
          DTS:From="Package\Moving File\Archive File"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Moving File\Files Not Moved Problem"
          DTS:Value="1" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Truncate table sf_appointments"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{16D8B39B-6A50-4294-BABD-0B0708F64A62}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Truncate table sf_appointments"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{F35176C9-AA0C-4630-AB13-EEC5D53DD737}"
          SQLTask:SqlStatementSource="truncate table idr.sf_appointments" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Updating Table appointments on IDR"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{5A5C5950-48CE-400A-A388-25A8D2647882}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Updating Table appointments on IDR">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{7FCED90B-BFC2-4D05-AEA1-90C18D53BD3C}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Incrimental Update appointments Table"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Conditional Split"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Conditional Split"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Conditional Split.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Conditional Split.Inputs[Conditional Split Input].Columns[Hash_DW_dest]"
                          cachedDataType="wstr"
                          cachedLength="62"
                          cachedName="Hash_DW_dest"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Lookup.Outputs[Lookup Match Output].Columns[Hash_DW_dest]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Conditional Split.Inputs[Conditional Split Input].Columns[Hash_DW_str]"
                          cachedDataType="wstr"
                          cachedLength="62"
                          cachedName="Hash_DW_str"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[Hash_DW_str]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Conditional Split.Outputs[Matched-Hash]"
                      description="Output 3 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Matched-Hash"
                      synchronousInputId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[Hash_DW_str]} == #{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Lookup.Outputs[Lookup Match Output].Columns[Hash_DW_dest]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">Hash_DW_str == Hash_DW_dest</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Conditional Split.Outputs[Not Matched-Hash]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Not Matched-Hash"
                      synchronousInputId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Conditional Split.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Conditional Split.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Conditional Split.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[INTEGRATION_ID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="62"
                          cachedName="INTEGRATION_ID"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[INTEGRATION_ID]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[appointment_ext_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="appointment_ext_id"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[appointment_ext_id]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[calendar_owner_integration_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="65"
                          cachedName="calendar_owner_integration_id"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[calendar_owner_integration_id]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[calendar_owner_userid]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="calendar_owner_userid"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[calendar_owner_userid]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[calendar_owner_first_name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="calendar_owner_first_name"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[calendar_owner_first_name]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[calendar_owner_last_name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="calendar_owner_last_name"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[calendar_owner_last_name]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[calendar_owner_institutional_email]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="150"
                          cachedName="calendar_owner_institutional_email"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[calendar_owner_institutional_email]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[participant_integration_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="participant_integration_id"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[participant_integration_id]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[participant_userid]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="participant_userid"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[participant_userid]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[participant_first_name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="participant_first_name"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[participant_first_name]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[participant_last_name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="participant_last_name"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[participant_last_name]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[participant_institutional_email]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="150"
                          cachedName="participant_institutional_email"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[participant_institutional_email]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[participant_alternate_email]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="150"
                          cachedName="participant_alternate_email"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[participant_alternate_email]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[appointment_type_reason]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="4000"
                          cachedName="appointment_type_reason"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[appointment_type_reason]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[appointment_start_date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="24"
                          cachedName="appointment_start_date"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[appointment_start_date]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[appointment_end_date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="24"
                          cachedName="appointment_end_date"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[appointment_end_date]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[appointment_location]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="appointment_location"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[appointment_location]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[appointment_description]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="8000"
                          cachedName="appointment_description"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[appointment_description]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[appointment_comment]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="4000"
                          cachedName="appointment_comment"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[appointment_comment]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[canceled_date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="24"
                          cachedName="canceled_date"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[canceled_date]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[course_section_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="course_section_id"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[course_section_id]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[no_show]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="10"
                          cachedName="no_show"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[no_show]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[appointment_type]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="appointment_type"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[appointment_type]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[arrival_time]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="arrival_time"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[arrival_time]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[wait_time]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="24"
                          cachedName="wait_time"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[wait_time]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[actual_start_date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="24"
                          cachedName="actual_start_date"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[actual_start_date]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[actual_end_date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="24"
                          cachedName="actual_end_date"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[actual_end_date]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[actual_duration]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="24"
                          cachedName="actual_duration"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[actual_duration]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[scheduled_duration]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="24"
                          cachedName="scheduled_duration"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[scheduled_duration]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[SCHEDULED]"
                          cachedDataType="wstr"
                          cachedLength="9"
                          cachedName="SCHEDULED"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\DC-UPDATE_DT.Outputs[Derived Column Output].Columns[SCHEDULED]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[waiting_room_status]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="waiting_room_status"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[waiting_room_status]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[activities]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="4000"
                          cachedName="activities"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[activities]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[INSERT_DT]"
                          cachedDataType="dbTimeStamp"
                          cachedName="INSERT_DT"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[INSERT_DT]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[UPDATE_DT]"
                          cachedDataType="dbTimeStamp"
                          cachedName="UPDATE_DT"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\DC-UPDATE_DT.Outputs[Derived Column Output].Columns[UPDATE_DT]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[ETL_SOURCE]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="15"
                          cachedName="ETL_SOURCE"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[ETL_SOURCE]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[FileImported]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="FileImported"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[FileImported]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[FileCreated_On]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="25"
                          cachedName="FileCreated_On"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[FileCreated_On]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[FileSize]"
                          cachedDataType="i4"
                          cachedName="FileSize"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[FileSize]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[Hash_DW]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="62"
                          cachedName="Hash_DW"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[Hash_DW]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[CLASSTERMCODE]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="10"
                          cachedName="CLASSTERMCODE"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Script Component Split.Outputs[Output 0].Columns[CLASSTERMCODE]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[CLASSSESSIONCODE]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="10"
                          cachedName="CLASSSESSIONCODE"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Script Component Split.Outputs[Output 0].Columns[CLASSSESSIONCODE]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[CRSECARCODE]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="10"
                          cachedName="CRSECARCODE"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Script Component Split.Outputs[Output 0].Columns[CRSECARCODE]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input].Columns[CLASSNBR]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="10"
                          cachedName="CLASSNBR"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Script Component Split.Outputs[Output 0].Columns[CLASSNBR]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[INTEGRATION_ID_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="62"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[INTEGRATION_ID_str]"
                          name="INTEGRATION_ID_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[INTEGRATION_ID]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[appointment_ext_id_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[appointment_ext_id_str]"
                          name="appointment_ext_id_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[appointment_ext_id]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[calendar_owner_integration_id_int]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[calendar_owner_integration_id_int]"
                          name="calendar_owner_integration_id_int"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[calendar_owner_integration_id]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[calendar_owner_userid_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[calendar_owner_userid_str]"
                          name="calendar_owner_userid_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[calendar_owner_userid]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[calendar_owner_first_name_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[calendar_owner_first_name_str]"
                          name="calendar_owner_first_name_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[calendar_owner_first_name]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[calendar_owner_last_name_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[calendar_owner_last_name_str]"
                          name="calendar_owner_last_name_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[calendar_owner_last_name]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[calendar_owner_institutional_email_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="150"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[calendar_owner_institutional_email_str]"
                          name="calendar_owner_institutional_email_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[calendar_owner_institutional_email]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[participant_integration_id_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="10"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[participant_integration_id_str]"
                          name="participant_integration_id_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[participant_integration_id]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[participant_userid_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[participant_userid_str]"
                          name="participant_userid_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[participant_userid]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[participant_first_name_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[participant_first_name_str]"
                          name="participant_first_name_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[participant_first_name]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[participant_last_name_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[participant_last_name_str]"
                          name="participant_last_name_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[participant_last_name]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[participant_institutional_email_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[participant_institutional_email_str]"
                          name="participant_institutional_email_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[participant_institutional_email]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[participant_alternate_email_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="150"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[participant_alternate_email_str]"
                          name="participant_alternate_email_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[participant_alternate_email]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[appointment_type_reason_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="4000"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[appointment_type_reason_str]"
                          name="appointment_type_reason_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[appointment_type_reason]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[appointment_start_date_DT]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[appointment_start_date_DT]"
                          name="appointment_start_date_DT"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[appointment_start_date]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[appointment_end_date_DT]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[appointment_end_date_DT]"
                          name="appointment_end_date_DT"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[appointment_end_date]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[appointment_location_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[appointment_location_str]"
                          name="appointment_location_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[appointment_location]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[appointment_description_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="4000"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[appointment_description_str]"
                          name="appointment_description_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[appointment_description]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[appointment_comment_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="4000"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[appointment_comment_str]"
                          name="appointment_comment_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[appointment_comment]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[canceled_date_DT]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[canceled_date_DT]"
                          name="canceled_date_DT"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[canceled_date]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[course_section_id_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[course_section_id_str]"
                          name="course_section_id_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[course_section_id]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[no_show_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="10"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[no_show_str]"
                          name="no_show_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[no_show]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[appointment_type_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="500"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[appointment_type_str]"
                          name="appointment_type_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[appointment_type]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[arrival_time_dt]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[arrival_time_dt]"
                          name="arrival_time_dt"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[arrival_time]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[wait_time_int]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[wait_time_int]"
                          name="wait_time_int"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[wait_time]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[actual_start_date_dt]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[actual_start_date_dt]"
                          name="actual_start_date_dt"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[actual_start_date]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[actual_end_date_dt]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[actual_end_date_dt]"
                          name="actual_end_date_dt"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[actual_end_date]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[actual_duration_int]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[actual_duration_int]"
                          name="actual_duration_int"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[actual_duration]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[scheduled_duration_int]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[scheduled_duration_int]"
                          name="scheduled_duration_int"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[scheduled_duration]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[scheduled_bol]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="10"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[scheduled_bol]"
                          name="scheduled_bol"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\DC-UPDATE_DT.Outputs[Derived Column Output].Columns[SCHEDULED]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[waiting_room_status_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[waiting_room_status_str]"
                          name="waiting_room_status_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[waiting_room_status]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[activities_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="4000"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[activities_str]"
                          name="activities_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[activities]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[OLE DB Source.INSERT_DT]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[OLE DB Source.INSERT_DT]"
                          name="OLE DB Source.INSERT_DT"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[INSERT_DT]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of OLE DB Source.UPDATE_DT]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of OLE DB Source.UPDATE_DT]"
                          name="Copy of OLE DB Source.UPDATE_DT"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\DC-UPDATE_DT.Outputs[Derived Column Output].Columns[UPDATE_DT]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[ETL_SOURCE_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="15"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[ETL_SOURCE_str]"
                          name="ETL_SOURCE_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[ETL_SOURCE]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[FileImported_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[FileImported_str]"
                          name="FileImported_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[FileImported]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[FileCreated_On_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="25"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[FileCreated_On_str]"
                          name="FileCreated_On_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[FileCreated_On]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[FileSize_int]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[FileSize_int]"
                          name="FileSize_int"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[FileSize]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[Hash_DW_str]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="62"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[Hash_DW_str]"
                          name="Hash_DW_str"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[Hash_DW]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[CLASS_TERM_CODE]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="10"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[CLASS_TERM_CODE]"
                          name="CLASS_TERM_CODE"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Script Component Split.Outputs[Output 0].Columns[CLASSTERMCODE]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[CLASS_SESSION_CODE]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="10"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[CLASS_SESSION_CODE]"
                          name="CLASS_SESSION_CODE"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Script Component Split.Outputs[Output 0].Columns[CLASSSESSIONCODE]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[CRSE_CAR_CODE]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="10"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[CRSE_CAR_CODE]"
                          name="CRSE_CAR_CODE"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Script Component Split.Outputs[Output 0].Columns[CRSECARCODE]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[CLASS_NBR]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="10"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[CLASS_NBR]"
                          name="CLASS_NBR"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Script Component Split.Outputs[Output 0].Columns[CLASSNBR]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\DC-UPDATE_DT"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="DC-UPDATE_DT"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\DC-UPDATE_DT.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\DC-UPDATE_DT.Inputs[Derived Column Input].Columns[scheduled]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="10"
                          cachedName="scheduled"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[scheduled]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\DC-UPDATE_DT.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\DC-UPDATE_DT.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\DC-UPDATE_DT.Outputs[Derived Column Output].Columns[UPDATE_DT]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\DC-UPDATE_DT.Outputs[Derived Column Output].Columns[UPDATE_DT]"
                          name="UPDATE_DT"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[System::StartTime]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[System::StartTime]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\DC-UPDATE_DT.Outputs[Derived Column Output].Columns[SCHEDULED]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="9"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\DC-UPDATE_DT.Outputs[Derived Column Output].Columns[SCHEDULED]"
                          name="SCHEDULED"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,10,1252)#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[scheduled]} == "true" ? "Scheduled" : "Walk-in"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,10,1252)scheduled == "true" ? "Scheduled" : "Walk-in"</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\DC-UPDATE_DT.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\DC-UPDATE_DT.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\DC-UPDATE_DT.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\DC-UPDATE_DT.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\DC-UPDATE_DT.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\DC-UPDATE_DT.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Lookup"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select integration_id, Hash_DW from 
[etl].[starfish_appointments]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select integration_id, Hash_DW from 
[etl].[starfish_appointments]) [refTable]
where [refTable].[integration_id] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="integration_id" dataType="DT_WSTR" length="62" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Hash_DW" dataType="DT_WSTR" length="62" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[INTEGRATION_ID_str]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Lookup.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.IDR]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.IDR]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Lookup.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Lookup.Inputs[Lookup Input].Columns[INTEGRATION_ID_str]"
                          cachedDataType="wstr"
                          cachedLength="62"
                          cachedName="INTEGRATION_ID_str"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[INTEGRATION_ID_str]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">integration_id</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Lookup.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Lookup.Outputs[Lookup Match Output].Columns[Hash_DW_dest]"
                          dataType="wstr"
                          errorOrTruncationOperation="Copy Column"
                          length="62"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Lookup.Outputs[Lookup Match Output].Columns[Hash_DW_dest]"
                          name="Hash_DW_dest"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">Hash_DW</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Lookup.Outputs[Lookup Match Output].Columns[LK_integration_id]"
                          dataType="wstr"
                          errorOrTruncationOperation="Copy Column"
                          length="62"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Lookup.Outputs[Lookup Match Output].Columns[LK_integration_id]"
                          name="LK_integration_id"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">integration_id</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Lookup.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Lookup.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="OLE DB Most recent  Source Stage"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT 
      [INTEGRATION_ID]
      ,[appointment_ext_id]
      ,[calendar_owner_integration_id]
      ,[calendar_owner_userid]
      ,[calendar_owner_first_name]
      ,[calendar_owner_last_name]
      ,[calendar_owner_institutional_email]
      ,[participant_integration_id]
      ,[participant_userid]
      ,[participant_first_name]
      ,[participant_last_name]
      ,[participant_institutional_email]
      ,[participant_alternate_email]
      ,[appointment_type_reason]
      ,[appointment_start_date]
      ,[appointment_end_date]
      ,[appointment_location]
      ,[appointment_description]
      ,[appointment_comment]
      ,[canceled_date]
      ,[course_section_id]
      ,[no_show]
      ,[appointment_type]
      ,[arrival_time]
      ,[wait_time]
      ,[actual_start_date]
      ,[actual_end_date]
      ,[actual_duration]
      ,[scheduled_duration]
      ,[scheduled]
      ,[waiting_room_status]
      ,[activities]
      ,[INSERT_DT]
      ,[UPDATE_DT]
      ,[ETL_SOURCE]
      ,[FileImported]
      ,[FileCreated_On]
      ,[FileSize]
      ,[Hash_DW]
  FROM [idr].[sf_appointments] stg

JOIN 
( SELECT rowid, row_number() over (partition by integration_id order by FileCreated_On DESC) rownum  
FROM whse_stage.[idr].[sf_appointments]) most_recent ON stg.rowid = most_recent.rowid AND most_recent.rownum = 1</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[DW-SQL.Stage]"
                      connectionManagerRefId="Package.ConnectionManagers[DW-SQL.Stage]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[INTEGRATION_ID]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[INTEGRATION_ID]"
                          length="62"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[INTEGRATION_ID]"
                          name="INTEGRATION_ID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[appointment_ext_id]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[appointment_ext_id]"
                          length="50"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[appointment_ext_id]"
                          name="appointment_ext_id"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[calendar_owner_integration_id]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[calendar_owner_integration_id]"
                          length="65"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[calendar_owner_integration_id]"
                          name="calendar_owner_integration_id"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[calendar_owner_userid]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[calendar_owner_userid]"
                          length="50"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[calendar_owner_userid]"
                          name="calendar_owner_userid"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[calendar_owner_first_name]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[calendar_owner_first_name]"
                          length="50"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[calendar_owner_first_name]"
                          name="calendar_owner_first_name"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[calendar_owner_last_name]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[calendar_owner_last_name]"
                          length="50"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[calendar_owner_last_name]"
                          name="calendar_owner_last_name"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[calendar_owner_institutional_email]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[calendar_owner_institutional_email]"
                          length="150"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[calendar_owner_institutional_email]"
                          name="calendar_owner_institutional_email"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[participant_integration_id]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[participant_integration_id]"
                          length="50"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[participant_integration_id]"
                          name="participant_integration_id"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[participant_userid]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[participant_userid]"
                          length="50"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[participant_userid]"
                          name="participant_userid"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[participant_first_name]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[participant_first_name]"
                          length="50"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[participant_first_name]"
                          name="participant_first_name"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[participant_last_name]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[participant_last_name]"
                          length="50"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[participant_last_name]"
                          name="participant_last_name"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[participant_institutional_email]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[participant_institutional_email]"
                          length="150"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[participant_institutional_email]"
                          name="participant_institutional_email"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[participant_alternate_email]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[participant_alternate_email]"
                          length="150"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[participant_alternate_email]"
                          name="participant_alternate_email"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[appointment_type_reason]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[appointment_type_reason]"
                          length="4000"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[appointment_type_reason]"
                          name="appointment_type_reason"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[appointment_start_date]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[appointment_start_date]"
                          length="24"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[appointment_start_date]"
                          name="appointment_start_date"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[appointment_end_date]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[appointment_end_date]"
                          length="24"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[appointment_end_date]"
                          name="appointment_end_date"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[appointment_location]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[appointment_location]"
                          length="100"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[appointment_location]"
                          name="appointment_location"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[appointment_description]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[appointment_description]"
                          length="8000"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[appointment_description]"
                          name="appointment_description"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[appointment_comment]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[appointment_comment]"
                          length="4000"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[appointment_comment]"
                          name="appointment_comment"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[canceled_date]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[canceled_date]"
                          length="24"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[canceled_date]"
                          name="canceled_date"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[course_section_id]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[course_section_id]"
                          length="50"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[course_section_id]"
                          name="course_section_id"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[no_show]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[no_show]"
                          length="10"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[no_show]"
                          name="no_show"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[appointment_type]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[appointment_type]"
                          length="500"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[appointment_type]"
                          name="appointment_type"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[arrival_time]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[arrival_time]"
                          length="50"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[arrival_time]"
                          name="arrival_time"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[wait_time]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[wait_time]"
                          length="24"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[wait_time]"
                          name="wait_time"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[actual_start_date]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[actual_start_date]"
                          length="24"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[actual_start_date]"
                          name="actual_start_date"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[actual_end_date]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[actual_end_date]"
                          length="24"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[actual_end_date]"
                          name="actual_end_date"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[actual_duration]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[actual_duration]"
                          length="24"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[actual_duration]"
                          name="actual_duration"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[scheduled_duration]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[scheduled_duration]"
                          length="24"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[scheduled_duration]"
                          name="scheduled_duration"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[scheduled]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[scheduled]"
                          length="10"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[scheduled]"
                          name="scheduled"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[waiting_room_status]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[waiting_room_status]"
                          length="100"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[waiting_room_status]"
                          name="waiting_room_status"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[activities]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[activities]"
                          length="4000"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[activities]"
                          name="activities"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[INSERT_DT]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[INSERT_DT]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[INSERT_DT]"
                          name="INSERT_DT"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[UPDATE_DT]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[UPDATE_DT]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[UPDATE_DT]"
                          name="UPDATE_DT"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[ETL_SOURCE]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[ETL_SOURCE]"
                          length="15"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[ETL_SOURCE]"
                          name="ETL_SOURCE"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[FileImported]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[FileImported]"
                          length="100"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[FileImported]"
                          name="FileImported"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[FileCreated_On]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[FileCreated_On]"
                          length="25"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[FileCreated_On]"
                          name="FileCreated_On"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[FileSize]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[FileSize]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[FileSize]"
                          name="FileSize"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[Hash_DW]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[Hash_DW]"
                          length="62"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[Hash_DW]"
                          name="Hash_DW"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[INTEGRATION_ID]"
                          codePage="1252"
                          dataType="str"
                          length="62"
                          name="INTEGRATION_ID" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[appointment_ext_id]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="appointment_ext_id" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[calendar_owner_integration_id]"
                          codePage="1252"
                          dataType="str"
                          length="65"
                          name="calendar_owner_integration_id" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[calendar_owner_userid]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="calendar_owner_userid" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[calendar_owner_first_name]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="calendar_owner_first_name" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[calendar_owner_last_name]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="calendar_owner_last_name" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[calendar_owner_institutional_email]"
                          codePage="1252"
                          dataType="str"
                          length="150"
                          name="calendar_owner_institutional_email" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[participant_integration_id]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="participant_integration_id" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[participant_userid]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="participant_userid" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[participant_first_name]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="participant_first_name" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[participant_last_name]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="participant_last_name" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[participant_institutional_email]"
                          codePage="1252"
                          dataType="str"
                          length="150"
                          name="participant_institutional_email" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[participant_alternate_email]"
                          codePage="1252"
                          dataType="str"
                          length="150"
                          name="participant_alternate_email" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[appointment_type_reason]"
                          codePage="1252"
                          dataType="str"
                          length="4000"
                          name="appointment_type_reason" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[appointment_start_date]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          name="appointment_start_date" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[appointment_end_date]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          name="appointment_end_date" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[appointment_location]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="appointment_location" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[appointment_description]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          name="appointment_description" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[appointment_comment]"
                          codePage="1252"
                          dataType="str"
                          length="4000"
                          name="appointment_comment" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[canceled_date]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          name="canceled_date" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[course_section_id]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="course_section_id" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[no_show]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          name="no_show" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[appointment_type]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="appointment_type" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[arrival_time]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="arrival_time" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[wait_time]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          name="wait_time" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[actual_start_date]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          name="actual_start_date" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[actual_end_date]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          name="actual_end_date" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[actual_duration]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          name="actual_duration" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[scheduled_duration]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          name="scheduled_duration" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[scheduled]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          name="scheduled" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[waiting_room_status]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="waiting_room_status" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[activities]"
                          codePage="1252"
                          dataType="str"
                          length="4000"
                          name="activities" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[INSERT_DT]"
                          dataType="dbTimeStamp"
                          name="INSERT_DT" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[UPDATE_DT]"
                          dataType="dbTimeStamp"
                          name="UPDATE_DT" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[ETL_SOURCE]"
                          codePage="1252"
                          dataType="str"
                          length="15"
                          name="ETL_SOURCE" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[FileImported]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="FileImported" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[FileCreated_On]"
                          codePage="1252"
                          dataType="str"
                          length="25"
                          name="FileCreated_On" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[FileSize]"
                          dataType="i4"
                          name="FileSize" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].ExternalColumns[Hash_DW]"
                          codePage="1252"
                          dataType="str"
                          length="62"
                          name="Hash_DW" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[INTEGRATION_ID]"
                          codePage="1252"
                          dataType="str"
                          length="62"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[INTEGRATION_ID]"
                          name="INTEGRATION_ID" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[appointment_ext_id]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[appointment_ext_id]"
                          name="appointment_ext_id" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[calendar_owner_integration_id]"
                          codePage="1252"
                          dataType="str"
                          length="65"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[calendar_owner_integration_id]"
                          name="calendar_owner_integration_id" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[calendar_owner_userid]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[calendar_owner_userid]"
                          name="calendar_owner_userid" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[calendar_owner_first_name]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[calendar_owner_first_name]"
                          name="calendar_owner_first_name" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[calendar_owner_last_name]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[calendar_owner_last_name]"
                          name="calendar_owner_last_name" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[calendar_owner_institutional_email]"
                          codePage="1252"
                          dataType="str"
                          length="150"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[calendar_owner_institutional_email]"
                          name="calendar_owner_institutional_email" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[participant_integration_id]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[participant_integration_id]"
                          name="participant_integration_id" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[participant_userid]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[participant_userid]"
                          name="participant_userid" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[participant_first_name]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[participant_first_name]"
                          name="participant_first_name" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[participant_last_name]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[participant_last_name]"
                          name="participant_last_name" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[participant_institutional_email]"
                          codePage="1252"
                          dataType="str"
                          length="150"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[participant_institutional_email]"
                          name="participant_institutional_email" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[participant_alternate_email]"
                          codePage="1252"
                          dataType="str"
                          length="150"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[participant_alternate_email]"
                          name="participant_alternate_email" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[appointment_type_reason]"
                          codePage="1252"
                          dataType="str"
                          length="4000"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[appointment_type_reason]"
                          name="appointment_type_reason" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[appointment_start_date]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[appointment_start_date]"
                          name="appointment_start_date" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[appointment_end_date]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[appointment_end_date]"
                          name="appointment_end_date" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[appointment_location]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[appointment_location]"
                          name="appointment_location" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[appointment_description]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[appointment_description]"
                          name="appointment_description" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[appointment_comment]"
                          codePage="1252"
                          dataType="str"
                          length="4000"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[appointment_comment]"
                          name="appointment_comment" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[canceled_date]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[canceled_date]"
                          name="canceled_date" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[course_section_id]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[course_section_id]"
                          name="course_section_id" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[no_show]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[no_show]"
                          name="no_show" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[appointment_type]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[appointment_type]"
                          name="appointment_type" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[arrival_time]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[arrival_time]"
                          name="arrival_time" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[wait_time]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[wait_time]"
                          name="wait_time" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[actual_start_date]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[actual_start_date]"
                          name="actual_start_date" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[actual_end_date]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[actual_end_date]"
                          name="actual_end_date" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[actual_duration]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[actual_duration]"
                          name="actual_duration" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[scheduled_duration]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[scheduled_duration]"
                          name="scheduled_duration" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[scheduled]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[scheduled]"
                          name="scheduled" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[waiting_room_status]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[waiting_room_status]"
                          name="waiting_room_status" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[activities]"
                          codePage="1252"
                          dataType="str"
                          length="4000"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[activities]"
                          name="activities" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[INSERT_DT]"
                          dataType="dbTimeStamp"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[INSERT_DT]"
                          name="INSERT_DT" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[UPDATE_DT]"
                          dataType="dbTimeStamp"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[UPDATE_DT]"
                          name="UPDATE_DT" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[ETL_SOURCE]"
                          codePage="1252"
                          dataType="str"
                          length="15"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[ETL_SOURCE]"
                          name="ETL_SOURCE" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[FileImported]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[FileImported]"
                          name="FileImported" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[FileCreated_On]"
                          codePage="1252"
                          dataType="str"
                          length="25"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[FileCreated_On]"
                          name="FileCreated_On" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[FileSize]"
                          dataType="i4"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[FileSize]"
                          name="FileSize" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[Hash_DW]"
                          codePage="1252"
                          dataType="str"
                          length="62"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[Hash_DW]"
                          name="Hash_DW" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Rows Matched"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Rows Matched">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::RowCount_Match</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Rows Matched.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Rows Matched.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Rows Matched.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Rows Updated"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Rows Updated">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::RowsUpdated</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Rows Updated.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Rows Updated.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Rows Updated.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Script Component Split"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component Split"
                  version="13">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_d4671919edda4645b0f59b4b69bd71c8.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{BEAAA862-713B-43D4-A773-9C1C1D9747EA}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_d4671919edda4645b0f59b4b69bd71c8</RootNamespace>
    <AssemblyName>SC_d4671919edda4645b0f59b4b69bd71c8</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {

        #region COURSE SECTION 
        if (!Row.coursesectionid_IsNull)
        {
            /////21911UGRD17491
            string str = Row.coursesectionid.TrimEnd();
            if (str.Length == 14)
            {
                Row.CLASSTERMCODE = str.Substring(0, 4);
                Row.CLASSSESSIONCODE = str.Substring(4, 1);
                Row.CRSECARCODE = str.Substring(5, 4);
                Row.CLASSNBR = str.Substring(9, 5);
            }
            //21981UGRD4398
            else if (str.Length == 13)
            {
                Row.CLASSTERMCODE = str.Substring(0, 4);
                Row.CLASSSESSIONCODE = str.Substring(4, 1);
                Row.CRSECARCODE = str.Substring(5, 4);
                Row.CLASSNBR = str.Substring(9, 4);
            }
            // 21956W2UGRD7485
            else if (str.Length == 15)
            {
                Row.CLASSTERMCODE = str.Substring(0, 4);
                Row.CLASSSESSIONCODE = str.Substring(4, 3);
                Row.CRSECARCODE = str.Substring(7, 4);
                Row.CLASSNBR = str.Substring(11, 4);
            }

            else if (str.Length == 16)
            {
                Row.CLASSTERMCODE = str.Substring(0, 4);
                Row.CLASSSESSIONCODE = str.Substring(4, 3);
                Row.CRSECARCODE = str.Substring(7, 4);
                Row.CLASSNBR = str.Substring(11, 5);
            }
            #endregion
        }


    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String coursesectionid
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
        set
        {
            this[0] = value;
        }
    }
    public bool coursesectionid_IsNull
    {
        get
        {
            return IsNull(0);
        }
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CLASSTERMCODE
    {
        set
        {
            this[1] = value;
        }
    }
    public bool CLASSTERMCODE_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CLASSSESSIONCODE
    {
        set
        {
            this[2] = value;
        }
    }
    public bool CLASSSESSIONCODE_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CRSECARCODE
    {
        set
        {
            this[3] = value;
        }
    }
    public bool CRSECARCODE_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CLASSNBR
    {
        set
        {
            this[4] = value;
        }
    }
    public bool CLASSNBR_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d4671919edda4645b0f59b4b69bd71c8.Properties.Settings.get_Default():SC_d4671919edda4645b0f59b4b69bd71c8.Properties.Sett" +
    "ings")]

namespace SC_d4671919edda4645b0f59b4b69bd71c8.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 Connection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_d4671919edda4645b0f59b4b69bd71c8</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_d4671919edda4645b0f59b4b69bd71c8</msb:DisplayName>
    <msb:ProjectId>{EFA973D9-321C-4EEF-A68D-A8C536B6595D}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_d4671919edda4645b0f59b4b69bd71c8.csproj" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_d4671919edda4645b0f59b4b69bd71c8")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_d4671919edda4645b0f59b4b69bd71c8")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d4671919edda4645b0f59b4b69bd71c8.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d4671919edda4645b0f59b4b69bd71c8.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d4671919edda4645b0f59b4b69bd71c8.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_d4671919edda4645b0f59b4b69bd71c8.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_d4671919edda4645b0f59b4b69bd71c8.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_d4671919edda4645b0f59b4b69bd71c8.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAEWdj2cAAAAAAAAAAOAAIiALATAAABgAAAAIAAAAAAAArjcA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFw3AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAtBcAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACQ
NwAAAAAAAEgAAAACAAUAeCMAACwTAAABAAAAAAAAAKQ2AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAQALAEAAAEAABEDbwgAAAY6
IAEAAANvBgAABigBAAArbxMAAAoKBm8UAAAKHw4zOgMGFhpvFQAACm8KAAAGAwYaF28VAAAKbwwA
AAYDBhsabxUAAApvDgAABgMGHwkbbxUAAApvEAAABioGbxQAAAofDTM6AwYWGm8VAAAKbwoAAAYD
BhoXbxUAAApvDAAABgMGGxpvFQAACm8OAAAGAwYfCRpvFQAACm8QAAAGKgZvFAAACh8PMzoDBhYa
bxUAAApvCgAABgMGGhlvFQAACm8MAAAGAwYdGm8VAAAKbw4AAAYDBh8LGm8VAAAKbxAAAAYqBm8U
AAAKHxAzOQMGFhpvFQAACm8KAAAGAwYaGW8VAAAKbwwAAAYDBh0abxUAAApvDgAABgMGHwsbbxUA
AApvEAAABioeAigUAAAGKioCAwQFKBYAAAoqUgJ7FwAACgJ7GAAAChaUbxkAAAoqJgIWAygaAAAK
KiICFigbAAAKKloDLAgCFigcAAAKKnIBAABwcx0AAAp6JgIXAygaAAAKKloDLAgCFygcAAAKKnIB
AABwcx0AAAp6JgIYAygaAAAKKloDLAgCGCgcAAAKKnIBAABwcx0AAAp6JgIZAygaAAAKKloDLAgC
GSgcAAAKKnIBAABwcx0AAAp6JgIaAygaAAAKKloDLAgCGigcAAAKKnIBAABwcx0AAAp6HgIoHgAA
CioeAigfAAAKKn4CKCAAAAoCAnMYAAAGfQEAAAQCAnMaAAAGfQIAAAQqkgRyngAAcBpvIQAACiwV
AgUCAygiAAAKDgRzBQAABm8WAAAGKkorBwIDbxcAAAYDbxIAAAYt8SoGKjoCKCMAAAoCA30DAAAE
KoICewMAAARvJAAACm8lAAAKcq4AAHBvJgAACm8nAAAKKjoCKCMAAAoCA30EAAAEKh4CKCMAAAoq
rn4FAAAELR5yxAAAcNAHAAACKCgAAApvKQAACnMqAAAKgAUAAAR+BQAABCoafgYAAAQqHgKABgAA
BCoafgcAAAQqHgIoKwAACioucyAAAAaABwAABCoAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMx
OQAAAAAFAGwAAAD8BgAAI34AAGgHAACcCAAAI1N0cmluZ3MAAAAABBAAADgBAAAjVVMAPBEAABAA
AAAjR1VJRAAAAEwRAADgAQAAI0Jsb2IAAAAAAAAAAgAAAVcVogEJCQAAAPoBMwAWAAABAAAAJAAA
AAgAAAAHAAAAIQAAABcAAAArAAAAEAAAAAEAAAAEAAAADgAAABEAAAABAAAABgAAAAEAAAABAAAA
AAAVBAEAAAAAAAYA9wLHBgYAiwPHBgYAQwK0Bg8AOwcAAAYAcAIsBQYA2gIsBQYAuwIsBQYAcgMs
BQYAFwMsBQYAMAMsBQYAhwIsBQYAogLGAwoASwOQAQoAHwaQAQ4AEAaQAQoApAWQAQoAAQiQAQYA
xAfkBBIAVgBWBgYAJgK0BgYAMAbnBgYAmAUXBRYA9gH/AxYAVwL/AxYA3gECBQYACwLHBgYAggjk
BAYA4wPkBAYAbQXkBAYAhwXkBBoAAQB+BhoAGgB+BhoAPQB+BgYAsQHkBAYARwHkBAYAjAgsBQAA
AACTAAAAAAABAAEAAQAQAPcEAAAQAAEAAQABABAAAwYAADkAAQAFAAEAEADjBwAARQABABQAAQAQ
ALgHAABJAAMAGAABABAAeQcAAEkABAAaAAAAEADuBkoHSQAFABsAAAEQAKgHSgdlAAcAHwAGALgH
rQAGAHkHsQABAPEHtQABAPEHtQARAOsEuQARAM4BvQARADcBwQBQIAAAAADGAKkDBgABAFggAAAA
AMYAtAMGAAEAYCAAAAAAxgBjCMUAAQCYIQAAAACGGKcGBgACAKAhAAAAAIYYpwY6AAIAqyEAAAAA
hggHAcsABQDAIQAAAACGCBsBEAAFAMohAAAAAIYInQRcAAYA0yEAAAAAhgi4BM8ABgDqIQAAAACG
CKQAEAAHAPQhAAAAAIYIPQTPAAgACyIAAAAAhgi2ABAACQAVIgAAAACGCFYEzwAKACwiAAAAAIYI
ywAQAAsANiIAAAAAhghyBM8ADABNIgAAAACGCNsAEAANAFciAAAAAIYIiQTPAA4AbiIAAAAAhgB6
CFwADwB2IgAAAACGAMsHXAAPAH4iAAAAAIYYpwYGAA8AniIAAAAAxgBWCNQADwDDIgAAAADGAU8I
xQATANYiAAAAAMYBYwjFABQA2CIAAAAAhhinBt4AFQDnIgAAAACGCF4FfwAWAAgjAAAAAIYYpwbe
ABYAFyMAAAAAgxinBgYAFwAfIwAAAACTCCwG5AAXAEsjAAAAAJMItgHpABcAUiMAAAAAkwjCAe4A
FwBaIwAAAACWCNcH9AAYAGEjAAAAAIYYpwYGABgAaSMAAAAAkRitBvkAGAAAAAEAfggAAAEAJQYA
AAIAgwcAAAMAsgUAAAEAwAMAAAEAwAMAAAEAwAMAAAEAwAMAAAEAwAMAAAEAwAMAAAEAwAMAAAEA
wAMAAAEAwAMAAAEAwAMAAAEAnAAAAAIAawEAAAMAJQYAAAQAsgUAAAEAJQYAAAEAfggAAAEABwgA
AAEABwgAAAEAwAMJAKcGAQARAKcGBgAZAKcGCgApAKcGEAAxAKcGEAA5AKcGEABBAKcGEABJAKcG
EABRAKcGEABZAKcGEABhAKcGEABpAKcGBgChAKcGBgDBAKcGFQDRAKcGBgCJAKkDBgCJALQDBgDZ
AJUIHwDhAC8BKgDhAPQDMADhAOoDNABxAKcGOgBxACUGRABxAIMHSAB5AOADTABxANsEUQBxAMwE
VwBxANMEAQDpAKcGEABxAHoIXABxAMsHXACJAKcGBgDhALEHYACJAJcHZwCRAKcGBgCJAOgAbQD5
AD4FcgABAXUBeAAJAUAGfwARAVkBhAARAYgIjQCpAKcGkwDJAKcGBgAuAAsAGQEuABMAIgEuABsA
QQEuACMASgEuACsAcwEuADMAcwEuADsAcwEuAEMASgEuAEsAeQEuAFMAcwEuAFsAkAFDAGMA2gHh
AHsA2gHjAGsA2gGJAXMAQQGpAXMAQQEbAAMAAQAFAAsABwAMAAgADgAAAB8B/QAAALwEAQEAAKgA
/QAAAEEEAQEAALoA/QAAAFoEAQEAAM8A/QAAAHYEAQEAAN8A/QAAAI0EAQEAAGIFBQEAADAGCgEA
ANYBDwEAANsHFAECAAYAAwABAAcAAwACAAgABQABAAkABQABAAoABwABAAsACQABAAwACwABAA0A
DQABAA4ADwABAA8AEQABABAAEwABABEAFQACABkAFwACABwAGQACAB0AGwABAB4AGwACAB8AHQAE
gAAAAQAAAAAAAAAAAAAAAABvAAAABAAAAAAAAAAAAAAAmwD+AAAAAAAQAAAAAAAAAAAAAACkABEI
AAAAABAAAAAAAAAAAAAAAKQALggAAAAAEAAAAAAAAAAAAAAApAC8BQAAAAAEAAAAAAAAAAAAAACb
AOQEAAAAABAAAAAAAAAAAAAAAKQA3wUAAAAAAAAAAAEAAAD4BgAAJQAmAAAAAAAASURUU0NvbXBv
bmVudE1ldGFEYXRhMTAwAElEVFNSdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rpb24xMDAASURUU1J1
bnRpbWVDb25uZWN0aW9uMTAwAElEVFNDb25uZWN0aW9uTWFuYWdlcjEwMABTQ19kNDY3MTkxOWVk
ZGE0NjQ1YjBmNTliNGI2OWJkNzFjOAA8TW9kdWxlPgBJbnB1dElEAHNldF9DTEFTU1RFUk1DT0RF
AHNldF9DTEFTU1NFU1NJT05DT0RFAHNldF9DUlNFQ0FSQ09ERQBzZXRfQ0xBU1NOQlIAZ2V0X0Nv
bXBvbmVudE1ldGFEYXRhAG1zY29ybGliAGdldF9jb3Vyc2VzZWN0aW9uaWQAc2V0X2NvdXJzZXNl
Y3Rpb25pZABUcmltRW5kAGRlZmF1bHRJbnN0YW5jZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBl
RnJvbUhhbmRsZQBJbnB1dE5hbWUAR2V0UnVudGltZUNvbm5lY3Rpb25CeU5hbWUATWljcm9zb2Z0
LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNv
dXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUA
Q29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBE
ZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxl
QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJp
YnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0
dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0
dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50
cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGli
aWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQB2YWx1ZQBTeXN0ZW0uUnVudGlt
ZS5WZXJzaW9uaW5nAEdldFN0cmluZwBTdWJzdHJpbmcAZ2V0X0xlbmd0aABTeXN0ZW0uQ29tcG9u
ZW50TW9kZWwAU0NfZDQ2NzE5MTllZGRhNDY0NWIwZjU5YjRiNjliZDcxYzguZGxsAHNldF9DTEFT
U1RFUk1DT0RFX0lzTnVsbABzZXRfQ0xBU1NTRVNTSU9OQ09ERV9Jc051bGwAc2V0X0NSU0VDQVJD
T0RFX0lzTnVsbABzZXRfQ0xBU1NOQlJfSXNOdWxsAGdldF9jb3Vyc2VzZWN0aW9uaWRfSXNOdWxs
AHNldF9jb3Vyc2VzZWN0aW9uaWRfSXNOdWxsAFNldE51bGwAc2V0X0l0ZW0AU3lzdGVtAHJlc291
cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRp
b24AU3lzdGVtLlJlZmxlY3Rpb24AZ2V0X1J1bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlvbgBnZXRf
Q29ubmVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3Vs
dHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNS
dW50aW1lV3JhcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5lV3JhcABJbnB1dDBCdWZm
ZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0Nv
bm5lY3Rpb25NYW5hZ2VyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgBN
aWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZS5XcmFwcGVyAC5jdG9yAC5jY3RvcgBTeXN0
ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVz
b3VyY2VzAFNDX2Q0NjcxOTE5ZWRkYTQ2NDViMGY1OWI0YjY5YmQ3MWM4LlByb3BlcnRpZXMuUmVz
b3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ19kNDY3MTkxOWVkZGE0NjQ1YjBmNTli
NGI2OWJkNzFjOC5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENv
bHVtbkluZGV4ZXMAU2V0dGluZ3MARXF1YWxzAENvbm5lY3Rpb25zAE9iamVjdABFbmRPZlJvd3Nl
dABnZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25l
bnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVs
aW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cATmV4dFJv
dwBBcnJheQBnZXRfQXNzZW1ibHkARW1wdHkAAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIA
dAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBz
AHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkA
bgBzAHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAABVDAG8AbgBuAGUAYwB0AGkAbwBuAABxUwBD
AF8AZAA0ADYANwAxADkAMQA5AGUAZABkAGEANAA2ADQANQBiADAAZgA1ADkAYgA0AGIANgA5AGIA
ZAA3ADEAYwA4AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAANyi
0XgklWpHuELknCCfy/gABCABAQgDIAABBSABARERBCABAQ4FIAEBEV0DBwEOBhABAB0eAAMKAQMF
IAEOHQMDIAAIBSACDggICSADARI9HQgSQQMGEj0DBh0IBCABDggFIAIBCBwEIAECCAMgAAIGIAIC
DhF5BSABHQgIBCAAEn0FIAASgIEGIAESgIUOBCAAEk0IAAESgIkRgI0FIAASgJEHIAIBDhKAkQi3
elxWGTTgiQiJhF3NgIDMkQMGEhQDBhIYAwYSRQMGElUDBhJZAwYSIAUgAQESDAMgAA4EIAEBAgkg
BAEIDhI9EkEFIAEBEkUEAAASVQQAABJZBQABARJZBAAAEiADAAABAygADgMoAAIEKAASTQQIABJV
BAgAElkECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAA
AAAoAQAjU0NfZDQ2NzE5MTllZGRhNDY0NWIwZjU5YjRiNjliZDcxYzgAAAUBAAAAABYBABFDb3B5
cmlnaHQgQCAgMjAyNAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdv
cmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAAAAC0AAAAzsrvvgEAAACRAAAAbFN5
c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAs
IEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0u
UmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAhDcAAAAA
AAAAAAAAnjcAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJA3AAAAAAAAAAAAAAAAX0NvckRsbE1h
aW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBDAF8AZAA0ADYANwAxADkAMQA5AGUAZABkAGEANAA2ADQANQBiADAAZgA1ADkAYgA0AGIANgA5
AGIAZAA3ADEAYwA4AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAA
LgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBkADQANgA3ADEAOQAx
ADkAZQBkAGQAYQA0ADYANAA1AGIAMABmADUAOQBiADQAYgA2ADkAYgBkADcAMQBjADgALgBkAGwA
bAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0
ACAAQAAgACAAMgAwADIANAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAA
AAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfAGQANAA2
ADcAMQA5ADEAOQBlAGQAZABhADQANgA0ADUAYgAwAGYANQA5AGIANABiADYAOQBiAGQANwAxAGMA
OAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwBkADQANgA3
ADEAOQAxADkAZQBkAGQAYQA0ADYANAA1AGIAMABmADUAOQBiADQAYgA2ADkAYgBkADcAMQBjADgA
AAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAI
AAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAALA3AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_d4671919edda4645b0f59b4b69bd71c8</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">F4</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Script Component Split.Connections[Connection]"
                      connectionManagerID="Package.ConnectionManagers[DW-SQL.Stage]"
                      connectionManagerRefId="Package.ConnectionManagers[DW-SQL.Stage]"
                      name="Connection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Script Component Split.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Script Component Split.Inputs[Input 0].Columns[course_section_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="course_section_id"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[course_section_id]"
                          usageType="readWrite" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Script Component Split.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Script Component Split.Inputs[Input 0]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Script Component Split.Outputs[Output 0].Columns[CLASSTERMCODE]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Script Component Split.Outputs[Output 0].Columns[CLASSTERMCODE]"
                          name="CLASSTERMCODE" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Script Component Split.Outputs[Output 0].Columns[CLASSSESSIONCODE]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Script Component Split.Outputs[Output 0].Columns[CLASSSESSIONCODE]"
                          name="CLASSSESSIONCODE" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Script Component Split.Outputs[Output 0].Columns[CRSECARCODE]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Script Component Split.Outputs[Output 0].Columns[CRSECARCODE]"
                          name="CRSECARCODE" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Script Component Split.Outputs[Output 0].Columns[CLASSNBR]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Script Component Split.Outputs[Output 0].Columns[CLASSNBR]"
                          name="CLASSNBR" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="SQL Insert starfish-appointments"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[etl].[starfish_appointments]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.IDR]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.IDR]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[INTEGRATION_ID_str]"
                          cachedDataType="wstr"
                          cachedLength="62"
                          cachedName="INTEGRATION_ID_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[INTEGRATION_ID]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[INTEGRATION_ID_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[appointment_ext_id_str]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="appointment_ext_id_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[appointment_ext_id]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[appointment_ext_id_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[calendar_owner_integration_id_int]"
                          cachedDataType="i4"
                          cachedName="calendar_owner_integration_id_int"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[calendar_owner_integration_id]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[calendar_owner_integration_id_int]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[calendar_owner_userid_str]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="calendar_owner_userid_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[calendar_owner_userid]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[calendar_owner_userid_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[calendar_owner_first_name_str]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="calendar_owner_first_name_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[calendar_owner_first_name]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[calendar_owner_first_name_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[calendar_owner_last_name_str]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="calendar_owner_last_name_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[calendar_owner_last_name]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[calendar_owner_last_name_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[calendar_owner_institutional_email_str]"
                          cachedDataType="wstr"
                          cachedLength="150"
                          cachedName="calendar_owner_institutional_email_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[calendar_owner_institutional_email]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[calendar_owner_institutional_email_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[participant_integration_id_str]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="participant_integration_id_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[participant_integration_id]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[participant_integration_id_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[participant_userid_str]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="participant_userid_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[participant_userid]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[participant_userid_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[participant_first_name_str]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="participant_first_name_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[participant_first_name]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[participant_first_name_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[participant_last_name_str]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="participant_last_name_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[participant_last_name]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[participant_last_name_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[participant_institutional_email_str]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="participant_institutional_email_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[participant_institutional_email]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[participant_institutional_email_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[participant_alternate_email_str]"
                          cachedDataType="wstr"
                          cachedLength="150"
                          cachedName="participant_alternate_email_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[participant_alternate_email]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[participant_alternate_email_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[appointment_type_reason_str]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="appointment_type_reason_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[appointment_type_reason]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[appointment_type_reason_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[appointment_start_date_DT]"
                          cachedDataType="dbTimeStamp"
                          cachedName="appointment_start_date_DT"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[appointment_start_date]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[appointment_start_date_DT]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[appointment_end_date_DT]"
                          cachedDataType="dbTimeStamp"
                          cachedName="appointment_end_date_DT"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[appointment_end_date]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[appointment_end_date_DT]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[appointment_location_str]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="appointment_location_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[appointment_location]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[appointment_location_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[appointment_description_str]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="appointment_description_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[appointment_description]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[appointment_description_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[appointment_comment_str]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="appointment_comment_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[appointment_comment]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[appointment_comment_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[canceled_date_DT]"
                          cachedDataType="dbTimeStamp"
                          cachedName="canceled_date_DT"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[canceled_date]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[canceled_date_DT]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[course_section_id_str]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="course_section_id_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[course_section_id]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[course_section_id_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[no_show_str]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="no_show_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[no_show]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[no_show_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[appointment_type_str]"
                          cachedDataType="wstr"
                          cachedLength="500"
                          cachedName="appointment_type_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[appointment_type]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[appointment_type_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[arrival_time_dt]"
                          cachedDataType="dbTimeStamp"
                          cachedName="arrival_time_dt"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[arrival_time]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[arrival_time_dt]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[wait_time_int]"
                          cachedDataType="i4"
                          cachedName="wait_time_int"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[wait_time]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[wait_time_int]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[actual_start_date_dt]"
                          cachedDataType="dbTimeStamp"
                          cachedName="actual_start_date_dt"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[actual_start_date]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[actual_start_date_dt]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[actual_end_date_dt]"
                          cachedDataType="dbTimeStamp"
                          cachedName="actual_end_date_dt"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[actual_end_date]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[actual_end_date_dt]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[actual_duration_int]"
                          cachedDataType="i4"
                          cachedName="actual_duration_int"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[actual_duration]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[actual_duration_int]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[scheduled_duration_int]"
                          cachedDataType="i4"
                          cachedName="scheduled_duration_int"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[scheduled_duration]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[scheduled_duration_int]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[waiting_room_status_str]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="waiting_room_status_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[waiting_room_status]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[waiting_room_status_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[activities_str]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="activities_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[activities]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[activities_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[INSERT_DT]"
                          cachedDataType="dbTimeStamp"
                          cachedName="INSERT_DT"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[INSERT_DT]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output].Columns[INSERT_DT]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[UPDATE_DT]"
                          cachedDataType="dbTimeStamp"
                          cachedName="UPDATE_DT"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[UPDATE_DT]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\DC-UPDATE_DT.Outputs[Derived Column Output].Columns[UPDATE_DT]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[ETL_SOURCE_str]"
                          cachedDataType="wstr"
                          cachedLength="15"
                          cachedName="ETL_SOURCE_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[ETL_SOURCE]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[ETL_SOURCE_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[Hash_DW_str]"
                          cachedDataType="wstr"
                          cachedLength="62"
                          cachedName="Hash_DW_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[Hash_DW]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[Hash_DW_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[FileImported_str]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="FileImported_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[FileImported]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[FileImported_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[FileSize_int]"
                          cachedDataType="i4"
                          cachedName="FileSize_int"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[FileSize]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[FileSize_int]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[FileCreated_On_str]"
                          cachedDataType="wstr"
                          cachedLength="25"
                          cachedName="FileCreated_On_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[FileCreated_On]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[FileCreated_On_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[CLASS_TERM_CODE]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="CLASS_TERM_CODE"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[class_term_code]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[CLASS_TERM_CODE]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[CLASS_SESSION_CODE]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="CLASS_SESSION_CODE"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[class_session_code]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[CLASS_SESSION_CODE]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[CRSE_CAR_CODE]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="CRSE_CAR_CODE"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[crse_car_code]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[CRSE_CAR_CODE]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[CLASS_NBR]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="CLASS_NBR"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[class_nbr]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[CLASS_NBR]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].Columns[SCHEDULED]"
                          cachedDataType="wstr"
                          cachedLength="9"
                          cachedName="SCHEDULED"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[scheduled]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\DC-UPDATE_DT.Outputs[Derived Column Output].Columns[SCHEDULED]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[row_id]"
                          dataType="i4"
                          name="row_id" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[INTEGRATION_ID]"
                          dataType="wstr"
                          length="62"
                          name="INTEGRATION_ID" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[appointment_ext_id]"
                          dataType="wstr"
                          length="50"
                          name="appointment_ext_id" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[calendar_owner_integration_id]"
                          dataType="i4"
                          name="calendar_owner_integration_id" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[calendar_owner_userid]"
                          dataType="wstr"
                          length="50"
                          name="calendar_owner_userid" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[calendar_owner_first_name]"
                          dataType="wstr"
                          length="50"
                          name="calendar_owner_first_name" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[calendar_owner_last_name]"
                          dataType="wstr"
                          length="50"
                          name="calendar_owner_last_name" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[calendar_owner_institutional_email]"
                          dataType="wstr"
                          length="150"
                          name="calendar_owner_institutional_email" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[participant_integration_id]"
                          dataType="wstr"
                          length="10"
                          name="participant_integration_id" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[participant_userid]"
                          dataType="wstr"
                          length="50"
                          name="participant_userid" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[participant_first_name]"
                          dataType="wstr"
                          length="50"
                          name="participant_first_name" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[participant_last_name]"
                          dataType="wstr"
                          length="50"
                          name="participant_last_name" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[participant_institutional_email]"
                          dataType="wstr"
                          length="150"
                          name="participant_institutional_email" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[participant_alternate_email]"
                          dataType="wstr"
                          length="150"
                          name="participant_alternate_email" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[appointment_type_reason]"
                          dataType="wstr"
                          length="4000"
                          name="appointment_type_reason" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[appointment_start_date]"
                          dataType="dbTimeStamp"
                          name="appointment_start_date" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[appointment_end_date]"
                          dataType="dbTimeStamp"
                          name="appointment_end_date" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[appointment_location]"
                          dataType="wstr"
                          length="100"
                          name="appointment_location" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[appointment_description]"
                          dataType="wstr"
                          length="4000"
                          name="appointment_description" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[appointment_comment]"
                          dataType="wstr"
                          length="4000"
                          name="appointment_comment" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[canceled_date]"
                          dataType="dbTimeStamp"
                          name="canceled_date" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[course_section_id]"
                          dataType="wstr"
                          length="50"
                          name="course_section_id" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[no_show]"
                          dataType="wstr"
                          length="10"
                          name="no_show" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[appointment_type]"
                          dataType="wstr"
                          length="500"
                          name="appointment_type" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[arrival_time]"
                          dataType="wstr"
                          length="50"
                          name="arrival_time" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[wait_time]"
                          dataType="i2"
                          name="wait_time" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[actual_start_date]"
                          dataType="dbTimeStamp"
                          name="actual_start_date" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[actual_end_date]"
                          dataType="dbTimeStamp"
                          name="actual_end_date" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[actual_duration]"
                          dataType="i4"
                          name="actual_duration" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[scheduled_duration]"
                          dataType="i4"
                          name="scheduled_duration" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[scheduled]"
                          dataType="wstr"
                          length="10"
                          name="scheduled" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[waiting_room_status]"
                          dataType="wstr"
                          length="100"
                          name="waiting_room_status" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[activities]"
                          dataType="wstr"
                          length="4000"
                          name="activities" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[DELETE_FLG]"
                          dataType="wstr"
                          length="1"
                          name="DELETE_FLG" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[INSERT_DT]"
                          dataType="dbTimeStamp"
                          name="INSERT_DT" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[UPDATE_DT]"
                          dataType="dbTimeStamp"
                          name="UPDATE_DT" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[ETL_SOURCE]"
                          dataType="wstr"
                          length="15"
                          name="ETL_SOURCE" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[Hash_DW]"
                          dataType="wstr"
                          length="62"
                          name="Hash_DW" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[FileImported]"
                          dataType="wstr"
                          length="100"
                          name="FileImported" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[FileCreated_On]"
                          dataType="wstr"
                          length="25"
                          name="FileCreated_On" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[FileSize]"
                          dataType="i4"
                          name="FileSize" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[class_term_code]"
                          dataType="wstr"
                          length="10"
                          name="class_term_code" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[class_session_code]"
                          dataType="wstr"
                          length="10"
                          name="class_session_code" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[crse_car_code]"
                          dataType="wstr"
                          length="10"
                          name="crse_car_code" />
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input].ExternalColumns[class_nbr]"
                          dataType="wstr"
                          length="10"
                          name="class_nbr" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt"
                  componentClassID="Microsoft.OLEDBCommand"
                  contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                  name="UPDATE etl-starfish_appt"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">UPDATE [etl].[starfish_appointments]
SET [appointment_ext_id] = ?
	,[calendar_owner_integration_id] = ?
	,[calendar_owner_userid] = ?
	,[calendar_owner_first_name] = ?
	,[calendar_owner_last_name] = ?
	,[calendar_owner_institutional_email] = ?
	,[participant_integration_id] = ?
	,[participant_userid] = ?
	,[participant_first_name] = ?
	,[participant_last_name] = ?
	,[participant_institutional_email] = ?
	,[participant_alternate_email] = ?
	,[appointment_type_reason] = ?
	,[appointment_start_date] = ?
	,[appointment_end_date] = ?
	,[appointment_location] = ?
	,[appointment_description] = ?
	,[appointment_comment] = ?
	,[canceled_date] = ?
	,[course_section_id] = ?
	,[class_term_code] = ?
                ,[class_session_code] = ?
                ,[crse_car_code] = ?
                ,[class_nbr] = ?
	,[no_show] = ?
	,[appointment_type] = ?
	,[arrival_time] = ?
	,[wait_time] = ?
	,[actual_start_date] = ?
	,[actual_end_date] = ?
	,[actual_duration] = ?
	,[scheduled_duration] = ?
	,[scheduled] = ?
	,[waiting_room_status] = ?
	,[activities] = ?
	,[INSERT_DT] = ?
	,[UPDATE_DT] = ?
	,[ETL_SOURCE] = ?
	,[FileImported] = ?
	,[FileCreated_On] = ?
	,[FileSize] = ?
	,[Hash_DW] = ?
WHERE [INTEGRATION_ID] = ?
</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.IDR]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.IDR]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input]"
                      errorOrTruncationOperation="Command Execution"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Command Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[appointment_ext_id_str]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="appointment_ext_id_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[appointment_ext_id_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[calendar_owner_integration_id_int]"
                          cachedDataType="i4"
                          cachedName="calendar_owner_integration_id_int"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[calendar_owner_integration_id_int]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[calendar_owner_userid_str]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="calendar_owner_userid_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[calendar_owner_userid_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[calendar_owner_first_name_str]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="calendar_owner_first_name_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[calendar_owner_first_name_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[calendar_owner_last_name_str]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="calendar_owner_last_name_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[calendar_owner_last_name_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[calendar_owner_institutional_email_str]"
                          cachedDataType="wstr"
                          cachedLength="150"
                          cachedName="calendar_owner_institutional_email_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[calendar_owner_institutional_email_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[participant_integration_id_str]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="participant_integration_id_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[participant_integration_id_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[participant_userid_str]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="participant_userid_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[participant_userid_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[participant_first_name_str]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="participant_first_name_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_8]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[participant_first_name_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[participant_last_name_str]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="participant_last_name_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_9]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[participant_last_name_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[participant_institutional_email_str]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="participant_institutional_email_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_10]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[participant_institutional_email_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[participant_alternate_email_str]"
                          cachedDataType="wstr"
                          cachedLength="150"
                          cachedName="participant_alternate_email_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_11]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[participant_alternate_email_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[appointment_type_reason_str]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="appointment_type_reason_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_12]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[appointment_type_reason_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[appointment_start_date_DT]"
                          cachedDataType="dbTimeStamp"
                          cachedName="appointment_start_date_DT"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_13]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[appointment_start_date_DT]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[appointment_end_date_DT]"
                          cachedDataType="dbTimeStamp"
                          cachedName="appointment_end_date_DT"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_14]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[appointment_end_date_DT]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[appointment_location_str]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="appointment_location_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_15]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[appointment_location_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[appointment_description_str]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="appointment_description_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_16]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[appointment_description_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[appointment_comment_str]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="appointment_comment_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_17]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[appointment_comment_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[canceled_date_DT]"
                          cachedDataType="dbTimeStamp"
                          cachedName="canceled_date_DT"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_18]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[canceled_date_DT]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[course_section_id_str]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="course_section_id_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_19]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[course_section_id_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[CLASS_TERM_CODE]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="CLASS_TERM_CODE"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_20]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[CLASS_TERM_CODE]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[CLASS_SESSION_CODE]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="CLASS_SESSION_CODE"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_21]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[CLASS_SESSION_CODE]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[CRSE_CAR_CODE]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="CRSE_CAR_CODE"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_22]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[CRSE_CAR_CODE]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[CLASS_NBR]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="CLASS_NBR"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_23]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[CLASS_NBR]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[no_show_str]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="no_show_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_24]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[no_show_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[appointment_type_str]"
                          cachedDataType="wstr"
                          cachedLength="500"
                          cachedName="appointment_type_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_25]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[appointment_type_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[arrival_time_dt]"
                          cachedDataType="dbTimeStamp"
                          cachedName="arrival_time_dt"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_26]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[arrival_time_dt]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[wait_time_int]"
                          cachedDataType="i4"
                          cachedName="wait_time_int"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_27]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[wait_time_int]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[actual_start_date_dt]"
                          cachedDataType="dbTimeStamp"
                          cachedName="actual_start_date_dt"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_28]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[actual_start_date_dt]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[actual_end_date_dt]"
                          cachedDataType="dbTimeStamp"
                          cachedName="actual_end_date_dt"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_29]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[actual_end_date_dt]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[actual_duration_int]"
                          cachedDataType="i4"
                          cachedName="actual_duration_int"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_30]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[actual_duration_int]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[scheduled_duration_int]"
                          cachedDataType="i4"
                          cachedName="scheduled_duration_int"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_31]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[scheduled_duration_int]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[waiting_room_status_str]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="waiting_room_status_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_33]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[waiting_room_status_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[activities_str]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="activities_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_34]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[activities_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[OLE DB Source.INSERT_DT]"
                          cachedDataType="dbTimeStamp"
                          cachedName="OLE DB Source.INSERT_DT"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_35]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[OLE DB Source.INSERT_DT]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[ETL_SOURCE_str]"
                          cachedDataType="wstr"
                          cachedLength="15"
                          cachedName="ETL_SOURCE_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_37]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[ETL_SOURCE_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[FileImported_str]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="FileImported_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_38]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[FileImported_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[FileCreated_On_str]"
                          cachedDataType="wstr"
                          cachedLength="25"
                          cachedName="FileCreated_On_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_39]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[FileCreated_On_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[FileSize_int]"
                          cachedDataType="i4"
                          cachedName="FileSize_int"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_40]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[FileSize_int]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[Hash_DW_str]"
                          cachedDataType="wstr"
                          cachedLength="62"
                          cachedName="Hash_DW_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_41]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[Hash_DW_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[INTEGRATION_ID_str]"
                          cachedDataType="wstr"
                          cachedLength="62"
                          cachedName="INTEGRATION_ID_str"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_42]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output].Columns[INTEGRATION_ID_str]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[UPDATE_DT]"
                          cachedDataType="dbTimeStamp"
                          cachedName="UPDATE_DT"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_36]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\DC-UPDATE_DT.Outputs[Derived Column Output].Columns[UPDATE_DT]" />
                        <inputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].Columns[SCHEDULED]"
                          cachedDataType="wstr"
                          cachedLength="9"
                          cachedName="SCHEDULED"
                          externalMetadataColumnId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_32]"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\DC-UPDATE_DT.Outputs[Derived Column Output].Columns[SCHEDULED]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                          dataType="wstr"
                          length="50"
                          name="Param_0">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                          dataType="i4"
                          name="Param_1">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                          dataType="wstr"
                          length="50"
                          name="Param_2">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                          dataType="wstr"
                          length="50"
                          name="Param_3">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                          dataType="wstr"
                          length="50"
                          name="Param_4">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                          dataType="wstr"
                          length="150"
                          name="Param_5">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                          dataType="wstr"
                          length="10"
                          name="Param_6">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                          dataType="wstr"
                          length="50"
                          name="Param_7">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_8]"
                          dataType="wstr"
                          length="50"
                          name="Param_8">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_9]"
                          dataType="wstr"
                          length="50"
                          name="Param_9">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_10]"
                          dataType="wstr"
                          length="150"
                          name="Param_10">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_11]"
                          dataType="wstr"
                          length="150"
                          name="Param_11">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_12]"
                          dataType="wstr"
                          length="4000"
                          name="Param_12">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_13]"
                          dataType="dbTimeStamp"
                          name="Param_13">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_14]"
                          dataType="dbTimeStamp"
                          name="Param_14">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_15]"
                          dataType="wstr"
                          length="100"
                          name="Param_15">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_16]"
                          dataType="wstr"
                          length="4000"
                          name="Param_16">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_17]"
                          dataType="wstr"
                          length="4000"
                          name="Param_17">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_18]"
                          dataType="dbTimeStamp"
                          name="Param_18">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">1073741889</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_19]"
                          dataType="wstr"
                          length="50"
                          name="Param_19">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">1073741889</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_20]"
                          dataType="wstr"
                          length="10"
                          name="Param_20">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_21]"
                          dataType="wstr"
                          length="10"
                          name="Param_21">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_22]"
                          dataType="wstr"
                          length="10"
                          name="Param_22">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_23]"
                          dataType="wstr"
                          length="10"
                          name="Param_23">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_24]"
                          dataType="wstr"
                          length="10"
                          name="Param_24">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_25]"
                          dataType="wstr"
                          length="500"
                          name="Param_25">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_26]"
                          dataType="wstr"
                          length="50"
                          name="Param_26">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_27]"
                          dataType="i2"
                          name="Param_27">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_28]"
                          dataType="dbTimeStamp"
                          name="Param_28">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_29]"
                          dataType="dbTimeStamp"
                          name="Param_29">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_30]"
                          dataType="i4"
                          name="Param_30">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_31]"
                          dataType="i4"
                          name="Param_31">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_32]"
                          dataType="wstr"
                          length="10"
                          name="Param_32">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_33]"
                          dataType="wstr"
                          length="100"
                          name="Param_33">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_34]"
                          dataType="wstr"
                          length="4000"
                          name="Param_34">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_35]"
                          dataType="dbTimeStamp"
                          name="Param_35">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_36]"
                          dataType="dbTimeStamp"
                          name="Param_36">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_37]"
                          dataType="wstr"
                          length="15"
                          name="Param_37">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_38]"
                          dataType="wstr"
                          length="100"
                          name="Param_38">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_39]"
                          dataType="wstr"
                          length="25"
                          name="Param_39">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_40]"
                          dataType="i4"
                          name="Param_40">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_41]"
                          dataType="wstr"
                          length="62"
                          name="Param_41">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input].ExternalColumns[Param_42]"
                          dataType="wstr"
                          length="62"
                          name="Param_42">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Outputs[OLE DB Command Output]"
                      exclusionGroup="1"
                      name="OLE DB Command Output"
                      synchronousInputId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Outputs[OLE DB Command Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Command Error Output"
                      synchronousInputId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table.Paths[Data Conversion Output]"
                  endId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Lookup.Inputs[Lookup Input]"
                  name="Data Conversion Output"
                  startId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table.Paths[Derived Column Output]"
                  endId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Script Component Split.Inputs[Input 0]"
                  name="Derived Column Output"
                  startId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\DC-UPDATE_DT.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table.Paths[ExistinRecords]"
                  endId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Rows Updated.Inputs[Row Count Input 1]"
                  name="ExistinRecords"
                  startId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Conditional Split.Outputs[Not Matched-Hash]" />
                <path
                  refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table.Paths[Lookup Match Output]"
                  endId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Conditional Split.Inputs[Conditional Split Input]"
                  name="Lookup Match Output"
                  startId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Lookup.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table.Paths[Lookup No Match Output]"
                  endId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments.Inputs[OLE DB Destination Input]"
                  name="Lookup No Match Output"
                  startId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Lookup.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table.Paths[Matched-Hash]"
                  endId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Rows Matched.Inputs[Row Count Input 1]"
                  name="Matched-Hash"
                  startId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Conditional Split.Outputs[Matched-Hash]" />
                <path
                  refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table.Paths[OLE DB Source Output]"
                  endId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\DC-UPDATE_DT.Inputs[Derived Column Input]"
                  name="OLE DB Source Output"
                  startId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage.Outputs[OLE DB Source Output]" />
                <path
                  refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table.Paths[Output 0]"
                  endId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion.Inputs[Data Conversion Input]"
                  name="Output 0"
                  startId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Script Component Split.Outputs[Output 0]" />
                <path
                  refId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table.Paths[Row Count Output 1]"
                  endId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt.Inputs[OLE DB Command Input]"
                  name="Row Count Output 1"
                  startId="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Rows Updated.Outputs[Row Count Output 1]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Updating Table appointments on IDR\Successul Transfer Send Mail Task"
          DTS:CreationName="Microsoft.SendMailTask"
          DTS:Description="Send Mail Task"
          DTS:DTSID="{BEF40AD2-A97E-4786-B0B9-AB12A5D939A5}"
          DTS:ExecutableType="Microsoft.SendMailTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Successul Transfer Send Mail Task"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:PropertyExpression
            DTS:Name="FromLine">@[User::Email_id_sender]</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="MessageSource">"Starfish importer Inserted  " +  (DT_STR, 10,1252) @[User::RowsInserted] +", Updated "+ (DT_STR, 10,1252)  @[User::RowsUpdated] + " and Removed " +(DT_STR, 10,1252) @[User::RowsDeleted] +"  records " + " on " +  @[System::MachineName] + " !"</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="ToLine">@[User::Email_id_receiver]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SendMailTask:SendMailTaskData
              SendMailTask:SMTPServer="{C23A715E-7872-4EBD-9259-328B5690DD1E}"
              SendMailTask:From="umg-up.biteam.datawarehouse@pennstateoffice365.onmicrosoft.com"
              SendMailTask:To="L-DWEMAIL@LISTS.PSU.EDU"
              SendMailTask:Subject="Starfish Apointments Import Status"
              SendMailTask:MessageSource="Starfish importer Inserted  0, Updated 0 and Removed 0  records  on S8-WHSE-SQL-T01 !" xmlns:SendMailTask="www.microsoft.com/sqlserver/dts/tasks/sendmailtask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Updating Table appointments on IDR.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{007A773B-7452-408F-8EC9-5BC0D46B7FA7}"
          DTS:From="Package\Updating Table appointments on IDR\Incrimental Update appointments Table"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Updating Table appointments on IDR\Successul Transfer Send Mail Task" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{ABFBB9D6-1039-4C0F-974D-34333C76D29A}"
      DTS:EvalOp="3"
      DTS:Expression="@[User::IsFound]==true"
      DTS:From="Package\Check for File"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Files is missing Mail"
      DTS:Value="1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{3600F9C5-DABC-46CB-B0E8-1EA34B2E9047}"
      DTS:EvalOp="3"
      DTS:Expression="@[User::IsFound] ==false"
      DTS:From="Package\Check for File"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Loop Trought All Appointment Files" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{8CB0C6F4-C04A-4D75-AE27-8B553AB3AAB0}"
      DTS:From="Package\Loop Trought All Appointment Files"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Updating Table appointments on IDR" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{3BF20B15-099D-47B4-883C-A300FEF40E69}"
      DTS:From="Package\Loop Trought All Appointment Files"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Error Mail"
      DTS:Value="1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{39F67C8F-E94F-4936-B45A-6DAC793A1A2E}"
      DTS:From="Package\Updating Table appointments on IDR"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Moving File" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{A2F962EC-2320-49FD-8053-E3A4EC7C83CC}"
      DTS:From="Package\Moving File"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Error Mail"
      DTS:Value="1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{A0481E9C-7FB9-41E9-AA77-D1CBAF5058CD}"
      DTS:From="Package\Truncate table sf_appointments"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\Check for File" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 9]"
      DTS:CreationName=""
      DTS:DTSID="{195F5C55-26CA-4F51-A8D7-531A886914C9}"
      DTS:From="Package\Updating Table appointments on IDR"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 9"
      DTS:To="Package\Error Mail"
      DTS:Value="1" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="142,42"
          Id="Package\Check for File\Get File Size"
          TopLeft="42,107.5" />
        <NodeLayout
          Size="215,42"
          Id="Package\Check for File\Is Appontment*-csv Present"
          TopLeft="5.50000000000001,5.5" />
        <EdgeLayout
          Id="Package\Check for File.PrecedenceConstraints[Constraint]"
          TopLeft="113,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="226,204"
          Size="226,247"
          Id="Package\Check for File"
          TopLeft="268,107.5" />
        <NodeLayout
          Size="127,42"
          Id="Package\Error Mail"
          TopLeft="255.5,1239" />
        <NodeLayout
          Size="177,42"
          Id="Package\Files is missing Mail"
          TopLeft="18.5,467.5" />
        <NodeLayout
          Size="239,42"
          Id="Package\Loop Trought All Appointment Files\Importing Appointments to Stage"
          TopLeft="5.5,5.5" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="250,103"
          Size="250,146"
          Id="Package\Loop Trought All Appointment Files"
          TopLeft="256,415.5" />
        <NodeLayout
          Size="137,42"
          Id="Package\Moving File\Archive File"
          TopLeft="270,5.49999999999989" />
        <NodeLayout
          Size="193,42"
          Id="Package\Moving File\Files  Moved to Archive"
          TopLeft="242,108" />
        <NodeLayout
          Size="202,42"
          Id="Package\Moving File\Files Not Moved Problem"
          TopLeft="495.5,108" />
        <NodeLayout
          Size="162,42"
          Id="Package\Moving File\Find Junk Files\Delete  Junk Files"
          TopLeft="5.5,5.5" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="False"
          PanelSize="176,103"
          Size="176,43"
          Id="Package\Moving File\Find Junk Files"
          TopLeft="5.50000000000006,107.5" />
        <EdgeLayout
          Id="Package\Moving File.PrecedenceConstraints[Constraint]"
          TopLeft="306.25,47.4999999999999">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-212.75,60.0000000000001"
              Start="0,0"
              End="-212.75,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.763723150358" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.763723150358"
                    Point2="0,20.763723150358"
                    Point3="-4,20.763723150358" />
                  <mssgle:LineSegment
                    End="-208.75,20.763723150358" />
                  <mssgle:CubicBezierSegment
                    Point1="-208.75,20.763723150358"
                    Point2="-212.75,20.763723150358"
                    Point3="-212.75,24.763723150358" />
                  <mssgle:LineSegment
                    End="-212.75,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Moving File.PrecedenceConstraints[Constraint 1]"
          TopLeft="338.5,47.4999999999999">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60.5000000000001"
              Start="0,0"
              End="0,53.0000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,53.0000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Moving File.PrecedenceConstraints[Constraint 2]"
          TopLeft="370.75,47.4999999999999">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="225.75,60.5000000000001"
              Start="0,0"
              End="225.75,53.0000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.936754176611" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.936754176611"
                    Point2="0,20.936754176611"
                    Point3="4,20.936754176611" />
                  <mssgle:LineSegment
                    End="221.75,20.936754176611" />
                  <mssgle:CubicBezierSegment
                    Point1="221.75,20.936754176611"
                    Point2="225.75,20.936754176611"
                    Point3="225.75,24.936754176611" />
                  <mssgle:LineSegment
                    End="225.75,53.0000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="97.63365234375,25.936754176611,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="703,206"
          Size="703,249"
          Id="Package\Moving File"
          TopLeft="504,943.5" />
        <NodeLayout
          Size="233,42"
          Id="Package\Truncate table sf_appointments"
          TopLeft="264.5,5.5" />
        <NodeLayout
          Size="271,42"
          Id="Package\Updating Table appointments on IDR\Incrimental Update appointments Table"
          TopLeft="5.5,5.5" />
        <NodeLayout
          Size="252,42"
          Id="Package\Updating Table appointments on IDR\Successul Transfer Send Mail Task"
          TopLeft="15,107.5" />
        <EdgeLayout
          Id="Package\Updating Table appointments on IDR.PrecedenceConstraints[Constraint 1]"
          TopLeft="141,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="282,205"
          Size="282,248"
          Id="Package\Updating Table appointments on IDR"
          TopLeft="38.0000000000001,621.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="344.666666666667,354.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-237.666666666667,113"
              Start="0,0"
              End="-237.666666666667,105.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.676625659051" />
                  <mssgle:CubicBezierSegment
                    Point1="0,41.676625659051"
                    Point2="0,45.676625659051"
                    Point3="-4,45.676625659051" />
                  <mssgle:LineSegment
                    End="-233.666666666667,45.676625659051" />
                  <mssgle:CubicBezierSegment
                    Point1="-233.666666666667,45.676625659051"
                    Point2="-237.666666666667,45.676625659051"
                    Point3="-237.666666666667,49.676625659051" />
                  <mssgle:LineSegment
                    End="-237.666666666667,105.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-142.943333333333,50.676625659051,48.22,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="417.333333333333,354.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-36.3333333333333,61"
              Start="0,0"
              End="-36.3333333333333,53.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.6572934973638" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.6572934973638"
                    Point2="0,24.6572934973638"
                    Point3="-4,24.6572934973638" />
                  <mssgle:LineSegment
                    End="-32.3333333333333,24.6572934973638" />
                  <mssgle:CubicBezierSegment
                    Point1="-32.3333333333333,24.6572934973638"
                    Point2="-36.3333333333333,24.6572934973638"
                    Point3="-36.3333333333333,28.6572934973638" />
                  <mssgle:LineSegment
                    End="-36.3333333333333,53.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-26.1666666666667,29.6572934973638,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="340.666666666667,561.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-161.666666666667,60"
              Start="0,0"
              End="-161.666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.2289348171701" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.2289348171701"
                    Point2="0,24.2289348171701"
                    Point3="-4,24.2289348171701" />
                  <mssgle:LineSegment
                    End="-157.666666666667,24.2289348171701" />
                  <mssgle:CubicBezierSegment
                    Point1="-157.666666666667,24.2289348171701"
                    Point2="-161.666666666667,24.2289348171701"
                    Point3="-161.666666666667,28.2289348171701" />
                  <mssgle:LineSegment
                    End="-161.666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="421.333333333333,561.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-72.5833333333333,677.5"
              Start="0,0"
              End="-72.5833333333333,670">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,375.617946691448" />
                  <mssgle:CubicBezierSegment
                    Point1="0,375.617946691448"
                    Point2="0,379.617946691448"
                    Point3="-4,379.617946691448" />
                  <mssgle:LineSegment
                    End="-68.5833333333333,379.617946691448" />
                  <mssgle:CubicBezierSegment
                    Point1="-68.5833333333333,379.617946691448"
                    Point2="-72.5833333333333,379.617946691448"
                    Point3="-72.5833333333333,383.617946691448" />
                  <mssgle:LineSegment
                    End="-72.5833333333333,670" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-51.5330143229166,384.617946691448,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="224.666666666667,869.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="630.833333333333,74"
              Start="0,0"
              End="630.833333333333,66.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.8504936530324" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.8504936530324"
                    Point2="0,29.8504936530324"
                    Point3="4,29.8504936530324" />
                  <mssgle:LineSegment
                    End="626.833333333333,29.8504936530324" />
                  <mssgle:CubicBezierSegment
                    Point1="626.833333333333,29.8504936530324"
                    Point2="630.833333333333,29.8504936530324"
                    Point3="630.833333333333,33.8504936530324" />
                  <mssgle:LineSegment
                    End="630.833333333333,66.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="855.5,1192.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-506.75,46.5"
              Start="0,0"
              End="-506.75,39">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.3624678663239" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26.3624678663239"
                    Point2="0,30.3624678663239"
                    Point3="-4,30.3624678663239" />
                  <mssgle:LineSegment
                    End="-502.75,30.3624678663239" />
                  <mssgle:CubicBezierSegment
                    Point1="-502.75,30.3624678663239"
                    Point2="-506.75,30.3624678663239"
                    Point3="-506.75,34.3624678663239" />
                  <mssgle:LineSegment
                    End="-506.75,39" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-268.61634765625,35.3624678663239,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="381,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 9]"
          TopLeft="224.666666666667,869.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="94.3333333333333,369.5"
              Start="0,0"
              End="94.3333333333333,362">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,145.05077574048" />
                  <mssgle:CubicBezierSegment
                    Point1="0,145.05077574048"
                    Point2="0,149.05077574048"
                    Point3="4,149.05077574048" />
                  <mssgle:LineSegment
                    End="90.3333333333333,149.05077574048" />
                  <mssgle:CubicBezierSegment
                    Point1="90.3333333333333,149.05077574048"
                    Point2="94.3333333333333,149.05077574048"
                    Point3="94.3333333333333,153.05077574048" />
                  <mssgle:LineSegment
                    End="94.3333333333333,362" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="31.9253190104167,154.05077574048,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="Parm - IDR_SF_Appointments&#xA;&#xA;Import data files from Starfish into idr.startfish.appointments table .&#xA;&#xA;Expects: one . CSV file per a day for tutoring appointments in this directory: F:\Dat\starfish&#xA;&#xA;The files follow this naming convention: appointments_20200422T034410.csv&#xA;&#xA;Loads the .CSV files into staging tables and then continues ETL with creating new fields from existing fields of  &#xA;stage table (sf_appointments) , integrates data from stage table&#xA;1. appointments_*.csv is not move necause it needs to processed for SIA integration&#xA;2. Keep only last valid entry&#xA;NOTE: The staging table &quot;sf_appointments&quot; is truncated every day &#xA;"
          ParentId="Package"
          FontInfo="{x:Null}"
          Size="612,247"
          Id="1d4e387f-9c4e-433e-a071-cc641d4fb000"
          TopLeft="548,99.5" />
        <AnnotationLayout
          Text="Do not enable : Moving File"
          ParentId="Package"
          FontInfo="{x:Null}"
          Size="175,40"
          Id="e9b3641c-18b3-458d-bf1a-8560bf2f4c66"
          TopLeft="40.0000000000001,880.5" />
        <AnnotationLayout
          Text="We are disabling this task because there is another process that will need files to be imported as well"
          ParentId="Package"
          FontInfo="{x:Null}"
          Size="318,60"
          Id="ccce9b00-e333-4873-a4bc-ddf40d14655d"
          TopLeft="873,850" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package\Error Mail.EventHandlers[OnPreValidate]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\Error Mail.EventHandlers[OnPreValidate]\Send Mail Task"
          TopLeft="NaN,NaN" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\Loop Trought All Appointment Files\Importing Appointments to Stage">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph" xmlns:mssge="clr-namespace:Microsoft.SqlServer.Graph.Extended;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
        <NodeLayout
          Size="283,42"
          Id="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors"
          TopLeft="5.5,413.5" />
        <NodeLayout
          Size="180,42"
          Id="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Set Script Parameters"
          TopLeft="368,107.5" />
        <NodeLayout
          Size="115,42"
          Id="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Lookup"
          TopLeft="400.5,617.5" />
        <NodeLayout
          Size="218,42"
          Id="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Check NULL in Arrival_Time"
          TopLeft="349,413.5" />
        <NodeLayout
          Size="245,42"
          Id="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments"
          TopLeft="32.5000000000002,826" />
        <NodeLayout
          Size="206,42"
          Id="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\New Parse Error Columns"
          TopLeft="99,311.5" />
        <NodeLayout
          Size="165,42"
          Id="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SCR _HashValue"
          TopLeft="375.5,515.5" />
        <NodeLayout
          Size="159,42"
          Id="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\MachedRecords"
          TopLeft="638.5,826" />
        <NodeLayout
          Size="221,42"
          Id="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Conditional Split Check Hash"
          TopLeft="347.5,719.5" />
        <NodeLayout
          Size="241,42"
          Id="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\SafeParse Flat File appointments"
          TopLeft="337.5,209.5" />
        <NodeLayout
          Size="151,42"
          Id="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Get Single Row"
          TopLeft="382.5,5.5" />
        <NodeLayout
          Size="133,42"
          Id="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Row Count"
          TopLeft="153.5,719.5" />
        <NodeLayout
          Size="185,42"
          Id="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Adding New Columns"
          TopLeft="365.5,311.5" />
        <NodeLayout
          Size="240,42"
          Id="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\CMD Update existing HashValue"
          TopLeft="338,826" />
        <EdgeLayout
          Id="Package\Loop Trought All Appointment Files\Importing Appointments to Stage.Paths[Row Count Output 1]"
          TopLeft="220,761.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-65,64.5000000000001"
              Start="0,0"
              End="-65,57.0000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.2500000000001" />
                  <mssgle:CubicBezierSegment
                    Point1="0,28.2500000000001"
                    Point2="0,32.2500000000001"
                    Point3="-4,32.2500000000001" />
                  <mssgle:LineSegment
                    End="-61,32.2500000000001" />
                  <mssgle:CubicBezierSegment
                    Point1="-61,32.2500000000001"
                    Point2="-65,32.2500000000001"
                    Point3="-65,36.2500000000001" />
                  <mssgle:LineSegment
                    End="-65,57.0000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop Trought All Appointment Files\Importing Appointments to Stage.Paths[Output 0]"
          TopLeft="458,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop Trought All Appointment Files\Importing Appointments to Stage.Paths[Output - Record Level Parse Errors]"
          TopLeft="419.166666666667,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-217.166666666667,60"
              Start="0,0"
              End="-217.166666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.237427864798" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.237427864798"
                    Point2="0,24.237427864798"
                    Point3="-4,24.237427864798" />
                  <mssgle:LineSegment
                    End="-213.166666666667,24.237427864798" />
                  <mssgle:CubicBezierSegment
                    Point1="-213.166666666667,24.237427864798"
                    Point2="-217.166666666667,24.237427864798"
                    Point3="-217.166666666667,28.237427864798" />
                  <mssgle:LineSegment
                    End="-217.166666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-186.088430989584,29.237427864798,155.0101953125,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop Trought All Appointment Files\Importing Appointments to Stage.Paths[Output - File Data]"
          TopLeft="496.833333333333,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-38.8333333333333,60"
              Start="0,0"
              End="-38.8333333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.237427864798" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.237427864798"
                    Point2="0,24.237427864798"
                    Point3="-4,24.237427864798" />
                  <mssgle:LineSegment
                    End="-34.8333333333333,24.237427864798" />
                  <mssgle:CubicBezierSegment
                    Point1="-34.8333333333333,24.237427864798"
                    Point2="-38.8333333333333,24.237427864798"
                    Point3="-38.8333333333333,28.237427864798" />
                  <mssgle:LineSegment
                    End="-38.8333333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-59.5125455729167,29.237427864798,80.1917578125,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop Trought All Appointment Files\Importing Appointments to Stage.Paths[OLE DB Source Output]"
          TopLeft="458,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop Trought All Appointment Files\Importing Appointments to Stage.Paths[Matched]"
          TopLeft="493.5,761.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="224.5,64.5"
              Start="0,0"
              End="224.5,57">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.078167115903" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.078167115903"
                    Point2="0,26.078167115903"
                    Point3="4,26.078167115903" />
                  <mssgle:LineSegment
                    End="220.5,26.078167115903" />
                  <mssgle:CubicBezierSegment
                    Point1="220.5,26.078167115903"
                    Point2="224.5,26.078167115903"
                    Point3="224.5,30.078167115903" />
                  <mssgle:LineSegment
                    End="224.5,57" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="93.31201171875,31.078167115903,37.8759765625,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop Trought All Appointment Files\Importing Appointments to Stage.Paths[Lookup No Match Output]"
          TopLeft="440.166666666667,659.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-220.166666666667,60"
              Start="0,0"
              End="-220.166666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4939965694683" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4939965694683"
                    Point2="0,24.4939965694683"
                    Point3="-4,24.4939965694683" />
                  <mssgle:LineSegment
                    End="-216.166666666667,24.4939965694683" />
                  <mssgle:CubicBezierSegment
                    Point1="-216.166666666667,24.4939965694683"
                    Point2="-220.166666666667,24.4939965694683"
                    Point3="-220.166666666667,28.4939965694683" />
                  <mssgle:LineSegment
                    End="-220.166666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-165.889720052084,29.4939965694683,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop Trought All Appointment Files\Importing Appointments to Stage.Paths[Lookup Match Output]"
          TopLeft="475.833333333334,659.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-17.8333333333333,60"
              Start="0,0"
              End="-17.8333333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4939965694683" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4939965694683"
                    Point2="0,24.4939965694683"
                    Point3="-4,24.4939965694683" />
                  <mssgle:LineSegment
                    End="-13.8333333333333,24.4939965694683" />
                  <mssgle:CubicBezierSegment
                    Point1="-13.8333333333333,24.4939965694683"
                    Point2="-17.8333333333333,24.4939965694683"
                    Point3="-17.8333333333333,28.4939965694683" />
                  <mssgle:LineSegment
                    End="-17.8333333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-57.1080533854167,29.4939965694683,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop Trought All Appointment Files\Importing Appointments to Stage.Paths[Derived Column Output3]"
          TopLeft="458,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop Trought All Appointment Files\Importing Appointments to Stage.Paths[Derived Column Output2]"
          TopLeft="202,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-55,60"
              Start="0,0"
              End="-55,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="-4,30" />
                  <mssgle:LineSegment
                    End="-51,30" />
                  <mssgle:CubicBezierSegment
                    Point1="-51,30"
                    Point2="-55,30"
                    Point3="-55,34" />
                  <mssgle:LineSegment
                    End="-55,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop Trought All Appointment Files\Importing Appointments to Stage.Paths[Derived Column Output1]"
          TopLeft="458,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop Trought All Appointment Files\Importing Appointments to Stage.Paths[Derived Column Output]"
          TopLeft="458,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,59.9999999999999"
              Start="0,0"
              End="0,52.4999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.4999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop Trought All Appointment Files\Importing Appointments to Stage.Paths[CheckumNotEqual]"
          TopLeft="422.5,761.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="35.5,64.5"
              Start="0,0"
              End="35.5,57">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.078167115903" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.078167115903"
                    Point2="0,26.078167115903"
                    Point3="4,26.078167115903" />
                  <mssgle:LineSegment
                    End="31.5,26.078167115903" />
                  <mssgle:CubicBezierSegment
                    Point1="31.5,26.078167115903"
                    Point2="35.5,26.078167115903"
                    Point3="35.5,30.078167115903" />
                  <mssgle:LineSegment
                    End="35.5,57" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-22.8046484375,31.078167115903,81.109296875,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="Calculate checksum value for non-key fields"
          ParentId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage"
          Size="200,NaN"
          Id="aeec4707-3b91-489e-ae20-06059405bccc"
          TopLeft="551,506.5">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Color="#FF000000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Add FileName and InsertDate"
          ParentId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage"
          Size="200,NaN"
          Id="01628568-1bbc-41c1-8450-8a37bcae095d"
          TopLeft="578,316.5">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Color="#FF000000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text=" A dummy column is one which has a value of one &#xA;when a categorical event occurs and a zero when it doesn’t occur."
          ParentId="Package\Loop Trought All Appointment Files\Importing Appointments to Stage"
          Size="350,NaN"
          Id="6a662e55-0e7c-4d59-a106-aa0fafa6e783"
          TopLeft="556,102.5">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Color="#FF000000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Push errors to starfish_ETL_Parse_Errors">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Lookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\DB Insert into idr-sf_appointments">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Loop Trought All Appointment Files\Importing Appointments to Stage\Get Single Row">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Updating Table appointments on IDR\Incrimental Update appointments Table">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="191,42"
          Id="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Script Component Split"
          TopLeft="378.5,209.5" />
        <NodeLayout
          Size="161,42"
          Id="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Data Conversion"
          TopLeft="393.5,311.5" />
        <NodeLayout
          Size="252,42"
          Id="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage"
          TopLeft="346,4" />
        <NodeLayout
          Size="115,42"
          Id="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Lookup"
          TopLeft="416.5,413.5" />
        <NodeLayout
          Size="152,42"
          Id="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Rows Matched"
          TopLeft="610.5,618.5" />
        <NodeLayout
          Size="164,42"
          Id="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\DC-UPDATE_DT"
          TopLeft="392,107.5" />
        <NodeLayout
          Size="205,42"
          Id="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\UPDATE etl-starfish_appt"
          TopLeft="371.5,719.5" />
        <NodeLayout
          Size="159,42"
          Id="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Conditional Split"
          TopLeft="394.5,515.5" />
        <NodeLayout
          Size="151,42"
          Id="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Rows Updated"
          TopLeft="400.5,617.5" />
        <NodeLayout
          Size="240,42"
          Id="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments"
          TopLeft="94.0000000000001,515.5" />
        <EdgeLayout
          Id="Package\Updating Table appointments on IDR\Incrimental Update appointments Table.Paths[Row Count Output 1]"
          TopLeft="475,659.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Updating Table appointments on IDR\Incrimental Update appointments Table.Paths[Output 0]"
          TopLeft="474,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Updating Table appointments on IDR\Incrimental Update appointments Table.Paths[OLE DB Source Output]"
          TopLeft="473,46">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,61.5"
              Start="0,0"
              End="0,54">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,54" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Updating Table appointments on IDR\Incrimental Update appointments Table.Paths[Matched-Hash]"
          TopLeft="499.166666666667,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="187.333333333333,61"
              Start="0,0"
              End="187.333333333333,53.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.7646326276463" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.7646326276463"
                    Point2="0,24.7646326276463"
                    Point3="4,24.7646326276463" />
                  <mssgle:LineSegment
                    End="183.333333333333,24.7646326276463" />
                  <mssgle:CubicBezierSegment
                    Point1="183.333333333333,24.7646326276463"
                    Point2="187.333333333333,24.7646326276463"
                    Point3="187.333333333333,28.7646326276463" />
                  <mssgle:LineSegment
                    End="187.333333333333,53.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="61.8747330729165,29.7646326276463,63.5838671875,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Updating Table appointments on IDR\Incrimental Update appointments Table.Paths[Lookup No Match Output]"
          TopLeft="456.166666666667,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-242.166666666667,60"
              Start="0,0"
              End="-242.166666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4939965694683" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4939965694683"
                    Point2="0,24.4939965694683"
                    Point3="-4,24.4939965694683" />
                  <mssgle:LineSegment
                    End="-238.166666666667,24.4939965694683" />
                  <mssgle:CubicBezierSegment
                    Point1="-238.166666666667,24.4939965694683"
                    Point2="-242.166666666667,24.4939965694683"
                    Point3="-242.166666666667,28.4939965694683" />
                  <mssgle:LineSegment
                    End="-242.166666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-176.889720052084,29.4939965694683,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Updating Table appointments on IDR\Incrimental Update appointments Table.Paths[Lookup Match Output]"
          TopLeft="491.833333333333,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-17.8333333333333,60"
              Start="0,0"
              End="-17.8333333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4939965694683" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4939965694683"
                    Point2="0,24.4939965694683"
                    Point3="-4,24.4939965694683" />
                  <mssgle:LineSegment
                    End="-13.8333333333333,24.4939965694683" />
                  <mssgle:CubicBezierSegment
                    Point1="-13.8333333333333,24.4939965694683"
                    Point2="-17.8333333333333,24.4939965694683"
                    Point3="-17.8333333333333,28.4939965694683" />
                  <mssgle:LineSegment
                    End="-17.8333333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-57.1080533854167,29.4939965694683,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Updating Table appointments on IDR\Incrimental Update appointments Table.Paths[ExistinRecords]"
          TopLeft="448.833333333333,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="27.1666666666667,60"
              Start="0,0"
              End="27.1666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3586550435865" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3586550435865"
                    Point2="0,24.3586550435865"
                    Point3="4,24.3586550435865" />
                  <mssgle:LineSegment
                    End="23.1666666666667,24.3586550435865" />
                  <mssgle:CubicBezierSegment
                    Point1="23.1666666666667,24.3586550435865"
                    Point2="27.1666666666667,24.3586550435865"
                    Point3="27.1666666666667,28.3586550435865" />
                  <mssgle:LineSegment
                    End="27.1666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-27.4936002604166,29.3586550435865,82.1538671875,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Updating Table appointments on IDR\Incrimental Update appointments Table.Paths[Derived Column Output]"
          TopLeft="474,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Updating Table appointments on IDR\Incrimental Update appointments Table.Paths[Data Conversion Output]"
          TopLeft="474,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\OLE DB Most recent  Source Stage">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\Lookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Updating Table appointments on IDR\Incrimental Update appointments Table\SQL Insert starfish-appointments">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>